<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BLToolkit.3</name>
    </assembly>
    <members>
        <member name="T:BLToolkit.Data.DataProvider.SqlDataProviderBase">
            <summary>
            Implements access to the Data Provider for SQL Server.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
        </member>
        <member name="T:BLToolkit.Data.DataProvider.DataProviderBase">
            <summary>
            The <b>DataProviderBase</b> is a class that provides specific data provider information
            for the <see cref="T:BLToolkit.Data.DbManager"/> class. 
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
        </member>
        <member name="M:BLToolkit.Data.DataProvider.DataProviderBase.CreateConnectionObject">
            <summary>
            Creates a new instance of the <see cref="T:System.Data.IDbConnection"/>.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <returns>The <see cref="T:System.Data.IDbConnection"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DataProvider.DataProviderBase.CloneConnection(System.Data.IDbConnection)">
            <summary>
            Creates a new connection object with same connection string.
            </summary>
            <param name="connection">A connection object used as prototype.</param>
            <returns>New connection instance.</returns>
        </member>
        <member name="M:BLToolkit.Data.DataProvider.DataProviderBase.CreateDataAdapterObject">
            <summary>
            Creates an instance of the <see cref="T:System.Data.Common.DbDataAdapter"/>.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <returns>The <see cref="T:System.Data.Common.DbDataAdapter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DataProvider.DataProviderBase.DeriveParameters(System.Data.IDbCommand)">
            <summary>
            Populates the specified <see cref="T:System.Data.IDbCommand"/> object's Parameters collection with 
            parameter information for the stored procedure specified in the <see cref="T:System.Data.IDbCommand"/>.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <param name="command">The <see cref="T:System.Data.IDbCommand"/> referencing the stored procedure 
            for which the parameter information is to be derived.
            The derived parameters will be populated into the Parameters of this command.</param>
            <returns>true - parameters can be derive.</returns>
        </member>
        <member name="M:BLToolkit.Data.DataProvider.DataProviderBase.Configure(System.Collections.Specialized.NameValueCollection)">
            <summary>
            One time initialization from a configuration file.
            </summary>
            <param name="attributes">Provider specific attributes.</param>
        </member>
        <member name="P:BLToolkit.Data.DataProvider.DataProviderBase.ConnectionType">
            <summary>
            Returns an actual type of the connection object used by this instance of the <see cref="T:BLToolkit.Data.DbManager"/>.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <value>An instance of the <see cref="T:System.Type"/> class.</value>
        </member>
        <member name="P:BLToolkit.Data.DataProvider.DataProviderBase.Name">
            <summary>
            Returns the data manager name.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <value>The data manager name.</value>
        </member>
        <member name="P:BLToolkit.Data.DataProvider.DataProviderBase.UniqueName">
            <summary>
            Same as <see cref="P:BLToolkit.Data.DataProvider.DataProviderBase.Name"/>, but may be overridden to add two or more providers of same type.
            </summary>
        </member>
        <member name="M:BLToolkit.Data.DataProvider.SqlDataProviderBase.CreateConnectionObject">
            <summary>
            Creates the database connection object.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <returns>The database connection object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DataProvider.SqlDataProviderBase.CreateDataAdapterObject">
            <summary>
            Creates the data adapter object.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <returns>A data adapter object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DataProvider.SqlDataProviderBase.DeriveParameters(System.Data.IDbCommand)">
            <summary>
            Populates the specified <see cref="T:System.Data.IDbCommand"/> object's Parameters collection with 
            parameter information for the stored procedure specified in the <see cref="T:System.Data.IDbCommand"/>.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <param name="command">The <see cref="T:System.Data.IDbCommand"/> referencing the stored procedure for which the parameter
            information is to be derived. The derived parameters will be populated into the 
            Parameters of this command.</param>
        </member>
        <member name="P:BLToolkit.Data.DataProvider.SqlDataProviderBase.ConnectionType">
            <summary>
            Returns connection type.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <value>An instance of the <see cref="T:System.Type"/> class.</value>
        </member>
        <member name="P:BLToolkit.Data.DataProvider.SqlDataProviderBase.Name">
            <summary>
            Returns the data provider name.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataProvider Method</seealso>
            <value>Data provider name.</value>
        </member>
        <member name="T:BLToolkit.Aspects.NoCacheAttribute">
            <summary>
            http://www.bltoolkit.net/Doc/Aspects/index.htm
            </summary>
        </member>
        <member name="T:BLToolkit.BLToolkitConstants">
            <summary>
            Global library constants.
            </summary>
        </member>
        <member name="F:BLToolkit.BLToolkitConstants.MajorVersion">
            <summary>
            Major component of version.
            </summary>
        </member>
        <member name="F:BLToolkit.BLToolkitConstants.MinorVersion">
            <summary>
            Minor component of version.
            </summary>
        </member>
        <member name="F:BLToolkit.BLToolkitConstants.Build">
            <summary>
            Build component of version.
            </summary>
        </member>
        <member name="F:BLToolkit.BLToolkitConstants.FullVersionString">
            <summary>
            Full version string.
            </summary>
        </member>
        <member name="F:BLToolkit.BLToolkitConstants.FullVersion">
            <summary>
            Full BLT version.
            </summary>
        </member>
        <member name="F:BLToolkit.Data.Linq.Builder.RequestFor.Table">
            <summary>
            Checks the sequence if the expression is a table or an association.
            </summary>
        </member>
        <member name="F:BLToolkit.Data.Linq.Builder.RequestFor.Association">
            <summary>
            Checks the sequence if the expression is an association.
            </summary>
        </member>
        <member name="F:BLToolkit.Data.Linq.Builder.RequestFor.Object">
            <summary>
            Checks the sequence if the expression is a table, an association, new {}, or new MyClass {}.
            </summary>
        </member>
        <member name="F:BLToolkit.Data.Linq.Builder.RequestFor.GroupJoin">
            <summary>
            Checks the sequence if the expression is a group join.
            </summary>
        </member>
        <member name="F:BLToolkit.Data.Linq.Builder.RequestFor.Field">
            <summary>
            Checks the sequence if the expression is a field.
            </summary>
        </member>
        <member name="F:BLToolkit.Data.Linq.Builder.RequestFor.Expression">
            <summary>
            Checks the sequence if the expression contains an SQL expression.
            </summary>
        </member>
        <member name="F:BLToolkit.Data.Linq.Builder.RequestFor.SubQuery">
            <summary>
            Checks the context if it's a subquery.
            </summary>
        </member>
        <member name="F:BLToolkit.Data.Linq.Builder.RequestFor.Root">
            <summary>
            Checks the context if it's a root of the expression.
            </summary>
        </member>
        <member name="T:BLToolkit.Reflection.Extension.TypeExtensionException">
            <summary>
            Defines the base class for the namespace exceptions.
            </summary>
            <remarks>
            This class is the base class for exceptions that may occur during
            execution of the namespace members.
            </remarks>
        </member>
        <member name="M:BLToolkit.Reflection.Extension.TypeExtensionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Reflection.Extension.TypeExtensionException"/> class.
            </summary>
            <remarks>
            This constructor initializes the <see cref="P:System.Exception.Message"/>
            property of the new instance 
            to a system-supplied message that describes the error, 
            such as "BLToolkit Type Extension error has occurred."
            </remarks>
        </member>
        <member name="M:BLToolkit.Reflection.Extension.TypeExtensionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Reflection.Extension.TypeExtensionException"/> class 
            with the specified error message.
            </summary>
            <param name="message">The message to display to the client when the
            exception is thrown.</param>
            <seealso cref="P:System.Exception.Message"/>
        </member>
        <member name="M:BLToolkit.Reflection.Extension.TypeExtensionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Reflection.Extension.TypeExtensionException"/> class 
            with the specified error message and InnerException property.
            </summary>
            <param name="message">The message to display to the client when the
            exception is thrown.</param>
            <param name="innerException">The InnerException, if any, that threw
            the current exception.</param>
            <seealso cref="P:System.Exception.Message"/>
            <seealso cref="P:System.Exception.InnerException"/>
        </member>
        <member name="M:BLToolkit.Reflection.Extension.TypeExtensionException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Reflection.Extension.TypeExtensionException"/> class 
            with the InnerException property.
            </summary>
            <param name="innerException">The InnerException, if any, that threw
            the current exception.</param>
            <seealso cref="P:System.Exception.InnerException"/>
        </member>
        <member name="M:BLToolkit.Reflection.Extension.TypeExtensionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Reflection.Extension.TypeExtensionException"/> class
            with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or
            destination.</param>
            <remarks>This constructor is called during deserialization to 
            reconstitute the exception object transmitted over a stream.</remarks>
        </member>
        <member name="T:BLToolkit.Data.DataProvider.OracleDataProvider">
            <summary>
            Implements access to the Data Provider for Oracle.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
        </member>
        <member name="M:BLToolkit.Data.DataProvider.OracleDataProvider.CreateConnectionObject">
            <summary>
            Creates the database connection object.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <returns>The database connection object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DataProvider.OracleDataProvider.CreateDataAdapterObject">
            <summary>
            Creates the data adapter object.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <returns>A data adapter object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DataProvider.OracleDataProvider.DeriveParameters(System.Data.IDbCommand)">
            <summary>
            Populates the specified <see cref="T:System.Data.IDbCommand"/> object's Parameters collection with 
            parameter information for the stored procedure specified in the <see cref="T:System.Data.IDbCommand"/>.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <param name="command">The <see cref="T:System.Data.IDbCommand"/> referencing the stored procedure for which the parameter information is to be derived. The derived parameters will be populated into the Parameters of this command.</param>
        </member>
        <member name="P:BLToolkit.Data.DataProvider.OracleDataProvider.ConnectionType">
            <summary>
            Returns connection type.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <value>An instance of the <see cref="T:System.Type"/> class.</value>
        </member>
        <member name="P:BLToolkit.Data.DataProvider.OracleDataProvider.Name">
            <summary>
            Returns the data provider name.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataProvider Method</seealso>
            <value>Data provider name.</value>
        </member>
        <member name="T:BLToolkit.Aspects.NoCounterAttribute">
            <summary>
            http://www.bltoolkit.net/Doc/Aspects/index.htm
            </summary>
        </member>
        <member name="T:BLToolkit.TypeBuilder.InstanceTypeAttribute">
            <summary>
             Specifies a value holder type.
            </summary>
        </member>
        <member name="M:BLToolkit.TypeBuilder.InstanceTypeAttribute.#ctor(System.Type)">
            <summary>
             Initializes a new instance of the InstanceTypeAttribute class.
            </summary>
            <param name="instanceType">The <see cref="T:System.Type"/> of an instance.</param>
        </member>
        <member name="M:BLToolkit.TypeBuilder.InstanceTypeAttribute.#ctor(System.Type,System.Object)">
            <summary>
             Initializes a new instance of the InstanceTypeAttribute class.
            </summary>
            <param name="instanceType">The <see cref="T:System.Type"/> of an instance.</param>
            <param name="parameter1">An additional parameter.</param>
            <seealso cref="P:BLToolkit.TypeBuilder.InstanceTypeAttribute.Parameters"/>
        </member>
        <member name="M:BLToolkit.TypeBuilder.InstanceTypeAttribute.#ctor(System.Type,System.Object,System.Object)">
            <summary>
             Initializes a new instance of the InstanceTypeAttribute class.
            </summary>
            <param name="instanceType">The <see cref="T:System.Type"/> of an instance.</param>
            <param name="parameter1">An additional parameter.</param>
            <param name="parameter2">An additional parameter.</param>
            <seealso cref="P:BLToolkit.TypeBuilder.InstanceTypeAttribute.Parameters"/>
        </member>
        <member name="M:BLToolkit.TypeBuilder.InstanceTypeAttribute.#ctor(System.Type,System.Object,System.Object,System.Object)">
            <summary>
             Initializes a new instance of the InstanceTypeAttribute class.
            </summary>
            <param name="instanceType">The <see cref="T:System.Type"/> of an instance.</param>
            <param name="parameter1">An additional parameter.</param>
            <param name="parameter2">An additional parameter.</param>
            <param name="parameter3">An additional parameter.</param>
            <seealso cref="P:BLToolkit.TypeBuilder.InstanceTypeAttribute.Parameters"/>
        </member>
        <member name="M:BLToolkit.TypeBuilder.InstanceTypeAttribute.#ctor(System.Type,System.Object,System.Object,System.Object,System.Object)">
            <summary>
             Initializes a new instance of the InstanceTypeAttribute class.
            </summary>
            <param name="instanceType">The <see cref="T:System.Type"/> of an instance.</param>
            <param name="parameter1">An additional parameter.</param>
            <param name="parameter2">An additional parameter.</param>
            <param name="parameter3">An additional parameter.</param>
            <param name="parameter4">An additional parameter.</param>
            <seealso cref="P:BLToolkit.TypeBuilder.InstanceTypeAttribute.Parameters"/>
        </member>
        <member name="M:BLToolkit.TypeBuilder.InstanceTypeAttribute.#ctor(System.Type,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
             Initializes a new instance of the InstanceTypeAttribute class.
            </summary>
            <param name="instanceType">The <see cref="T:System.Type"/> of an instance.</param>
            <param name="parameter1">An additional parameter.</param>
            <param name="parameter2">An additional parameter.</param>
            <param name="parameter3">An additional parameter.</param>
            <param name="parameter4">An additional parameter.</param>
            <param name="parameter5">An additional parameter.</param>
            <seealso cref="P:BLToolkit.TypeBuilder.InstanceTypeAttribute.Parameters"/>
        </member>
        <member name="M:BLToolkit.TypeBuilder.InstanceTypeAttribute.#ctor(System.Type,System.Object,System.Object[])">
            <summary>
             Initializes a new instance of the InstanceTypeAttribute class.
            </summary>
            <param name="instanceType">The <see cref="T:System.Type"/> of an instance.</param>
            <param name="parameter1">An additional parameter.</param>
            <param name="parameters">More additional parameters.</param>
            <seealso cref="P:BLToolkit.TypeBuilder.InstanceTypeAttribute.Parameters"/>
        </member>
        <member name="P:BLToolkit.TypeBuilder.InstanceTypeAttribute.Parameters">
            <summary>
             Any additional parameters passed to a value holder constructor
             with <see cref="T:BLToolkit.Reflection.InitContext"/> parameter.
            </summary>
        </member>
        <member name="P:BLToolkit.TypeBuilder.InstanceTypeAttribute.IsObjectHolder">
            <summary>
             False (default value) for holders for scalar types,
             true for holders for complex objects.
            </summary>
        </member>
        <member name="P:BLToolkit.TypeBuilder.InstanceTypeAttribute.TypeBuilder">
            <summary>
             An <see cref="T:BLToolkit.TypeBuilder.Builders.IAbstractTypeBuilder"/> required for this attribute
             to build an abstract type inheritor.
            </summary>
        </member>
        <member name="T:BLToolkit.Reflection.GenericBinder">
            <Summary>
            Selects a member from a list of candidates, and performs type conversion
            from actual argument type to formal argument type.
            </Summary>
        </member>
        <member name="T:BLToolkit.Data.ScalarSourceType">
            <summary>
            Defines the method how a scalar value is returned from the server.
            </summary>
        </member>
        <member name="F:BLToolkit.Data.ScalarSourceType.DataReader">
            <summary>
            A call to <see cref="T:BLToolkit.Data.DbManager"/>.<see cref="M:BLToolkit.Data.DbManager.ExecuteReader"/>
            then <see cref="T:System.Data.IDataReader"/>.<see cref="!:System.Data.IDataReader.GetValue(int)"/>.
            </summary>
        </member>
        <member name="F:BLToolkit.Data.ScalarSourceType.OutputParameter">
            <summary>
            A call to <see cref="T:BLToolkit.Data.DbManager"/>.<see cref="M:BLToolkit.Data.DbManager.ExecuteNonQuery"/>.
            An output parameter <see cref="!:System.Data.IDbDataParameter.Value"/> is used.
            </summary>
        </member>
        <member name="F:BLToolkit.Data.ScalarSourceType.ReturnValue">
            <summary>
            A call to <see cref="T:BLToolkit.Data.DbManager"/>.<see cref="M:BLToolkit.Data.DbManager.ExecuteNonQuery"/>.
            The return parameter <see cref="!:System.Data.IDbDataParameter.Value"/> is used.
            </summary>
        </member>
        <member name="F:BLToolkit.Data.ScalarSourceType.AffectedRows">
            <summary>
            Same as <see cref="T:BLToolkit.Data.DbManager"/>.<see cref="M:BLToolkit.Data.DbManager.ExecuteNonQuery"/>.
            Useful for an abstract <see cref="T:BLToolkit.DataAccess.DataAccessor"/>.
            </summary>
        </member>
        <member name="T:BLToolkit.DataAccess.DataAccessor.INullableInternal">
            <summary>
            Reserved for internal BLToolkit use.
            </summary>
        </member>
        <member name="T:BLToolkit.Aspects.LoggingAspect">
            <summary>
            http://www.bltoolkit.net/Doc/Aspects/index.htm
            </summary>
        </member>
        <member name="T:BLToolkit.Data.Linq.CompiledQuery">
            <summary>
            Provides for compilation and caching of queries for reuse.
            </summary>
        </member>
        <member name="M:BLToolkit.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Compiles the query.
            </summary>
            <returns>
            A generic delegate that represents the compiled query.
            </returns>
            <param name="query">
            The query expression to be compiled.
            </param>
            <typeparam name="TDC ">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TResult">
            Returned type of the delegate returned by the method.
            </typeparam>
        </member>
        <member name="M:BLToolkit.Data.Linq.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
            <summary>
            Compiles the query.
            </summary>
            <returns>
            A generic delegate that represents the compiled query.
            </returns>
            <param name="query">
            The query expression to be compiled.
            </param>
            <typeparam name="TDC">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg1">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TResult">
            Returned type of the delegate returned by the method.
            </typeparam>
        </member>
        <member name="M:BLToolkit.Data.Linq.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})">
            <summary>
            Compiles the query.
            </summary>
            <returns>
            A generic delegate that represents the compiled query.
            </returns>
            <param name="query">
            The query expression to be compiled.
            </param>
            <typeparam name="TDC ">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg1">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg2">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TResult">
            Returned type of the delegate returned by the method.
            </typeparam>
        </member>
        <member name="M:BLToolkit.Data.Linq.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})">
            <summary>
            Compiles the query.
            </summary>
            <returns>
            A generic delegate that represents the compiled query.
            </returns>
            <param name="query">
            The query expression to be compiled.
            </param>
            <typeparam name="TDC ">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg1">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg2">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg3">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TResult">
            Returned type of the delegate returned by the method.
            </typeparam>
        </member>
        <member name="M:BLToolkit.Data.Linq.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})">
            <summary>
            Compiles the query.
            </summary>
            <returns>
            A generic delegate that represents the compiled query.
            </returns>
            <param name="query">
            The query expression to be compiled.
            </param>
            <typeparam name="TDC ">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg1">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg2">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg3">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg4">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TResult">
            Returned type of the delegate returned by the method.
            </typeparam>
        </member>
        <member name="M:BLToolkit.Data.Linq.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})">
            <summary>
            Compiles the query.
            </summary>
            <returns>
            A generic delegate that represents the compiled query.
            </returns>
            <param name="query">
            The query expression to be compiled.
            </param>
            <typeparam name="TDC ">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg1">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg2">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg3">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg4">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg5">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TResult">
            Returned type of the delegate returned by the method.
            </typeparam>
        </member>
        <member name="T:BLToolkit.Aspects.OverloadAttribute">
            <summary>
            http://www.bltoolkit.net/Doc/Aspects/index.htm
            </summary>
        </member>
        <member name="T:BLToolkit.Validation.ValidationException">
            <summary>
            Defines the base class for the namespace exceptions.
            </summary>
            <remarks>
            This class is the base class for exceptions that may occur during
            execution of the namespace members.
            </remarks>
        </member>
        <member name="M:BLToolkit.Validation.ValidationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Validation.ValidationException"/> class.
            </summary>
            <remarks>
            This constructor initializes the <see cref="P:System.Exception.Message"/>
            property of the new instance such as "A Validation exception has occurred."
            </remarks>
        </member>
        <member name="M:BLToolkit.Validation.ValidationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Validation.ValidationException"/> class 
            with the specified error message.
            </summary>
            <param name="message">The message to display to the client when the
            exception is thrown.</param>
            <seealso cref="P:System.Exception.Message"/>
        </member>
        <member name="M:BLToolkit.Validation.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Validation.ValidationException"/> class 
            with the specified error message and InnerException property.
            </summary>
            <param name="message">The message to display to the client when the
            exception is thrown.</param>
            <param name="innerException">The InnerException, if any, that threw
            the current exception.</param>
            <seealso cref="P:System.Exception.Message"/>
            <seealso cref="P:System.Exception.InnerException"/>
        </member>
        <member name="M:BLToolkit.Validation.ValidationException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Validation.ValidationException"/> class 
            with the specified InnerException property.
            </summary>
            <param name="innerException">The InnerException, if any, that threw
            the current exception.</param>
            <seealso cref="P:System.Exception.Message"/>
            <seealso cref="P:System.Exception.InnerException"/>
        </member>
        <member name="M:BLToolkit.Validation.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Validation.ValidationException"/> class
            with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or
            destination.</param>
            <remarks>This constructor is called during deserialization to
            reconstitute the exception object transmitted over a stream.</remarks>
        </member>
        <member name="T:BLToolkit.Reflection.XmlIncludeAbstractAttribute">
            <summary>
            Allows the <see cref="T:System.Xml.Serialization.XmlSerializer"/> to recognize a type generated
            by the BLToolkit when it serializes or deserializes an object.
            </summary>
        </member>
        <member name="M:BLToolkit.Reflection.XmlIncludeAbstractAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Reflection.XmlIncludeAbstractAttribute"/> class.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> of an abstract class to
            include its BLToolkit extensions.</param>
        </member>
        <member name="T:BLToolkit.Patterns.DuckTyping">
            <summary>
            Duck typing implementation.
            In computer science, duck typing is a term for dynamic typing typical
            of some programming languages, such as Smalltalk, Python or ColdFusion,
            where a variable's value itself determines what the variable can do.
            Thus an object or set of objects having all the methods described in
            an interface can be made to implement that interface dynamically
            at runtime, even if the object’s class does not include the interface
            in its implements clause.
            </summary>
        </member>
        <member name="M:BLToolkit.Patterns.DuckTyping.GetDuckType(System.Type,System.Type)">
            <summary>
            Build a proxy type which implements the requested interface by redirecting all calls to the supplied object type.
            </summary>
            <param name="interfaceType">An interface type to implement.</param>
            <param name="objectType">Any type which expected to have all members of the given interface.</param>
            <returns>The duck object type.</returns>
        </member>
        <member name="M:BLToolkit.Patterns.DuckTyping.Implement(System.Type,System.Type,System.Object)">
            <summary>
            Implements the requested interface for supplied object.
            If the supplied object implements the interface, the object itself will be returned.
            Otherwise a convenient duck object will be created.
            </summary>
            <param name="interfaceType">An interface type to implement.</param>
            <param name="baseObjectType">Any type which has all members of the given interface.
            When this parameter is set to null, the object type will be used.</param>
            <param name="obj">An object which type expected to have all members of the given interface.</param>
            <returns>An object which implements the interface.</returns>
        </member>
        <member name="M:BLToolkit.Patterns.DuckTyping.Implement(System.Type,System.Object)">
            <summary>
            Implements the requested interface.
            If the supplied object implements the interface, the object itself will be returned.
            Otherwise a convenient duck object will be created.
            </summary>
            <param name="interfaceType">An interface type to implement.</param>
            <param name="obj">An object which type expected to have all members of the given interface.</param>
            <returns>An object which implements the interface.</returns>
        </member>
        <member name="M:BLToolkit.Patterns.DuckTyping.Implement(System.Type,System.Type,System.Object[])">
            <summary>
            Implements the requested interface for all supplied objects.
            If any of supplied object implements the interface, the object itself will be returned.
            Otherwise a convenient duck object will be created.
            </summary>
            <param name="interfaceType">An interface type to implement.</param>
            <param name="baseObjectType">Any type which has all members of the given interface.
            When this parameter is set to null, the object type will be used.</param>
            <param name="objects">An object array which types expected to have all members of the given interface.
            All objects may have different types.</param>
            <returns>An array of object which implements the interface.</returns>
        </member>
        <member name="M:BLToolkit.Patterns.DuckTyping.Implement(System.Type,System.Object[])">
            <summary>
            Implements the requested interface for all supplied objects.
            If any of supplied object implements the interface, the object itself will be returned.
            Otherwise a convenient duck object will be created.
            </summary>
            <param name="interfaceType">An interface type to implement.</param>
            <param name="objects">An object array which types expected to have all members of the given interface.
            All objects may have different types.</param>
            <returns>An array of object which implements the interface.</returns>
        </member>
        <member name="M:BLToolkit.Patterns.DuckTyping.Implement``1(System.Object)">
            <summary>
            Implements the requested interface for supplied object.
            If the supplied object implements the interface, the object itself will be returned.
            Otherwise a convenient duck object will be created.
            </summary>
            <typeparam name="I">An interface type to implement.</typeparam>
            <param name="obj">An object which type expected to have all members of the given interface.</param>
            <returns>An object which implements the interface.</returns>
        </member>
        <member name="M:BLToolkit.Patterns.DuckTyping.Implement``2(``1)">
            <summary>
            Implements the requested interface for supplied object.
            If the supplied object implements the interface, the object itself will be returned.
            Otherwise a convenient duck object will be created.
            </summary>
            <typeparam name="I">An interface type to implement.</typeparam>
            <typeparam name="T">Any type which has all members of the given interface.</typeparam>
            <param name="obj">An object which type expected to have all members of the given interface.</param>
            <returns>An object which implements the interface.</returns>
        </member>
        <member name="M:BLToolkit.Patterns.DuckTyping.Implement``1(System.Object[])">
            <summary>
            Implements the requested interface for all supplied objects.
            If any of supplied object implements the interface, the object itself will be returned.
            Otherwise a convenient duck object will be created.
            </summary>
            <typeparam name="I">An interface type to implement.</typeparam>
            <param name="objects">An object array which types expected to have all members of the given interface.
            All objects may have different types.</param>
            <returns>An array of object which implements the interface.</returns>
        </member>
        <member name="M:BLToolkit.Patterns.DuckTyping.Implement``2(``1[])">
            <summary>
            Implements the requested interface for all supplied objects.
            If any of supplied object implements the interface, the object itself will be returned.
            Otherwise a convenient duck object will be created.
            </summary>
            <typeparam name="I">An interface type to implement.</typeparam>
            <typeparam name="T">Any type which has all members of the given interface.</typeparam>
            <param name="objects">An object array which types expected to have all members of the given interface.
            All objects may have different types.</param>
            <returns>An array of object which implements the interface.</returns>
        </member>
        <member name="M:BLToolkit.Patterns.DuckTyping.GetDuckType(System.Type,System.Type[])">
            <summary>
            Build a proxy type which implements the requested interface by redirecting all calls to the supplied object type.
            </summary>
            <param name="interfaceType">An interface type to implement.</param>
            <param name="objectTypes">Array of types which expected to have all members of the given interface.</param>
            <returns>The duck object type.</returns>
        </member>
        <member name="M:BLToolkit.Patterns.DuckTyping.Aggregate(System.Type,System.Type[],System.Object[])">
            <summary>
            Implements the requested interface from supplied set of objects.
            </summary>
            <param name="interfaceType">An interface type to implement.</param>
            <param name="baseObjectTypes">Array of types which have all members of the given interface.
            When this parameter is set to null, the object type will be used.</param>
            <param name="objs">Array of objects which types expected to have all members of the given interface.</param>
            <returns>An object which implements the interface.</returns>
        </member>
        <member name="M:BLToolkit.Patterns.DuckTyping.Aggregate(System.Type,System.Object[])">
            <summary>
            Implements the requested interface from supplied set of objects.
            </summary>
            <param name="interfaceType">An interface type to implement.</param>
            <param name="objs">Array of object which types expected to have of the given interface.</param>
            <returns>An object which implements the interface.</returns>
        </member>
        <member name="M:BLToolkit.Patterns.DuckTyping.Aggregate``1(System.Object[])">
            <summary>
            Implements the requested interface from supplied set of objects.
            </summary>
            <typeparam name="I">An interface type to implement.</typeparam>
            <param name="objs">Array of object which type expected to have all members of the given interface.</param>
            <returns>An object which implements the interface.</returns>
        </member>
        <member name="T:BLToolkit.Data.DataException">
            <summary>
            Defines the base class for the namespace exceptions.
            </summary>
            <remarks>
            This class is the base class for exceptions that may occur during
            execution of the namespace members.
            </remarks>
        </member>
        <member name="M:BLToolkit.Data.DataException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Data.DataException"/> class.
            </summary>
            <remarks>
            This constructor initializes the <see cref="P:System.Exception.Message"/>
            property of the new instance
            to a system-supplied message that describes the error,
            such as "BLToolkit Data error has occurred."
            </remarks>
        </member>
        <member name="M:BLToolkit.Data.DataException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Data.DataException"/> class
            with the specified error message.
            </summary>
            <param name="message">The message to display to the client when the
            exception is thrown.</param>
            <seealso cref="P:System.Exception.Message"/>
        </member>
        <member name="M:BLToolkit.Data.DataException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Data.DataException"/> class
            with the specified error message and InnerException property.
            </summary>
            <param name="message">The message to display to the client when the
            exception is thrown.</param>
            <param name="innerException">The InnerException, if any, that threw
            the current exception.</param>
            <seealso cref="P:System.Exception.Message"/>
            <seealso cref="P:System.Exception.InnerException"/>
        </member>
        <member name="M:BLToolkit.Data.DataException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Data.DataException"/> class
            with the InnerException property.
            </summary>
            <param name="innerException">The InnerException, if any, that threw
            the current exception.</param>
            <seealso cref="P:System.Exception.InnerException"/>
        </member>
        <member name="M:BLToolkit.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Data.DataException"/> class
            with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or
            destination.</param>
            <remarks>This constructor is called during deserialization to
            reconstitute the exception object transmitted over a stream.</remarks>
        </member>
        <member name="P:BLToolkit.Data.DataException.Number">
            <summary>
            Gets a number that identifies the type of error.
            </summary>
        </member>
        <member name="M:BLToolkit.DataAccess.DataAccessorBuilder.ExecuteScalarDictionaryWithPK(System.Type,BLToolkit.Common.NameOrIndexParameter,System.Type)">
            <summary>
            Maps primary keys(s) to a scalar field.
            </summary>
        </member>
        <member name="M:BLToolkit.DataAccess.DataAccessorBuilder.ExecuteScalarDictionaryWithMapIndex(BLToolkit.Common.NameOrIndexParameter[],BLToolkit.Common.NameOrIndexParameter,System.Type)">
            <summary>
            Maps a complex index to a scalar field.
            </summary>
        </member>
        <member name="M:BLToolkit.DataAccess.DataAccessorBuilder.ExecuteScalarDictionaryWithScalarKey(BLToolkit.Common.NameOrIndexParameter,System.Type,BLToolkit.Common.NameOrIndexParameter,System.Type)">
            <summary>
            Maps any single field to any (other) single field.
            </summary>
        </member>
        <member name="M:BLToolkit.DataAccess.DataAccessorBuilder.ExecuteDictionaryWithPK(System.Type,System.Type)">
            <summary>
            Maps primary keys(s) to an object of the specified type.
            </summary>
        </member>
        <member name="M:BLToolkit.DataAccess.DataAccessorBuilder.ExecuteDictionaryWithMapIndex(BLToolkit.Common.NameOrIndexParameter[],System.Type)">
            <summary>
            Maps a complex index to an object of the specified type.
            </summary>
        </member>
        <member name="M:BLToolkit.DataAccess.DataAccessorBuilder.ExecuteDictionaryWithScalarKey(BLToolkit.Common.NameOrIndexParameter,System.Type)">
            <summary>
            Maps any single field to object type.
            </summary>
        </member>
        <member name="T:BLToolkit.Aspects.CounterAttribute">
            <summary>
            http://www.bltoolkit.net/Doc/Aspects/index.htm
            </summary>
        </member>
        <member name="M:BLToolkit.EditableObjects.EditableObject.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="T:BLToolkit.Aspects.CounterAspect">
            <summary>
            http://www.bltoolkit.net/Doc/Aspects/index.htm
            </summary>
        </member>
        <member name="T:BLToolkit.Aspects.ClearCacheAttribute">
            <summary>
            http://www.bltoolkit.net/Doc/Aspects/index.htm
            </summary>
        </member>
        <member name="T:BLToolkit.TypeBuilder.SetValueAttribute">
            <summary>
             Indicates that a field, property or method can be treated as a value setter.
            </summary>
        </member>
        <member name="T:BLToolkit.Reflection.Emit.MethodBuilderHelper">
            <summary>
            A wrapper around the <see cref="P:BLToolkit.Reflection.Emit.MethodBuilderHelper.MethodBuilder"/> class.
            </summary>
            <example>
<code lang="C#">
using System;

using NUnit.Framework;

using BLToolkit.Reflection;
using BLToolkit.Reflection.Emit;

namespace Examples.Reflection.Emit
{
	[TestFixture]
	public class HelloWorld
	{
		public interface IHello
		{
			void SayHello(string toWhom);
		}

		[Test]
		public void Test()
		{
			EmitHelper emit = new AssemblyBuilderHelper("HelloWorld.dll")
				.DefineType  ("Hello", typeof(object), typeof(IHello))
				.DefineMethod(typeof(IHello).GetMethod("SayHello"))
				.Emitter;

			/*[a]*/emit/*[/a]*/
				// string.Format("Hello, {0}!", toWhom)
				//
				./*[a]*/ldstr/*[/a]*/   ("Hello, {0}!")
				./*[a]*/ldarg_1/*[/a]*/
				./*[a]*/call/*[/a]*/    (typeof(string), "Format", typeof(string), typeof(object))

				// Console.WriteLine("Hello, World!");
				//
				./*[a]*/call/*[/a]*/    (typeof(Console), "WriteLine", typeof(string))
				./*[a]*/ret/*[/a]*/()
				;

			Type type = emit.Method.Type.Create();

			IHello hello = (IHello)TypeAccessor.CreateInstance(type);

			hello.SayHello("World");
		}
	}
}
</code>
</example>
            <example>
<code lang="VB">
Imports System
Imports NUnit.Framework

Imports BLToolkit.Reflection
Imports BLToolkit.Reflection.Emit

Namespace Examples.Reflection.Emit

    &lt;TestFixture()&gt; _
    Public Class HelloWorld

        Public Interface IHello
            Sub SayHello(ByVal toWhom As String)
        End Interface

        &lt;Test()&gt; _
        Sub Test()
            Dim assemblyHelper As AssemblyBuilderHelper = New AssemblyBuilderHelper("HelloWorld.dll")
            Dim typeHelper As TypeBuilderHelper = assemblyHelper.DefineType("Hello", GetType(Object), GetType(IHello))
            Dim methodHelper As MethodBuilderHelper = typeHelper.DefineMethod(GetType(IHello).GetMethod("SayHello"))
            Dim emit As EmitHelper = methodHelper.Emitter

            ' string.Format("Hello, {0} World!", toWhom)
            '
            emit _
            .ldstr("Hello, {0} World!") _
            .ldarg_1 _
            .call(GetType(String), "Format", GetType(String), GetType(Object))

            ' Console.WriteLine("Hello, World!");
            '
            emit _
            .call(GetType(Console), "WriteLine", GetType(String)) _
            .ret()

            Dim type As Type = typeHelper.Create()

            Dim hello As IHello = TypeAccessor.CreateInstance(type)

            hello.SayHello("VB")
        End Sub

    End Class

End Namespace
</code>
</example>
            <seealso cref="T:System.Reflection.Emit.MethodBuilder">MethodBuilder Class</seealso>
        </member>
        <member name="T:BLToolkit.Reflection.Emit.MethodBuilderBase">
            <summary>
            Base class for wrappers around methods and constructors.
            </summary>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.MethodBuilderBase.#ctor(BLToolkit.Reflection.Emit.TypeBuilderHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Reflection.Emit.MethodBuilderHelper"/> class
            with the specified parameters.
            </summary>
            <param name="typeBuilder">Associated <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/>.</param>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.MethodBuilderBase.Type">
            <summary>
            Gets associated <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/>.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.MethodBuilderBase.Emitter">
            <summary>
            Gets <see cref="T:BLToolkit.Reflection.Emit.EmitHelper"/>.
            </summary>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.MethodBuilderHelper.#ctor(BLToolkit.Reflection.Emit.TypeBuilderHelper,System.Reflection.Emit.MethodBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Reflection.Emit.MethodBuilderHelper"/> class
            with the specified parameters.
            </summary>
            <param name="typeBuilder">Associated <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/>.</param>
            <param name="methodBuilder">A <see cref="P:BLToolkit.Reflection.Emit.MethodBuilderHelper.MethodBuilder"/></param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.MethodBuilderHelper.SetCustomAttribute(System.Type)">
            <summary>
            Sets a custom attribute using a custom attribute type.
            </summary>
            <param name="attributeType">Attribute type.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.MethodBuilderHelper.SetCustomAttribute(System.Type,System.Reflection.PropertyInfo[],System.Object[])">
            <summary>
            Sets a custom attribute using a custom attribute type
            and named properties.
            </summary>
            <param name="attributeType">Attribute type.</param>
            <param name="properties">Named properties of the custom attribute.</param>
            <param name="propertyValues">Values for the named properties of the custom attribute.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.MethodBuilderHelper.SetCustomAttribute(System.Type,System.String,System.Object)">
            <summary>
            Sets a custom attribute using a custom attribute type
            and named property.
            </summary>
            <param name="attributeType">Attribute type.</param>
            <param name="propertyName">A named property of the custom attribute.</param>
            <param name="propertyValue">Value for the named property of the custom attribute.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.MethodBuilderHelper.#ctor(BLToolkit.Reflection.Emit.TypeBuilderHelper,System.Reflection.Emit.MethodBuilder,System.Type[],System.Type,System.Type[])">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Reflection.Emit.MethodBuilderHelper"/> class
            with the specified parameters.
            </summary>
            <param name="typeBuilder">Associated <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/>.</param>
            <param name="methodBuilder">A <see cref="P:BLToolkit.Reflection.Emit.MethodBuilderHelper.MethodBuilder"/></param>
            <param name="genericArguments">Generic arguments of the method.</param>
            <param name="returnType">The return type of the method.</param>
            <param name="parameterTypes">The types of the parameters of the method.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.MethodBuilderHelper.op_Implicit(BLToolkit.Reflection.Emit.MethodBuilderHelper)~System.Reflection.Emit.MethodBuilder">
            <summary>
            Converts the supplied <see cref="T:BLToolkit.Reflection.Emit.MethodBuilderHelper"/> to a <see cref="P:BLToolkit.Reflection.Emit.MethodBuilderHelper.MethodBuilder"/>.
            </summary>
            <param name="methodBuilder">The <see cref="T:BLToolkit.Reflection.Emit.MethodBuilderHelper"/>.</param>
            <returns>A <see cref="P:BLToolkit.Reflection.Emit.MethodBuilderHelper.MethodBuilder"/>.</returns>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.MethodBuilderHelper.MethodBuilder">
            <summary>
            Gets MethodBuilder.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.MethodBuilderHelper.Emitter">
            <summary>
            Gets <see cref="T:BLToolkit.Reflection.Emit.EmitHelper"/>.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.MethodBuilderHelper.OverriddenMethod">
            <summary>
            Gets or sets the base type method overridden by this method, if any.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.MethodBuilderHelper.DeclaringType">
            <summary>
            Returns the type that declares this method.
            </summary>
        </member>
        <member name="T:BLToolkit.DataAccess.DataAccessException">
            <summary>
            Defines the base class for the namespace exceptions.
            </summary>
            <remarks>
            This class is the base class for exceptions that may occur during
            execution of the namespace members.
            </remarks>
        </member>
        <member name="M:BLToolkit.DataAccess.DataAccessException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.DataAccess.DataAccessException"/> class.
            </summary>
            <remarks>
            This constructor initializes the <see cref="P:System.Exception.Message"/>
            property of the new instance
            to a system-supplied message that describes the error,
            such as "BLToolkit Data Access error has occurred."
            </remarks>
        </member>
        <member name="M:BLToolkit.DataAccess.DataAccessException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.DataAccess.DataAccessException"/> class 
            with the specified error message.
            </summary>
            <param name="message">The message to display to the client when the
            exception is thrown.</param>
            <seealso cref="P:System.Exception.Message"/>
        </member>
        <member name="M:BLToolkit.DataAccess.DataAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.DataAccess.DataAccessException"/> class 
            with the specified error message and InnerException property.
            </summary>
            <param name="message">The message to display to the client when the
            exception is thrown.</param>
            <param name="innerException">The InnerException, if any, that threw
            the current exception.</param>
            <seealso cref="P:System.Exception.Message"/>
            <seealso cref="P:System.Exception.InnerException"/>
        </member>
        <member name="M:BLToolkit.DataAccess.DataAccessException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.DataAccess.DataAccessException"/> class 
            with the InnerException property.
            </summary>
            <param name="innerException">The InnerException, if any, that threw
            the current exception.</param>
            <seealso cref="P:System.Exception.InnerException"/>
        </member>
        <member name="M:BLToolkit.DataAccess.DataAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.DataAccess.DataAccessException"/> class
            with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or
            destination.</param>
            <remarks>This constructor is called during deserialization to
            reconstitute the exception object transmitted over a stream.</remarks>
        </member>
        <member name="T:BLToolkit.Common.Convert`2">
            <summary>
            Converts a base data type to another base data type.
            </summary>
            <typeparam name="T">Destination data type.</typeparam>
            <typeparam name="P">Source data type.</typeparam>
        </member>
        <member name="M:BLToolkit.Common.Convert`2.FromArray(`1[])">
            <summary>Converts an array of one type to an array of another type.</summary>
            <returns>An array of the target type containing the converted elements from the source array.</returns>
            <param name="src">The one-dimensional, zero-based <see cref="T:System.Array"></see> to convert to a target type.</param>
            <exception cref="T:System.ArgumentNullException">array is null.-or-converter is null.</exception>
        </member>
        <member name="F:BLToolkit.Common.Convert`2.From">
            <summary>
             Converter instance.
            </summary>
        </member>
        <member name="M:BLToolkit.Common.Convert`2.GetConverter">
            <summary>
             Initializes converter instance.
            </summary>
            <returns>Converter instance.</returns>
        </member>
        <member name="T:BLToolkit.Common.Convert`2.ConvertMethod">
            <summary>
            Represents a method that converts an object from one type to another type.
            </summary>
            <param name="p">A value to convert to the target type.</param>
            <returns>The <typeparamref name="T"/> that represents the converted <paramref name="p"/>.</returns>
        </member>
        <member name="T:BLToolkit.Common.ConvertTo`1">
            <summary>
            Converts a base data type to another base data type.
            </summary>
            <typeparam name="T">Destination data type.</typeparam>
        </member>
        <member name="M:BLToolkit.Common.ConvertTo`1.From``1(``0)">
            <summary>Returns an <typeparamref name="T"/> whose value is equivalent to the specified value.</summary>
            <returns>The <typeparamref name="T"/> that represents the converted <paramref name="p"/>.</returns>
            <param name="p">A value to convert to the target type.</param>
        </member>
        <member name="T:BLToolkit.Aspects.Builders.AsyncAspectBuilder">
            <summary>
            This aspect simplifies asynchronous operations.
            </summary>
        </member>
        <member name="T:BLToolkit.Aspects.Builders.AsyncAspectBuilder.InternalAsyncResult">
            <summary>
            Reserved for internal BLToolkit use.
            </summary>
        </member>
        <member name="T:BLToolkit.TypeBuilder.GetValueAttribute">
            <summary>
             Indicates that a field, property or method can be treated as a value getter.
            </summary>
        </member>
        <member name="T:BLToolkit.Reflection.Emit.AssemblyBuilderHelper">
            <summary>
            A wrapper around the <see cref="P:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.AssemblyBuilder"/> and <see cref="P:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.ModuleBuilder"/> classes.
            </summary>
            <example>
<code lang="C#">
using System;

using NUnit.Framework;

using BLToolkit.Reflection;
using BLToolkit.Reflection.Emit;

namespace Examples.Reflection.Emit
{
	[TestFixture]
	public class HelloWorld
	{
		public interface IHello
		{
			void SayHello(string toWhom);
		}

		[Test]
		public void Test()
		{
			EmitHelper emit = new AssemblyBuilderHelper("HelloWorld.dll")
				.DefineType  ("Hello", typeof(object), typeof(IHello))
				.DefineMethod(typeof(IHello).GetMethod("SayHello"))
				.Emitter;

			/*[a]*/emit/*[/a]*/
				// string.Format("Hello, {0}!", toWhom)
				//
				./*[a]*/ldstr/*[/a]*/   ("Hello, {0}!")
				./*[a]*/ldarg_1/*[/a]*/
				./*[a]*/call/*[/a]*/    (typeof(string), "Format", typeof(string), typeof(object))

				// Console.WriteLine("Hello, World!");
				//
				./*[a]*/call/*[/a]*/    (typeof(Console), "WriteLine", typeof(string))
				./*[a]*/ret/*[/a]*/()
				;

			Type type = emit.Method.Type.Create();

			IHello hello = (IHello)TypeAccessor.CreateInstance(type);

			hello.SayHello("World");
		}
	}
}
</code>
</example>
            <example>
<code lang="VB">
Imports System
Imports NUnit.Framework

Imports BLToolkit.Reflection
Imports BLToolkit.Reflection.Emit

Namespace Examples.Reflection.Emit

    &lt;TestFixture()&gt; _
    Public Class HelloWorld

        Public Interface IHello
            Sub SayHello(ByVal toWhom As String)
        End Interface

        &lt;Test()&gt; _
        Sub Test()
            Dim assemblyHelper As AssemblyBuilderHelper = New AssemblyBuilderHelper("HelloWorld.dll")
            Dim typeHelper As TypeBuilderHelper = assemblyHelper.DefineType("Hello", GetType(Object), GetType(IHello))
            Dim methodHelper As MethodBuilderHelper = typeHelper.DefineMethod(GetType(IHello).GetMethod("SayHello"))
            Dim emit As EmitHelper = methodHelper.Emitter

            ' string.Format("Hello, {0} World!", toWhom)
            '
            emit _
            .ldstr("Hello, {0} World!") _
            .ldarg_1 _
            .call(GetType(String), "Format", GetType(String), GetType(Object))

            ' Console.WriteLine("Hello, World!");
            '
            emit _
            .call(GetType(Console), "WriteLine", GetType(String)) _
            .ret()

            Dim type As Type = typeHelper.Create()

            Dim hello As IHello = TypeAccessor.CreateInstance(type)

            hello.SayHello("VB")
        End Sub

    End Class

End Namespace
</code>
</example>
            <seealso cref="T:System.Reflection.Emit.AssemblyBuilder">AssemblyBuilder Class</seealso>
            <seealso cref="T:System.Reflection.Emit.ModuleBuilder">ModuleBuilder Class</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Reflection.Emit.AssemblyBuilderHelper"/> class
            with the specified parameters.
            </summary>
            <param name="path">The path where the assembly will be saved.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.#ctor(System.String,System.Version,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Reflection.Emit.AssemblyBuilderHelper"/> class
            with the specified parameters.
            </summary>
            <param name="path">The path where the assembly will be saved.</param>
            <param name="version">The assembly version.</param>
            <param name="keyFile">The key pair file to sign the assembly.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.op_Implicit(BLToolkit.Reflection.Emit.AssemblyBuilderHelper)~System.Reflection.Emit.AssemblyBuilder">
            <summary>
            Converts the supplied <see cref="T:BLToolkit.Reflection.Emit.AssemblyBuilderHelper"/> to a <see cref="P:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.AssemblyBuilder"/>.
            </summary>
            <param name="assemblyBuilder">The <see cref="T:BLToolkit.Reflection.Emit.AssemblyBuilderHelper"/>.</param>
            <returns>An <see cref="P:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.AssemblyBuilder"/>.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.op_Implicit(BLToolkit.Reflection.Emit.AssemblyBuilderHelper)~System.Reflection.Emit.ModuleBuilder">
            <summary>
            Converts the supplied <see cref="T:BLToolkit.Reflection.Emit.AssemblyBuilderHelper"/> to a <see cref="P:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.ModuleBuilder"/>.
            </summary>
            <param name="assemblyBuilder">The <see cref="T:BLToolkit.Reflection.Emit.AssemblyBuilderHelper"/>.</param>
            <returns>A <see cref="P:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.ModuleBuilder"/>.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.Save">
            <summary>
            Saves this dynamic assembly to disk.
            </summary>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.DefineType(System.String)">
            <summary>
            Constructs a <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/> for a type with the specified name.
            </summary>
            <param name="name">The full path of the type.</param>
            <returns>Returns the created <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/>.</returns>
            <seealso cref="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String)">ModuleBuilder.DefineType Method</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.DefineType(System.String,System.Type)">
            <summary>
            Constructs a <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/> for a type with the specified name and base type.
            </summary>
            <param name="name">The full path of the type.</param>
            <param name="parent">The Type that the defined type extends.</param>
            <returns>Returns the created <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/>.</returns>
            <seealso cref="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)">ModuleBuilder.DefineType Method</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)">
            <summary>
            Constructs a <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/> for a type with the specified name, its attributes, and base type.
            </summary>
            <param name="name">The full path of the type.</param>
            <param name="attrs">The attribute to be associated with the type.</param>
            <param name="parent">The Type that the defined type extends.</param>
            <returns>Returns the created <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/>.</returns>
            <seealso cref="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)">ModuleBuilder.DefineType Method</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.DefineType(System.String,System.Type,System.Type[])">
            <summary>
            Constructs a <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/> for a type with the specified name, base type,
            and the interfaces that the defined type implements.
            </summary>
            <param name="name">The full path of the type.</param>
            <param name="parent">The Type that the defined type extends.</param>
            <param name="interfaces">The list of interfaces that the type implements.</param>
            <returns>Returns the created <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/>.</returns>
            <seealso cref="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])">ModuleBuilder.DefineType Method</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])">
            <summary>
            Constructs a <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/> for a type with the specified name, its attributes, base type,
            and the interfaces that the defined type implements.
            </summary>
            <param name="name">The full path of the type.</param>
            <param name="attrs">The attribute to be associated with the type.</param>
            <param name="parent">The Type that the defined type extends.</param>
            <param name="interfaces">The list of interfaces that the type implements.</param>
            <returns>Returns the created <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/>.</returns>
            <seealso cref="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])">ModuleBuilder.DefineType Method</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.Path">
            <summary>
            Gets the path where the assembly will be saved.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.AssemblyName">
            <summary>
            Gets AssemblyName.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.AssemblyBuilder">
            <summary>
            Gets AssemblyBuilder.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.ModulePath">
            <summary>
            Gets the path where the assembly will be saved.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.ModuleBuilder">
            <summary>
            Gets ModuleBuilder.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.AssemblyBuilderHelper.BLToolkitAttribute">
            <summary>
            Retrieves a cached instance of <see cref="T:BLToolkit.TypeBuilder.BLToolkitGeneratedAttribute"/> builder.
            </summary>
        </member>
        <member name="T:BLToolkit.Aspects.MixinOverrideAttribute">
            <summary>
            http://www.bltoolkit.net/Doc/Aspects/index.htm
            </summary>
        </member>
        <member name="M:BLToolkit.TypeBuilder.TypeFactory.Init">
            <summary>
            Initializes AssemblyResolve hooks for the current <see cref="T:System.AppDomain"/>.
            </summary>
        </member>
        <member name="T:BLToolkit.TypeBuilder.PropertyChangedAttribute">
            <summary>
            This attribute allows to control generation of PropertyChanged notification at class level 
            </summary>
        </member>
        <member name="M:BLToolkit.TypeBuilder.PropertyChangedAttribute.#ctor">
            <summary>
            Specifies default generation options should be used for PropertyChanged notification
            </summary>
        </member>
        <member name="M:BLToolkit.TypeBuilder.PropertyChangedAttribute.#ctor(System.Boolean)">
            <summary>
            This constructor allows control of PropertyChanged code generation
            </summary>
            <param name="notifyOnEqualSet">See <see cref="P:BLToolkit.TypeBuilder.PropertyChangedAttribute.NotifyOnEqualSet"/></param>
        </member>
        <member name="M:BLToolkit.TypeBuilder.PropertyChangedAttribute.#ctor(System.Boolean,System.Boolean)">
            <summary>
            This constructor allows control of PropertyChanged code generation
            </summary>
            <param name="notifyOnEqualSet">See <see cref="P:BLToolkit.TypeBuilder.PropertyChangedAttribute.NotifyOnEqualSet"/></param>
            <param name="useReferenceEquals">See <see cref="P:BLToolkit.TypeBuilder.PropertyChangedAttribute.UseReferenceEquals"/></param>
        </member>
        <member name="M:BLToolkit.TypeBuilder.PropertyChangedAttribute.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This constructor allows control of PropertyChanged code generation
            </summary>
            <param name="notifyOnEqualSet">See <see cref="P:BLToolkit.TypeBuilder.PropertyChangedAttribute.NotifyOnEqualSet"/></param>
            <param name="useReferenceEquals">See <see cref="P:BLToolkit.TypeBuilder.PropertyChangedAttribute.UseReferenceEquals"/></param>
            <param name="skipSetterOnNoChange">See <see cref="P:BLToolkit.TypeBuilder.PropertyChangedAttribute.SkipSetterOnNoChange"/></param>
        </member>
        <member name="P:BLToolkit.TypeBuilder.PropertyChangedAttribute.NotifyOnEqualSet">
            <summary>
            Controls whether OnPropertyChanged notifications are sent when current value is same as new one.
            
            Default value controlled via <see cref="!:Configuration.NotifyOnEqualSet"/> and by default is set to false
            </summary>
        </member>
        <member name="P:BLToolkit.TypeBuilder.PropertyChangedAttribute.UseReferenceEquals">
            <summary>
            Specifies if <see cref="M:System.Object.ReferenceEquals(System.Object,System.Object)">Object.ReferenceEquals</see> should be used for equality comparison of current and new value
            for reference types. If value type implements op_Inequality, UseReferenceEquals is ignored.
            </summary>
        </member>
        <member name="P:BLToolkit.TypeBuilder.PropertyChangedAttribute.SkipSetterOnNoChange">
            <summary>
            Specifies whether call to setter is made when current value is same as new one
            </summary>
        </member>
        <member name="T:BLToolkit.Data.DbManager">
            <summary>
            The <b>DbManager</b> is a primary class of the <see cref="N:BLToolkit.Data"/> namespace
            that can be used to execute commands of different database providers.
            </summary>
            <remarks>
            When the <b>DbManager</b> goes out of scope, it does not close the internal connection object.
            Therefore, you must explicitly close the connection by calling <see cref="M:BLToolkit.Data.DbManager.Close"/> or 
            <see cref="M:BLToolkit.Data.DbManager.Dispose(System.Boolean)"/>. Also, you can use the C# <b>using</b> statement.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;DbManager&quot;]/*"/>
        </member>
        <member name="M:BLToolkit.Data.DbManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Data.DbManager"/> class 
            and opens a database connection.
            </summary>
            <remarks>
            <para>
            This constructor uses a configuration, which has been used first in your application. 
            If there has been no connection used before, an empty string is applied as a default configuration.
            </para>
            <para>
            See the <see cref="P:BLToolkit.Data.DbManager.ConfigurationString"/> property 
            for an explanation and use of the default configuration.
            </para>
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;ctor&quot;]/*"/>
            <seealso cref="M:BLToolkit.Data.DbManager.AddConnectionString(System.String)"/>
            <returns>An instance of the database manager class.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Data.DbManager"/> class 
            and opens a database connection for the provided configuration.
            </summary>
            <remarks>
            See the <see cref="P:BLToolkit.Data.DbManager.ConfigurationString"/> property 
            for an explanation and use of the configuration string.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;ctor(string)&quot;]/*"/>
            <param name="configurationString">Configuration string.</param>
            <returns>An instance of the <see cref="T:BLToolkit.Data.DbManager"/> class.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Data.DbManager"/> class 
            and opens a database connection for the provided configuration.
            </summary>
            <remarks>
            See the <see cref="P:BLToolkit.Data.DbManager.ConfigurationString"/> property 
            for an explanation and use of the configuration string.
            </remarks>
            <param name="configuration">Configuration string not containing provider name.</param>
            <param name="providerName">Provider configuration name.</param>
            <returns>An instance of the <see cref="T:BLToolkit.Data.DbManager"/> class.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.#ctor(System.Data.IDbConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Data.DbManager"/> class for the provided connection.
            </summary>
            <remarks>
            This constructor tries to open the connection if the connection state equals 
            <see cref="T:System.Data.ConnectionState">ConnectionState.Closed</see>. 
            In this case the <see cref="P:System.Data.IDbConnection.ConnectionString"/> property of the connection 
            must be set before colling the constructor.
            Otherwise, it neither opens nor closes the connection. 
            </remarks>
            <exception cref="T:BLToolkit.Data.DataException">
            Type of the connection could not be recognized.
            </exception>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;ctor(IDbConnection)&quot;]/*"/>
            <param name="connection">An instance of the <see cref="T:System.Data.IDbConnection"/> class.</param>
            <returns>An instance of the <see cref="T:BLToolkit.Data.DbManager"/> class.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.#ctor(System.Data.IDbTransaction)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Data.DbManager"/> class for the provided transaction.
            </summary>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;ctor(IDbTransaction)&quot;]/*"/>
            <param name="transaction"></param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">
            <summary>
            Adds a new data provider.
            </summary>
            <remarks>
            The method can be used to register a new data provider for further use.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples1.xml" path="examples/db[@name=&quot;AddDataProvider(DataProvider.IDataProvider)&quot;]/*"/>
            <seealso cref="M:BLToolkit.Data.DbManager.AddConnectionString(System.String)"/>
            <seealso cref="P:BLToolkit.Data.DataProvider.DataProviderBase.Name"/>
            <param name="dataProvider">An instance of the <see cref="T:BLToolkit.Data.DataProvider.DataProviderBase"/> interface.</param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.AddDataProvider(System.String,BLToolkit.Data.DataProvider.DataProviderBase)">
            <summary>
            Adds a new data provider witch a specified name.
            </summary>
            <remarks>
            The method can be used to register a new data provider for further use.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples1.xml" path="examples/db[@name=&quot;AddDataProvider(DataProvider.IDataProvider)&quot;]/*"/>
            <seealso cref="M:BLToolkit.Data.DbManager.AddConnectionString(System.String)"/>
            <seealso cref="P:BLToolkit.Data.DataProvider.DataProviderBase.Name"/>
            <param name="providerName">The data provider name.</param>
            <param name="dataProvider">An instance of the <see cref="T:BLToolkit.Data.DataProvider.DataProviderBase"/> interface.</param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.AddDataProvider(System.Type)">
            <summary>
            Adds a new data provider.
            </summary>
            <remarks>
            The method can be used to register a new data provider for further use.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddConnectionString(System.String)"/>
            <seealso cref="P:BLToolkit.Data.DataProvider.DataProviderBase.Name"/>
            <param name="dataProviderType">A data provider type.</param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.AddDataProvider(System.String,System.Type)">
            <summary>
            Adds a new data provider witch a specified name.
            </summary>
            <remarks>
            The method can be used to register a new data provider for further use.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddConnectionString(System.String)"/>
            <seealso cref="P:BLToolkit.Data.DataProvider.DataProviderBase.Name"/>
            <param name="providerName">The data provider name.</param>
            <param name="dataProviderType">A data provider type.</param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.AddConnectionString(System.String)">
            <summary>
            Adds a new connection string or replaces existing one.
            </summary>
            <remarks>
            Use this method when you use only one configuration and 
            you don't want to use a configuration file.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;AddConnectionString(string)&quot;]/*"/>
            <param name="connectionString">A valid database connection string.</param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.AddConnectionString(System.String,System.String)">
            <summary>
            Adds a new connection string or replaces existing one.
            </summary>
            <remarks>
            Use this method when you use multiple configurations and 
            you don't want to use a configuration file.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;AddConnectionString(string,string)&quot;]/*"/>
            <param name="configurationString">The configuration string.</param>
            <param name="connectionString">A valid database connection string.</param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.AddConnectionString(System.String,System.String,System.String)">
            <summary>
            Adds a new connection string or replaces existing one.
            </summary>
            <remarks>
            Use this method when you use multiple configurations and 
            you don't want to use a configuration file.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;AddConnectionString(string,string)&quot;]/*"/>
            <param name="providerName">The data provider name.</param>
            <param name="configurationString">The configuration string.</param>
            <param name="connectionString">A valid database connection string.</param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Close">
            <summary>
            Closes the connection to the database.
            </summary>
            <remarks>
            The <b>Close</b> method rolls back any pending transactions
            and then closes the connection.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;Close()&quot;]/*"/>
            <seealso cref="M:BLToolkit.Data.DbManager.Dispose(System.Boolean)"/>
        </member>
        <member name="M:BLToolkit.Data.DbManager.BeginTransaction">
            <summary>
            Begins a database transaction.
            </summary>
            <remarks>
            Once the transaction has completed, you must explicitly commit or roll back the transaction
            by using the <see cref="M:System.Data.IDbTransaction.Commit"/>&gt; or 
            <see cref="M:System.Data.IDbTransaction.Rollback"/> methods.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;BeginTransaction()&quot;]/*"/>
            <returns>This instance of the <see cref="T:BLToolkit.Data.DbManager"/>.</returns>
            <seealso cref="P:BLToolkit.Data.DbManager.Transaction"/>
        </member>
        <member name="M:BLToolkit.Data.DbManager.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins a database transaction with the specified <see cref="T:System.Data.IsolationLevel"/> value.
            </summary>
            <remarks>
            Once the transaction has completed, you must explicitly commit or roll back the transaction
            by using the <see cref="M:System.Data.IDbTransaction.Commit"/> or 
            <see cref="M:System.Data.IDbTransaction.Rollback"/> methods.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;BeginTransaction(IsolationLevel)&quot;]/*"/>
            <param name="il">One of the <see cref="T:System.Data.IsolationLevel"/> values.</param>
            <returns>This instance of the <see cref="T:BLToolkit.Data.DbManager"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.CommitTransaction">
            <summary>
            Commits the database transaction.
            </summary>
            <returns>This instance of the <see cref="T:BLToolkit.Data.DbManager"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.RollbackTransaction">
            <summary>
            Rolls back a transaction from a pending state.
            </summary>
            <returns>This instance of the <see cref="T:BLToolkit.Data.DbManager"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.OnInitCommand(System.Data.IDbCommand)">
            <summary>
            Initializes a command and raises the <see cref="E:BLToolkit.Data.DbManager.InitCommand"/> event.
            </summary>
        </member>
        <member name="M:BLToolkit.Data.DbManager.GetCommand(BLToolkit.Data.DbManager.CommandAction,System.Data.CommandType,System.String)">
            <summary>
            Helper function. Creates the command object and sets command type and command text.
            </summary>
            <param name="commandAction">Command action.</param>
            <param name="commandType">The <see cref="T:System.Data.CommandType"/>
            (stored procedure, text, etc.)</param>
            <param name="sql">The SQL statement.</param>
            <returns>The command object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.OnBeforeOperation(BLToolkit.Data.OperationType)">
            <summary>
            Raises the <see cref="E:BLToolkit.Data.DbManager.BeforeOperation"/> event.
            </summary>
            <param name="op">The <see cref="T:BLToolkit.Data.OperationType"/>.</param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.OnAfterOperation(BLToolkit.Data.OperationType)">
            <summary>
            Raises the <see cref="E:BLToolkit.Data.DbManager.AfterOperation"/> event.
            </summary>
            <param name="op">The <see cref="T:BLToolkit.Data.OperationType"/>.</param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.OnOperationException(BLToolkit.Data.OperationType,BLToolkit.Data.DataException)">
            <summary>
            Raises the <see cref="E:BLToolkit.Data.DbManager.OperationException"/> event.
            </summary>
            <param name="op">The <see cref="T:BLToolkit.Data.OperationType"/>.</param>
            <param name="ex">The <see cref="T:System.Exception"/> occurred.</param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.PrepareParameters(System.Object[])">
            <summary>
             Creates an one-dimension array of <see cref="T:System.Data.IDbDataParameter"/>
             from any combination on IDbDataParameter, IDbDataParameter[] or null references.
             Null references are stripped, arrays and single parameters are combined
             into a new array.
            </summary>
             <remarks>When two or more parameters has the same name,
             the first parameter is used, all the rest are ignored.</remarks>
            <param name="parameters">Array of IDbDataParameter, IDbDataParameter[] or null references.</param>
            <returns>An normalized array of <see cref="T:System.Data.IDbDataParameter"/> without null references.</returns>
            <exception cref="T:System.ArgumentException">The parameter <paramref name="parameters"/>
             contains anything except IDbDataParameter, IDbDataParameter[] or null reference.</exception>
        </member>
        <member name="M:BLToolkit.Data.DbManager.AttachParameters(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Data.IDbDataParameter})">
            <summary>
            This method is used to attach array of <see cref="T:System.Data.IDbDataParameter"/> to a <see cref="T:System.Data.IDbCommand"/>.
            </summary>
            <param name="command">The command to which the parameters will be added</param>
            <param name="commandParameters">An array of IDbDataParameters tho be added to command</param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.DiscoverSpParameters(System.String,System.Boolean,System.Boolean)">
            <summary>
            Resolve at run time the appropriate set of parameters for a stored procedure.
            </summary>
            <param name="spName">The name of the stored procedure.</param>
            <param name="includeReturnValueParameter">Whether or not to include their return value parameter.</param>
            <param name="openNewConnection"></param>
            <returns></returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.CloneParameters(System.Data.IDbDataParameter[])">
            <summary>
            Copies cached parameter array.
            </summary>
            <param name="originalParameters">The original parameter array.</param>
            <returns>The result array.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.GetSpParameters(System.String,System.Boolean,System.Boolean)">
            <summary>
            Retrieves the set of parameters appropriate for the stored procedure.
            </summary>
            <remarks>
            This method will query the database for this information, 
            and then store it in a cache for future requests.
            </remarks>
            <param name="spName">The name of the stored procedure.</param>
            <param name="includeReturnValueParameter">A boolean value indicating
            whether the return value parameter should be included in the results.</param>
            <param name="openNewConnectionToDiscoverParameters"></param>
            <returns>An array of the <see cref="T:System.Data.IDbDataParameter"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.AssignParameterValues(System.String,System.Data.IDbDataParameter[],System.Object[])">
            <summary>
            This method assigns an array of values to an array of parameters.
            </summary>
            <param name="spName"></param>
            <param name="commandParameters">array of IDbDataParameters to be assigned values</param>
            <param name="parameterValues">array of objects holding the values to be assigned</param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.AssignParameterValues(System.Data.DataRow)">
            <overloads>
            Assigns a business object to command parameters.
            </overloads>
            <summary>
            Assigns the <see cref="T:System.Data.DataRow"/> to command parameters.
            </summary>
            <!-- Failed to insert some or all of included XML --><include file="Examples1.xml" path="examples/db[@name=&quot;AssignParameterValues(DataRow)&quot;]/*"/>
            <remarks>
            The method is used in addition to the <see cref="M:BLToolkit.Data.DbManager.CreateParameters(System.Object,System.Data.IDbDataParameter[])"/> method.
            </remarks>
            <param name="dataRow">The <see cref="T:System.Data.DataRow"/> to assign.</param>
            <returns>This instance of the <see cref="T:BLToolkit.Data.DbManager"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.AssignParameterValues(System.Object)">
            <summary>
            Assigns a business object to command parameters.
            </summary>
            <remarks>
            The method is used in addition to the <see cref="M:BLToolkit.Data.DbManager.CreateParameters(System.Object,System.Data.IDbDataParameter[])"/> method.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples1.xml" path="examples/db[@name=&quot;AssignParameterValues(object)&quot;]/*"/>
            <param name="obj">An object to assign.</param>
            <returns>This instance of the <see cref="T:BLToolkit.Data.DbManager"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.CreateParameters(System.Data.DataRow,System.Data.IDbDataParameter[])">
            <summary>
            Creates an array of parameters from the <see cref="T:System.Data.DataRow"/> object.
            </summary>
            <remarks>
            The method can take an additional parameter list, 
            which can be created by using the same method.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;CreateParameters(DataRow,IDbDataParameter[])&quot;]/*"/>
            <param name="dataRow">The <see cref="T:System.Data.DataRow"/> to create parameters.</param>
            <param name="commandParameters">An array of parameters to be added to the result array.</param>
            <returns>An array of parameters.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.CreateParameters(System.Data.DataRow,System.String[],System.String[],System.String[],System.Data.IDbDataParameter[])">
            <summary>
            Creates an array of parameters from the <see cref="T:System.Data.DataRow"/> object.
            </summary>
            <remarks>
            The method can take an additional parameter list, 
            which can be created by using the same method.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;CreateParameters(DataRow,IDbDataParameter[])&quot;]/*"/>
            <param name="dataRow">The <see cref="T:System.Data.DataRow"/> to create parameters.</param>
            <param name="outputParameters">Output parameters names.</param>
            <param name="inputOutputParameters">InputOutput parameters names.</param>
            <param name="ignoreParameters">Parameters names to skip.</param>
            <param name="commandParameters">An array of parameters to be added to the result array.</param>
            <returns>An array of parameters.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.CreateParameters(System.Object,System.Data.IDbDataParameter[])">
            <summary>
            Creates an array of parameters from a business object.
            </summary>
            <remarks>
            The method can take an additional parameter list, 
            which can be created by using the same method.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;CreateParameters(object,IDbDataParameter[])&quot;]/*"/>
            <param name="obj">An object.</param>
            <param name="commandParameters">An array of parameters to be added to the result array.</param>
            <returns>An array of parameters.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.CreateParameters(System.Object,System.String[],System.String[],System.String[],System.Data.IDbDataParameter[])">
            <summary>
            Creates an array of parameters from a business object.
            </summary>
            <remarks>
            The method can take an additional parameter list, 
            which can be created by using the same method.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;CreateParameters(object,IDbDataParameter[])&quot;]/*"/>
            <param name="obj">An object.</param>
            <param name="outputParameters">Output parameters names.</param>
            <param name="inputOutputParameters">InputOutput parameters names.</param>
            <param name="ignoreParameters">Parameters names to skip.</param>
            <param name="commandParameters">An array of parameters to be added to the result array.</param>
            <returns>An array of parameters.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.MapOutputParameters(System.String,System.Object)">
            <summary>
            Maps all parameters returned from the server to all given objects.
            </summary>
            <param name="returnValueMember">Name of a <see cref="T:BLToolkit.Mapping.MemberMapper"/> to map return value.</param>
            <param name="obj">An <see cref="T:System.Object"/> to map from command parameters.</param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.MapOutputParameters(System.Object)">
            <summary>
            Maps all parameters returned from the server to an object.
            </summary>
            <param name="obj">An <see cref="T:System.Object"/> to map from command parameters.</param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.MapOutputParameters(System.String,System.Object[])">
            <summary>
            Maps all parameters returned from the server to all given objects.
            </summary>
            <param name="returnValueMember">Name of the member used to map the
            return value. Can be null.</param>
            <param name="objects">An array of <see cref="T:System.Object"/> to map
            from command parameters.</param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.MapOutputParameters(System.Object[])">
            <summary>
            Maps all parameters returned from the server to an object.
            </summary>
            <param name="objects">An array of <see cref="T:System.Object"/> to map
            from command parameters.</param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Parameter(System.String)">
            <overloads>
            Adds a parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/> or returns existing one.
            </overloads>
            <summary>
            Returns an existing parameter.
            </summary>
            <remarks>
            The method can be used to retrieve return and output parameters.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples1.xml" path="examples/db[@name=&quot;Parameter(string)&quot;]/*"/>
            <param name="parameterName">The name of the parameter.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Parameter(System.String,System.Object)">
            <summary>
            Adds an input parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the
            <see cref="T:System.Data.ParameterDirection">ParameterDirection.Input</see> type.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples1.xml" path="examples/db[@name=&quot;Parameter(string,object)&quot;]/*"/>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">The <see cref="T:System.Object"/>
            that is the value of the parameter.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Parameter(System.String,System.Data.DbType)">
            <summary>
            Adds an input parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the
            <see cref="T:System.Data.ParameterDirection">ParameterDirection.Input</see> type.
            </remarks>
            <param name="parameterName">The name of the parameter.</param>
            <param name="dbType">One of the <see cref="T:System.Data.DbType"/> values.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Parameter(System.String,System.Data.DbType,System.Int32)">
            <summary>
            Adds an input parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the
            <see cref="T:System.Data.ParameterDirection">ParameterDirection.Input</see> type.
            </remarks>
            <param name="parameterName">The name of the parameter.</param>
            <param name="dbType">One of the <see cref="T:System.Data.DbType"/> values.</param>
            <param name="size">Size of the parameter.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.NullParameter(System.String,System.Object)">
            <summary>
            Adds an input parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the
            <see cref="T:System.Data.ParameterDirection">ParameterDirection.Input</see> type.
            If the parameter is null, it's converted to <see cref="T:System.DBNull"/>.<see cref="F:System.DBNull.Value"/>.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples1.xml" path="examples/db[@name=&quot;NullParameter(string,object)&quot;]/*"/>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">The <see cref="T:System.Object"/>
            that is the value of the parameter.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.NullParameter(System.String,System.Object,System.Object)">
            <summary>
            Adds an input parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the
            <see cref="T:System.Data.ParameterDirection">ParameterDirection.Input</see> type.
            </remarks>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">The <see cref="T:System.Object"/>
            that is the value of the parameter.</param>
            <param name="nullValue">The null equivalent to compare with the value.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.InputParameter(System.String,System.Object)">
            <summary>
            Adds an input parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the
            <see cref="T:System.Data.ParameterDirection">ParameterDirection.Input</see> type.
            </remarks>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">The <see cref="T:System.Object"/>
            that is the value of the parameter.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.OutputParameter(System.String,System.Object)">
            <summary>
            Adds an output parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the
            <see cref="T:System.Data.ParameterDirection">ParameterDirection.Output</see> type.
            </remarks>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">The <see cref="T:System.Object"/>
            that is the value of the parameter.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.OutputParameter(System.String,System.Data.DbType)">
            <summary>
            Adds an output parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the
            <see cref="T:System.Data.ParameterDirection">ParameterDirection.Output</see> type.
            </remarks>
            <param name="parameterName">The name of the parameter.</param>
            <param name="dbType">One of the <see cref="T:System.Data.DbType"/> values.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.OutputParameter(System.String,System.Data.DbType,System.Int32)">
            <summary>
            Adds an output parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the
            <see cref="T:System.Data.ParameterDirection">ParameterDirection.Output</see> type.
            </remarks>
            <param name="parameterName">The name of the parameter.</param>
            <param name="dbType">One of the <see cref="T:System.Data.DbType"/> values.</param>
            <param name="size">Size of the parameter.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.InputOutputParameter(System.String,System.Object)">
            <summary>
            Adds an input-output parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the
            <see cref="T:System.Data.ParameterDirection">ParameterDirection.InputOutput</see> type.
            </remarks>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">The <see cref="T:System.Object"/>
            that is the value of the parameter.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ReturnValue(System.String)">
            <summary>
            Adds a return value parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the
            <see cref="T:System.Data.ParameterDirection">ParameterDirection.ReturnValue</see> type.
            </remarks>
            <param name="parameterName">The name of the parameter.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Parameter(System.Data.ParameterDirection,System.String,System.Object)">
            <summary>
            Adds a parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the specified
            <see cref="T:System.Data.ParameterDirection"/> type.
            </remarks>
            <param name="parameterDirection">One of the <see cref="T:System.Data.ParameterDirection"/> values.</param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">The <see cref="T:System.Object"/>
            that is the value of the parameter.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Parameter(System.Data.ParameterDirection,System.String,System.Object,System.Data.DbType)">
            <summary>
            Adds a parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the specified
            <see cref="T:System.Data.ParameterDirection"/> type.
            </remarks>
            <param name="parameterDirection">One of the <see cref="T:System.Data.ParameterDirection"/> values.</param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">The <see cref="T:System.Object"/>
            that is the value of the parameter.</param>
            <param name="dbType">One of the <seealso cref="T:System.Data.DbType"/> values.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Parameter(System.String,System.Object,System.Data.DbType)">
            <summary>
            Adds an input parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">The <see cref="T:System.Object"/>
            that is the value of the parameter.</param>
            <param name="dbType">One of the <seealso cref="T:System.Data.DbType"/> values.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Parameter(System.Data.ParameterDirection,System.String,System.Object,System.Data.DbType,System.Int32)">
            <summary>
            Adds a parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the specified
            <see cref="T:System.Data.ParameterDirection"/> type.
            </remarks>
            <param name="parameterDirection">One of the <see cref="T:System.Data.ParameterDirection"/> values.</param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">The <see cref="T:System.Object"/>
            that is the value of the parameter.</param>
            <param name="dbType">One of the <seealso cref="T:System.Data.DbType"/> values.</param>
            <param name="size">Size of the parameter.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Parameter(System.Data.ParameterDirection,System.String,System.Object,System.String)">
            <summary>
            Adds a parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the specified
            <see cref="T:System.Data.ParameterDirection"/> type.
            </remarks>
            <param name="parameterDirection">One of the <see cref="T:System.Data.ParameterDirection"/> values.</param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">The <see cref="T:System.Object"/>
            that is the value of the parameter.</param>
            <param name="typeName">User defined type name for a table-valued parameter.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Parameter(System.String,System.Object,System.Data.DbType,System.Int32)">
            <summary>
            Adds an input parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">The <see cref="T:System.Object"/>
            that is the value of the parameter.</param>
            <param name="dbType">One of the <seealso cref="T:System.Data.DbType"/> values.</param>
            <param name="size">Size of the parameter.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Parameter(System.Data.ParameterDirection,System.String,System.Data.DbType)">
            <summary>
            Adds a parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the specified
            <see cref="T:System.Data.ParameterDirection"/> type.
            </remarks>
            <param name="parameterDirection">One of the <see cref="T:System.Data.ParameterDirection"/> values.</param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="dbType">One of the <seealso cref="T:System.Data.DbType"/> values.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Parameter(System.Data.ParameterDirection,System.String,System.Data.DbType,System.Int32)">
            <summary>
            Adds a parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the specified
            <see cref="T:System.Data.ParameterDirection"/> type.
            </remarks>
            <param name="parameterDirection">One of the <see cref="T:System.Data.ParameterDirection"/> values.</param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="dbType">One of the <seealso cref="T:System.Data.DbType"/> values.</param>
            <param name="size">Size of the parameter.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Parameter(System.String,System.Data.DbType,System.Int32,System.String)">
            <summary>
            Creates an input parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the
            <see cref="T:System.Data.ParameterDirection">ParameterDirection.Input</see> type
            and <see cref="T:System.Data.DataRowVersion">DataRowVersion.Current</see> type.
            </remarks>
            <param name="parameterName">The name of the parameter.</param>
            <param name="dbType">One of the <see cref="T:System.Data.DbType"/> values.</param>
            <param name="size">Size of the parameter.</param>
            <param name="sourceColumn">Source column for a parameter in the <see cref="T:System.Data.DataTable"/>.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Parameter(System.String,System.Data.DbType,System.String)">
            <summary>
            Creates an input parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the
            <see cref="T:System.Data.ParameterDirection">ParameterDirection.Input</see> type
            and <see cref="T:System.Data.DataRowVersion">DataRowVersion.Current</see> type.
            </remarks>
            <param name="parameterName">The name of the parameter.</param>
            <param name="dbType">One of the <see cref="T:System.Data.DbType"/> values.</param>
            <param name="sourceColumn">Source column for a parameter in the <see cref="T:System.Data.DataTable"/>.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Parameter(System.String,System.Data.DbType,System.Int32,System.String,System.Data.DataRowVersion)">
            <summary>
            Creates an input parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the
            <see cref="T:System.Data.ParameterDirection">ParameterDirection.Input</see> type
            and <see cref="T:System.Data.DataRowVersion">DataRowVersion.Current</see> type.
            </remarks>
            <param name="parameterName">The name of the parameter.</param>
            <param name="dbType">One of the <see cref="T:System.Data.DbType"/> values.</param>
            <param name="size">Size of the parameter.</param>
            <param name="sourceColumn">Source column for a parameter in the <see cref="T:System.Data.DataTable"/>.</param>
            <param name="dataRowVersion">Version of data to use for a parameter in the <see cref="T:System.Data.DataTable"/>.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Parameter(System.String,System.Data.DbType,System.String,System.Data.DataRowVersion)">
            <summary>
            Creates an input parameter to the <see cref="P:BLToolkit.Data.DbManager.Command"/>.
            </summary>
            <remarks>
            The method creates a parameter with the
            <see cref="T:System.Data.ParameterDirection">ParameterDirection.Input</see> type
            and <see cref="T:System.Data.DataRowVersion">DataRowVersion.Current</see> type.
            </remarks>
            <param name="parameterName">The name of the parameter.</param>
            <param name="dbType">One of the <see cref="T:System.Data.DbType"/> values.</param>
            <param name="sourceColumn">Source column for a parameter in the <see cref="T:System.Data.DataTable"/>.</param>
            <param name="dataRowVersion">Version of data to use for a parameter in the <see cref="T:System.Data.DataTable"/>.</param>
            <returns>The <see cref="T:System.Data.IDbDataParameter"/> object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.SetCommand(System.String)">
            <summary>
            Creates a SQL statement.
            </summary>
            <param name="commandText">The command text to execute.</param>
            <returns>Current instance.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.SetCommand(System.Data.CommandType,System.String)">
            <summary>
            Creates a SQL statement.
            </summary>
            <param name="commandType">The <see cref="T:System.Data.CommandType"/> (stored procedure, text, etc.)</param>
            <param name="commandText">The command text to execute.</param>
            <returns>Current instance.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.SetCommand(System.String,System.Data.IDbDataParameter[])">
            <summary>
            Creates a SQL statement.
            </summary>
            <remarks>
            The method can be used to create the <i>INSERT</i>, <i>UPDATE</i>, and <i>DELETE</i> SQL statements.
            </remarks>
            <param name="commandText">The command text to execute.</param>
            <param name="commandParameters">An array of parameters used to executes the command.</param>
            <returns>Current instance.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.SetCommand(System.Data.CommandType,System.String,System.Data.IDbDataParameter[])">
            <summary>
            Creates a SQL statement.
            </summary>
            <param name="commandType">The <see cref="T:System.Data.CommandType"/> (stored procedure, text, etc.)</param>
            <param name="commandText">The command text to execute.</param>
            <param name="commandParameters">An array of parameters used to executes the command.</param>
            <returns>Current instance.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.SetSpCommand(System.String,System.Object[])">
            <summary>
            Creates a command to be executed as a stored procedure using the provided parameter values.
            </summary>
            <remarks>
            The method queries the database to discover the parameters for the stored procedure 
            (the first time each stored procedure is called), 
            and assign the values based on parameter order.
            </remarks>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>Current instance.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.SetInsertCommand(System.String,System.Data.IDbDataParameter[])">
            <summary>
            Creates an Insert SQL statement.
            </summary>
            <remarks>
            The method can be used to create the <i>INSERT</i>, <i>UPDATE</i>, and <i>DELETE</i> SQL statements.
            </remarks>
            <param name="commandText">The command text to execute.</param>
            <param name="commandParameters">An array of parameters used to executes the command.</param>
            <returns>Current instance.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.SetInsertCommand(System.Data.CommandType,System.String,System.Data.IDbDataParameter[])">
            <summary>
            Creates an Insert SQL statement.
            </summary>
            <param name="commandType">The <see cref="T:System.Data.CommandType"/> (stored procedure, text, etc.)</param>
            <param name="commandText">The command text to execute.</param>
            <param name="commandParameters">An array of parameters used to executes the command.</param>
            <returns>Current instance.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.SetInsertSpCommand(System.String,System.Object[])">
            <summary>
            Creates an Insert command to be executed as a stored procedure using the provided parameter values.
            </summary>
            <remarks>
            The method queries the database to discover the parameters for the stored procedure 
            (the first time each stored procedure is called), 
            and assign the values based on parameter order.
            </remarks>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>Current instance.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.SetUpdateCommand(System.String,System.Data.IDbDataParameter[])">
            <summary>
            Creates an Update SQL statement.
            </summary>
            <remarks>
            The method can be used to create the <i>INSERT</i>, <i>UPDATE</i>, and <i>DELETE</i> SQL statements.
            </remarks>
            <param name="commandText">The command text to execute.</param>
            <param name="commandParameters">An array of parameters used to executes the command.</param>
            <returns>Current instance.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.SetUpdateCommand(System.Data.CommandType,System.String,System.Data.IDbDataParameter[])">
            <summary>
            Creates an Update SQL statement.
            </summary>
            <param name="commandType">The <see cref="T:System.Data.CommandType"/> (stored procedure, text, etc.)</param>
            <param name="commandText">The command text to execute.</param>
            <param name="commandParameters">An array of parameters used to executes the command.</param>
            <returns>Current instance.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.SetUpdateSpCommand(System.String,System.Object[])">
            <summary>
            Creates an Update command to be executed as a stored procedure using the provided parameter values.
            </summary>
            <remarks>
            The method queries the database to discover the parameters for the stored procedure 
            (the first time each stored procedure is called), 
            and assign the values based on parameter order.
            </remarks>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>Current instance.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.SetDeleteCommand(System.String,System.Data.IDbDataParameter[])">
            <summary>
            Creates a Delete SQL statement.
            </summary>
            <remarks>
            The method can be used to create the <i>INSERT</i>, <i>UPDATE</i>, and <i>DELETE</i> SQL statements.
            </remarks>
            <param name="commandText">The command text to execute.</param>
            <param name="commandParameters">An array of parameters used to executes the command.</param>
            <returns>Current instance.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.SetDeleteCommand(System.Data.CommandType,System.String,System.Data.IDbDataParameter[])">
            <summary>
            Creates a Delete SQL statement.
            </summary>
            <param name="commandType">The <see cref="T:System.Data.CommandType"/> (stored procedure, text, etc.)</param>
            <param name="commandText">The command text to execute.</param>
            <param name="commandParameters">An array of parameters used to executes the command.</param>
            <returns>Current instance.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.SetDeleteSpCommand(System.String,System.Object[])">
            <summary>
            Creates a Delete command to be executed as a stored procedure using the provided parameter values.
            </summary>
            <remarks>
            The method queries the database to discover the parameters for the stored procedure 
            (the first time each stored procedure is called), 
            and assign the values based on parameter order.
            </remarks>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>Current instance.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Prepare">
            <summary>
            Prepares a command for execution.
            </summary>
            <returns>Current instance.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteForEach(System.Collections.ICollection)">
            <summary>
            Executes a SQL statement for a given collection of objects and 
            returns the number of rows affected.
            </summary>
            <remarks>
            The method prepares the <see cref="P:BLToolkit.Data.DbManager.Command"/> object 
            and calls the <see cref="M:BLToolkit.Data.DbManager.ExecuteNonQuery"/> method for each item of the list.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples1.xml" path="examples/db[@name=&quot;Execute(CommandType,string,IList)&quot;]/*"/>
            <param name="collection">The list of objects used to execute the command.</param>
            <returns>The number of rows affected by the command.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteForEach``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Executes a SQL statement for a given collection of objects and 
            returns the number of rows affected.
            </summary>
            <remarks>
            The method prepares the <see cref="P:BLToolkit.Data.DbManager.Command"/> object 
            and calls the <see cref="M:BLToolkit.Data.DbManager.ExecuteNonQuery"/> method for each item of the list.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples1.xml" path="examples/db[@name=&quot;Execute(CommandType,string,IList)&quot;]/*"/>
            <param name="collection">The list of objects used to execute the command.</param>
            <returns>The number of rows affected by the command.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteForEach(System.Data.DataTable)">
            <summary>
            Executes a SQL statement for the <see cref="T:System.Data.DataTable"/> and 
            returns the number of rows affected.
            </summary>
            <remarks>
            The method prepares the <see cref="P:BLToolkit.Data.DbManager.Command"/> object 
            and calls the <see cref="M:BLToolkit.Data.DbManager.ExecuteNonQuery"/> method for each item 
            of the <see cref="T:System.Data.DataTable"/>.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples1.xml" path="examples/db[@name=&quot;Execute(CommandType,string,DataTable)&quot;]/*"/>
            <param name="table">An instance of the <see cref="T:System.Data.DataTable"/> class to execute the command.</param>
            <returns>The number of rows affected by the command.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteForEach(System.Data.DataSet)">
            <summary>
            Executes a SQL statement for the first table of the <see cref="T:System.Data.DataSet"/> 
            and returns the number of rows affected.
            </summary>
            <remarks>
            The method prepares the <see cref="P:BLToolkit.Data.DbManager.Command"/> object
            and calls the <see cref="M:BLToolkit.Data.DbManager.ExecuteNonQuery"/> method for each item of the first table.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples1.xml" path="examples/db[@name=&quot;Execute(CommandType,string,DataSet)&quot;]/*"/>
            <param name="dataSet">An instance of the <see cref="T:System.Data.DataSet"/> class to execute the command.</param>
            <returns>The number of rows affected by the command.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteForEach(System.Data.DataSet,BLToolkit.Common.NameOrIndexParameter)">
            <summary>
            Executes a SQL statement for the specified table of the <see cref="T:System.Data.DataSet"/> 
            and returns the number of rows affected.
            </summary>
            <remarks>
            The method prepares the <see cref="P:BLToolkit.Data.DbManager.Command"/> object
            and calls the <see cref="M:BLToolkit.Data.DbManager.ExecuteNonQuery"/> method for each item of the first table.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples1.xml" path="examples/db[@name=&quot;Execute(CommandType,string,DataSet,string)&quot;]/*"/>
            <param name="dataSet">An instance of the <see cref="T:System.Data.DataSet"/> class to execute the command.</param>
            <param name="nameOrIndex">The table name or index.
            name/index.</param>
            <returns>The number of rows affected by the command.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteNonQuery">
            <summary>
            Executes a SQL statement and returns the number of rows affected.
            </summary>
            <remarks>
            The method can be used to execute the <i>INSERT</i>, <i>UPDATE</i>, and <i>DELETE</i> SQL statements.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples1.xml" path="examples/db[@name=&quot;ExecuteNonQuery()&quot;]/*"/>
            <returns>The number of rows affected by the command.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteNonQuery(System.String,System.Object)">
            <summary>
            Executes a SQL statement and returns the number of rows affected.
            </summary>
            <remarks>
            The method can be used to execute the <i>INSERT</i>, <i>UPDATE</i>, and <i>DELETE</i> SQL statements.
            </remarks>
            <param name="returnValueMember">Name of a <see cref="T:BLToolkit.Mapping.MemberMapper"/> to map return value.</param>
            <param name="obj">An <see cref="T:System.Object"/> to map from command parameters.</param>
            <returns>The number of rows affected by the command.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteNonQuery(System.Object)">
            <summary>
            Executes a SQL statement and returns the number of rows affected.
            </summary>
            <remarks>
            The method can be used to execute the <i>INSERT</i>, <i>UPDATE</i>, and <i>DELETE</i> SQL statements.
            </remarks>
            <param name="obj">An <see cref="T:System.Object"/> to map from command parameters.</param>
            <returns>The number of rows affected by the command.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteNonQuery(System.String,System.Object[])">
            <summary>
            Executes a SQL statement and returns the number of rows affected.
            </summary>
            <remarks>
            The method can be used to execute the <i>INSERT</i>, <i>UPDATE</i>, and <i>DELETE</i> SQL statements.
            </remarks>
            <param name="returnValueMember">Name of a <see cref="T:BLToolkit.Mapping.MemberMapper"/> to map return value.</param>
            <param name="objects">An array of <see cref="T:System.Object"/> to map
            from command parameters.</param>
            <returns>The number of rows affected by the command.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteNonQuery(System.Object[])">
            <summary>
            Executes a SQL statement and returns the number of rows affected.
            </summary>
            <remarks>
            The method can be used to execute the <i>INSERT</i>, <i>UPDATE</i>, and <i>DELETE</i> SQL statements.
            </remarks>
            <param name="objects">An array of <see cref="T:System.Object"/> to map
            from command parameters.</param>
            <returns>The number of rows affected by the command.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalar">
            <summary>
            Executes the query, and returns the first column of the first row
            in the resultset returned by the query. Extra columns or rows are
            ignored.
            </summary>
            <returns>The first column of the first row in the resultset.</returns>
            <seealso cref="M:BLToolkit.Data.DbManager.ExecuteScalar(BLToolkit.Data.ScalarSourceType,BLToolkit.Common.NameOrIndexParameter)"/>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalar(BLToolkit.Data.ScalarSourceType)">
            <summary>
            Executes the query, and returns the value with specified scalar
            source type.
            </summary>
            <param name="sourceType">The method used to return the scalar
            value.</param>
            <returns><list type="table">
            <listheader>
             <term>ScalarSourceType</term>
             <description>Return value</description>
            </listheader>
            <item>
             <term>DataReader</term>
             <description>The first column of the first row in the resultset.
             </description>
            </item>
            <item>
             <term>OutputParameter</term>
             <description>The value of the first output or input/output
             parameter returned.</description>
            </item>
            <item>
             <term>ReturnValue</term>
             <description>The value of the "return value" parameter returned.
             </description>
            </item>
            <item>
             <term>AffectedRows</term>
             <description>The number of rows affected.</description>
            </item>
            </list>
            </returns>
            <seealso cref="M:BLToolkit.Data.DbManager.ExecuteScalar(BLToolkit.Data.ScalarSourceType,BLToolkit.Common.NameOrIndexParameter)"/>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalar(BLToolkit.Data.ScalarSourceType,BLToolkit.Common.NameOrIndexParameter)">
            <summary>
            Executes the query, and returns the value with specified scalar
            source type.
            </summary>
            <param name="sourceType">The method used to return the scalar value.</param>
            <param name="nameOrIndex">The column name/index or output parameter name/index.</param>
            <returns><list type="table">
            <listheader>
             <term>ScalarSourceType</term>
             <description>Return value</description>
            </listheader>
            <item>
             <term>DataReader</term>
             <description>The column with specified name or at specified index
             of the first row in the resultset.</description>
            </item>
            <item>
             <term>OutputParameter</term>
             <description>The value of the output or input/output parameter
             returned with specified name or at specified index.</description>
            </item>
            <item>
             <term>ReturnValue</term>
             <description>The value of the "return value" parameter returned.
             The index parameter is ignored.</description>
            </item>
            <item>
             <term>AffectedRows</term>
             <description>The number of rows affected. The index parameter is
             ignored.</description>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalar``1">
            <summary>
            Executes the query, and returns the first column of the first row
            in the resultset returned by the query. Extra columns or rows are
            ignored.
            </summary>
            <returns>
            The first column of the first row in the resultset.</returns>
            <seealso cref="M:BLToolkit.Data.DbManager.ExecuteScalar``1(BLToolkit.Data.ScalarSourceType,BLToolkit.Common.NameOrIndexParameter)"/>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalar``1(BLToolkit.Data.ScalarSourceType)">
            <summary>
            Executes the query, and returns the value with specified scalar
            source type.
            </summary>
            <param name="sourceType">The method used to return the scalar
            value.</param>
            <returns><list type="table">
            <listheader>
             <term>ScalarSourceType</term>
             <description>Return value</description>
            </listheader>
            <item>
             <term>DataReader</term>
             <description>The first column of the first row in the resultset.
             </description>
            </item>
            <item>
             <term>OutputParameter</term>
             <description>The value of the first output or input/output
             parameter returned.</description>
            </item>
            <item>
             <term>ReturnValue</term>
             <description>The value of the "return value" parameter returned.
             </description>
            </item>
            <item>
             <term>AffectedRows</term>
             <description>The number of rows affected.</description>
            </item>
            </list>
            </returns>
            <seealso cref="M:BLToolkit.Data.DbManager.ExecuteScalar``1(BLToolkit.Data.ScalarSourceType,BLToolkit.Common.NameOrIndexParameter)"/>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalar``1(BLToolkit.Data.ScalarSourceType,BLToolkit.Common.NameOrIndexParameter)">
            <summary>
            Executes the query, and returns the value with specified scalar
            source type.
            </summary>
            <param name="sourceType">The method used to return the scalar value.</param>
            <param name="nameOrIndex">The column name/index or output parameter name/index.</param>
            <returns><list type="table">
            <listheader>
             <term>ScalarSourceType</term>
             <description>Return value</description>
            </listheader>
            <item>
             <term>DataReader</term>
             <description>The column with specified name or at specified index
             of the first row in the resultset.</description>
            </item>
            <item>
             <term>OutputParameter</term>
             <description>The value of the output or input/output parameter
             returned with specified name or at specified index.</description>
            </item>
            <item>
             <term>ReturnValue</term>
             <description>The value of the "return value" parameter returned.
             The index parameter is ignored.</description>
            </item>
            <item>
             <term>AffectedRows</term>
             <description>The number of rows affected. The index parameter is
             ignored.</description>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalarList(System.Collections.IList,System.Type,BLToolkit.Common.NameOrIndexParameter)">
            <summary>
            Executes the query, and returns the array list of values of the
            specified column of  the every row in the resultset returned by the
            query. Other columns are ignored.
            </summary>
            <param name="list">The array to fill in.</param>
            <param name="nameOrIndex">The column name/index or output parameter name/index.</param>
            <param name="type">The type of the each element.</param>
            <returns>Array list of values of the specified column of the every
            row in the resultset.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalarList(System.Collections.IList,System.Type)">
            <summary>
            Executes the query, and returns the array list of values of first
            column of the every row in the resultset returned by the query.
            Other columns are ignored.
            </summary>
            <param name="list">The array to fill in.</param>
            <param name="type">The type of the each element.</param>
            <returns>Array list of values of first column of the every row in
            the resultset.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalarList(System.Type,BLToolkit.Common.NameOrIndexParameter)">
            <summary>
            Executes the query, and returns the array list of values of the
            specified column of  the every row in the resultset returned by the
            query. Other columns are ignored.
            </summary>
            <param name="nameOrIndex">The column name/index.</param>
            <param name="type">The type of the each element.</param>
            <returns>Array list of values of the specified column of the every
            row in the resultset.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalarList(System.Type)">
            <summary>
            Executes the query, and returns the array list of values of first
            column of the every row in the resultset returned by the query.
            Other columns are ignored.
            </summary>
            <param name="type">The type of the each element.</param>
            <returns>Array list of values of first column of the every row in
            the resultset.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalarList``1(System.Collections.Generic.IList{``0},BLToolkit.Common.NameOrIndexParameter)">
            <summary>
            Executes the query, and returns the array list of values of the
            specified column of  the every row in the resultset returned by the
            query. Other columns are ignored.
            </summary>
            <param name="list">The array to fill in.</param>
            <param name="nameOrIndex">The column name/index or output parameter
            name/index.</param>
            <typeparam name="T">The type of the each element.</typeparam>
            <returns>Array list of values of the specified column of the every
            row in the resultset.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalarList``1(System.Collections.Generic.IList{``0})">
            <summary>
            Executes the query, and returns the array list of values of first
            column of the every row in the resultset returned by the query.
            Other columns are ignored.
            </summary>
            <param name="list">The array to fill in.</param>
            <typeparam name="T">The type of the each element.</typeparam>
            <returns>Array list of values of first column of the every row in
            the resultset.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalarList``1(BLToolkit.Common.NameOrIndexParameter)">
            <summary>
            Executes the query, and returns the array list of values of the
            specified column of the every row in the resultset returned by the
            query. Other columns are ignored.
            </summary>
            <param name="nameOrIndex">The column name/index or output parameter name/index.</param>
            <typeparam name="T">The type of the each element.</typeparam>
            <returns>Array list of values of the specified column of the every
            row in the resultset.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalarList``1">
            <summary>
            Executes the query, and returns the list of values of first
            column of the every row in the resultset returned by the query.
            Other columns are ignored.
            </summary>
            <typeparam name="T">The type of the each element.</typeparam>
            <returns>Array list of values of first column of the every row in
            the resultset.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalarDictionary(System.Collections.IDictionary,BLToolkit.Common.NameOrIndexParameter,System.Type,BLToolkit.Common.NameOrIndexParameter,System.Type)">
            <summary>
             Executes the query, and returns the dictionary.
             The keys are loaded from a column specified by <paramref name="keyField"/> and
             values are loaded from a column specified by <paramref name="valueField"/>.
             Other columns are ignored.
            </summary>
            <param name="dic">The dictionary to add values.</param>
            <param name="keyField">The column name/index to load keys.</param>
            <param name="keyFieldType">The key type.</param>
            <param name="valueField">The column name/index to load values.</param>
            <param name="valueFieldType">The value type.</param>
            <returns>The loaded dictionary.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalarDictionary(BLToolkit.Common.NameOrIndexParameter,System.Type,BLToolkit.Common.NameOrIndexParameter,System.Type)">
            <summary>
             Executes the query, and returns the dictionary.
             The keys are loaded from a column specified by <paramref name="keyField"/> and
             values are loaded from a column specified by <paramref name="valueField"/>.
             Other columns are ignored.
            </summary>
            <param name="keyField">The column name/index to load keys.</param>
            <param name="keyFieldType">The key type.</param>
            <param name="valueField">The column name/index to load values.</param>
            <param name="valueFieldType">The value type.</param>
            <returns>The loaded dictionary.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalarDictionary``2(System.Collections.Generic.IDictionary{``0,``1},BLToolkit.Common.NameOrIndexParameter,BLToolkit.Common.NameOrIndexParameter)">
            <summary>
             Executes the query, and returns the dictionary.
             The keys are loaded from a column specified by <paramref name="keyField"/> and
             values are loaded from a column specified by <paramref name="valueField"/>.
             Other columns are ignored.
            </summary>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="T">The value type.</typeparam>
            <param name="dic">The dictionary to add values.</param>
            <param name="keyField">The column name/index to load keys.</param>
            <param name="valueField">The column name/index to load values.</param>
            <returns>The loaded dictionary.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalarDictionary``2(BLToolkit.Common.NameOrIndexParameter,BLToolkit.Common.NameOrIndexParameter)">
            <summary>
             Executes the query, and returns the dictionary.
             The keys are loaded from a column specified by <paramref name="keyField"/> and
             values are loaded from a column specified by <paramref name="valueField"/>.
             Other columns are ignored.
            </summary>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="T">The value type.</typeparam>
            <param name="keyField">The column name/index to load keys.</param>
            <param name="valueField">The column name/index to load values.</param>
            <returns>The loaded dictionary.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalarDictionary(System.Collections.IDictionary,BLToolkit.Mapping.MapIndex,BLToolkit.Common.NameOrIndexParameter,System.Type)">
            <summary>
             Executes the query, and returns the dictionary.
             The keys are loaded from columns specified by <paramref name="index"/> and
             values are loaded from a column specified by <paramref name="valueField"/>.
             Other columns are ignored.
            </summary>
            <param name="dic">The dictionary to add values.</param>
            <param name="index">The <see cref="T:BLToolkit.Mapping.MapIndex"/> of the key columns.</param>
            <param name="valueField">The column name/index to load values.</param>
            <param name="valueFieldType">The value type.</param>
            <returns>The loaded dictionary.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalarDictionary(BLToolkit.Mapping.MapIndex,BLToolkit.Common.NameOrIndexParameter,System.Type)">
            <summary>
             Executes the query, and returns the dictionary.
             The keys are loaded from columns specified by <paramref name="index"/> and
             values are loaded from a column specified by <paramref name="valueField"/>.
             Other columns are ignored.
            </summary>
            <param name="index">The <see cref="T:BLToolkit.Mapping.MapIndex"/> of the key columns.</param>
            <param name="valueField">The column name/index to load values.</param>
            <param name="valueFieldType">The value type.</param>
            <returns>The loaded dictionary.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalarDictionary``1(System.Collections.Generic.IDictionary{BLToolkit.Common.CompoundValue,``0},BLToolkit.Mapping.MapIndex,BLToolkit.Common.NameOrIndexParameter)">
            <summary>
             Executes the query, and returns the dictionary.
             The keys are loaded from columns specified by <paramref name="index"/> and
             values are loaded from a column specified by <paramref name="valueField"/>.
             Other columns are ignored.
            </summary>
            <typeparam name="T">The value type.</typeparam>
            <param name="dic">The dictionary to add values.</param>
            <param name="index">The <see cref="T:BLToolkit.Mapping.MapIndex"/> of the key columns.</param>
            <param name="valueField">The column name/index to load values.</param>
            <returns>The loaded dictionary.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteScalarDictionary``1(BLToolkit.Mapping.MapIndex,BLToolkit.Common.NameOrIndexParameter)">
            <summary>
             Executes the query, and returns the dictionary.
             The keys are loaded from columns specified by <paramref name="index"/> and
             values are loaded from a column specified by <paramref name="valueField"/>.
             Other columns are ignored.
            </summary>
            <typeparam name="T">The value type.</typeparam>
            <param name="index">The <see cref="T:BLToolkit.Mapping.MapIndex"/> of the key columns.</param>
            <param name="valueField">The column name/index to load values.</param>
            <returns>The loaded dictionary.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteReader">
            <summary>
            Executes the command and builds an <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <returns>An instance of the <see cref="T:System.Data.IDataReader"/> class.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteReader(System.Data.CommandBehavior)">
            <summary>
            Executes the command and builds an <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="commandBehavior">One of the <see cref="T:System.Data.CommandBehavior"/> values.</param>
            <returns>An instance of the <see cref="T:System.Data.IDataReader"/> class.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDataSet">
            <summary>
            Executes a SQL statement using the provided parameters.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.ExecuteDataSet(BLToolkit.Common.NameOrIndexParameter)"/> method
            to find an example.
            </remarks>
            <returns>The <see cref="T:System.Data.DataSet"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDataSet(System.Data.DataSet)">
            <summary>
            Executes a SQL statement using the provided parameters.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.ExecuteDataSet(BLToolkit.Common.NameOrIndexParameter)"/> method
            to find an example.
            </remarks>
            <param name="dataSet">The input <see cref="T:System.Data.DataSet"/> object.</param>
            <returns>The <see cref="T:System.Data.DataSet"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDataSet(BLToolkit.Common.NameOrIndexParameter)">
            <summary>
            Executes a SQL statement using the provided parameters.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.ExecuteDataSet(BLToolkit.Common.NameOrIndexParameter)"/> method
            to find an example.
            </remarks>
            <param name="table">The name or index of the populating table.</param>
            <returns>The <see cref="T:System.Data.DataSet"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDataSet(System.Data.DataSet,BLToolkit.Common.NameOrIndexParameter)">
            <summary>
            Executes a SQL statement using the provided parameters.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> object to populate.</param>
            <param name="table">The name or index of the populating table.</param>
            <returns>The <see cref="T:System.Data.DataSet"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDataSet(System.Data.DataSet,System.Int32,System.Int32,BLToolkit.Common.NameOrIndexParameter)">
            <summary>
            Executes a SQL statement using the provided parameters.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> object to populate.</param>
            <param name="table">The name or index of the populating table.</param>
            <param name="startRecord">The zero-based record number to start with.</param>
            <param name="maxRecords">The maximum number of records to retrieve.</param>
            <returns>The <see cref="T:System.Data.DataSet"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDataTable">
            <summary>
            Executes a SQL statement using the provided parameters.
            </summary>
            <returns>The <see cref="T:System.Data.DataTable"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDataTable(System.Data.DataTable)">
            <summary>
            Executes a SQL statement using the provided parameters.
            </summary>
            <param name="dataTable">The <see cref="T:System.Data.DataTable"/> object to populate.</param>
            <returns>The <see cref="T:System.Data.DataTable"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDataTables(System.Int32,System.Int32,System.Data.DataTable[])">
            <summary>Adds or refreshes rows in a <see cref="T:System.Data.DataTable"/>
            to match those in the data source starting at the specified record
            and retrieving up to the specified maximum number of records.
            </summary>
            <param name="startRecord">The zero-based record number to start with.</param>
            <param name="maxRecords">The maximum number of records to retrieve.</param>
            <param name="tableList">The <see cref="T:System.Data.DataTable"/> objects
            to fill from the data source.</param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDataTables(System.Data.DataTable[])">
            <summary>Adds or refreshes rows in a <see cref="T:System.Data.DataTable"/>
            to match those in the data source starting at the specified record
            and retrieving up to the specified maximum number of records.
            </summary>
            <param name="tableList">The <see cref="T:System.Data.DataTable"/> objects
            to fill from the data source.</param>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteObjectInternal(System.Object,System.Type,System.Object[])">
            <summary>
            Executes a SQL statement and maps resultset to an object.
            </summary>
            <param name="entity">An object to populate.</param>
            <param name="type">The System.Type of the object.</param>
            <param name="parameters">Additional parameters passed to object constructor through <see cref="T:BLToolkit.Reflection.InitContext"/>.</param>
            <returns>A business object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteObject(System.Object)">
            <summary>
            Executes a SQL statement and maps resultset to an object.
            </summary>
            <param name="entity">An object to populate.</param>
            <returns>A business object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteObject(System.Object,System.Object[])">
            <summary>
            Executes a SQL statement and maps resultset to an object.
            </summary>
            <param name="entity">An object to populate.</param>
            <param name="parameters">Additional parameters passed to object constructor through <see cref="T:BLToolkit.Reflection.InitContext"/>.</param>
            <returns>A business object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteObject(System.Type)">
            <summary>
            Executes a SQL statement and maps resultset to an object.
            </summary>
            <param name="type">Type of an object.</param>
            <returns>A business object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteObject(System.Type,System.Object[])">
            <summary>
            Executes a SQL statement and maps resultset to an object.
            </summary>
            <param name="type">Type of an object.</param>
            <param name="parameters">Additional parameters passed to object constructor through <see cref="T:BLToolkit.Reflection.InitContext"/>.</param>
            <returns>A business object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteObject``1">
            <summary>
            Executes a SQL statement and maps resultset to an object.
            </summary>
            <typeparam name="T">Type of an object.</typeparam>
            <returns>A business object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteObject``1(System.Object[])">
            <summary>
            Executes a SQL statement and maps resultset to an object.
            </summary>
            <typeparam name="T">Type of an object.</typeparam>
            <param name="parameters">Additional parameters passed to object constructor through <see cref="T:BLToolkit.Reflection.InitContext"/>.</param>
            <returns>A business object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteList(System.Type)">
            <summary>
            Executes the query, and returns an array of business entities using the provided parameters.
            </summary>
            <param name="type">Type of the business object.</param>
            <returns>An array of business objects.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteList``1">
            <summary>
            Executes the query, and returns an array of business entities.
            </summary>
            <typeparam name="T">Type of an object.</typeparam>
            <returns>Populated list of mapped business objects.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteList(System.Type,System.Object[])">
            <summary>
            Executes the query, and returns an array of business entities using the provided parameters.
            </summary>
            <param name="type">Type of the business object.</param>
            <param name="parameters">Additional parameters passed to object constructor through <see cref="T:BLToolkit.Reflection.InitContext"/>.</param>
            <returns>An array of business objects.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteList``1(System.Object[])">
            <summary>
            Executes the query, and returns an array of business entities.
            </summary>
            <typeparam name="T">Type of an object.</typeparam>
            <param name="parameters">Additional parameters passed to object constructor through <see cref="T:BLToolkit.Reflection.InitContext"/>.</param>
            <returns>Populated list of mapped business objects.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteList(System.Collections.IList,System.Type)">
            <summary>
            Executes the query, and returns an array of business entities.
            </summary>
            <param name="list">The list of mapped business objects to populate.</param>
            <param name="type">Type of an object.</param>
            <returns>Populated list of mapped business objects.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteList``1(System.Collections.Generic.IList{``0})">
            <summary>
            Executes the query, and returns an array of business entities.
            </summary>
            <typeparam name="T">Type of an object.</typeparam>
            <param name="list">The list of mapped business objects to populate.</param>
            <returns>Populated list of mapped business objects.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteList(System.Collections.IList,System.Type,System.Object[])">
            <summary>
            Executes the query, and returns an array of business entities.
            </summary>
            <param name="list">The list of mapped business objects to populate.</param>
            <param name="type">Type of an object.</param>
            <param name="parameters">Additional parameters passed to object constructor through <see cref="T:BLToolkit.Reflection.InitContext"/>.</param>
            <returns>Populated list of mapped business objects.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteList``1(System.Collections.Generic.IList{``0},System.Object[])">
            <summary>
            Executes the query, and returns an array of business entities.
            </summary>
            <typeparam name="T">Type of an object.</typeparam>
            <param name="list">The list of mapped business objects to populate.</param>
            <param name="parameters">Additional parameters passed to object constructor through <see cref="T:BLToolkit.Reflection.InitContext"/>.</param>
            <returns>Populated list of mapped business objects.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteList``2(``0,System.Object[])">
            <summary>
            Executes the query, and returns an array of business entities.
            </summary>
            <typeparam name="TList">Type of a list.</typeparam>
            <typeparam name="T">Type of an object.</typeparam>
            <param name="list">The list of mapped business objects to populate.</param>
            <param name="parameters">Additional parameters passed to object constructor through <see cref="T:BLToolkit.Reflection.InitContext"/>.</param>
            <returns>Populated list of mapped business objects.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteList``2(System.Object[])">
            <summary>
            Executes the query, and returns an array of business entities.
            </summary>
            <typeparam name="TList">Type of a list.</typeparam>
            <typeparam name="T">Type of an object.</typeparam>
            <param name="parameters">Additional parameters passed to object constructor through <see cref="T:BLToolkit.Reflection.InitContext"/>.</param>
            <returns>Populated list of mapped business objects.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDictionary(BLToolkit.Common.NameOrIndexParameter,System.Type,System.Object[])">
            <summary>
            Executes the query, and returns the <see cref="T:System.Collections.Hashtable"/> of business entities 
            using the provided parameters.
            </summary>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;ExecuteDictionary(string,Type)&quot;]/*"/>
            <param name="keyField">The field name or index that is used as a key to populate <see cref="T:System.Collections.Hashtable"/>.</param>
            <param name="keyFieldType">Business object type.</param>
            <param name="parameters">Any additional parameters passed to the constructor with <see cref="T:BLToolkit.Reflection.InitContext"/> parameter.</param>
            <returns>An instance of the <see cref="T:System.Collections.Hashtable"/> class.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDictionary(System.Collections.IDictionary,BLToolkit.Common.NameOrIndexParameter,System.Type,System.Object[])">
            <summary>
            Executes the query, and returns the <see cref="T:System.Collections.Hashtable"/> of business entities.
            </summary>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;ExecuteDictionary(Hashtable,string,Type)&quot;]/*"/>
            <param name="dictionary">A dictionary of mapped business objects to populate.</param>
            <param name="keyField">The field name or index that is used as a key to populate <see cref="T:System.Collections.IDictionary"/>.</param>
            <param name="type">Business object type.</param>
            <param name="parameters">Any additional parameters passed to the constructor with <see cref="T:BLToolkit.Reflection.InitContext"/> parameter.</param>
            <returns>An instance of the <see cref="T:System.Collections.IDictionary"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDictionary``2(BLToolkit.Common.NameOrIndexParameter,System.Object[])">
            <summary>
            Executes the query, and returns a dictionary of business entities.
            </summary>
            <typeparam name="TKey">Key's type.</typeparam>
            <typeparam name="TValue">Value's type.</typeparam>
            <param name="keyField">The field name or index that is used as a key to populate the dictionary.</param>
            <param name="parameters">Any additional parameters passed to the constructor with <see cref="T:BLToolkit.Reflection.InitContext"/> parameter.</param>
            <returns>An instance of the dictionary.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDictionary``2(System.Collections.Generic.IDictionary{``0,``1},BLToolkit.Common.NameOrIndexParameter,System.Object[])">
            <summary>
            Executes the query, and returns the <see cref="T:System.Collections.Hashtable"/> of business entities.
            </summary>
            <param name="dictionary">A dictionary of mapped business objects to populate.</param>
            <param name="keyField">The field name or index that is used as a key to populate <see cref="T:System.Collections.IDictionary"/>.</param>
            <param name="parameters">Any additional parameters passed to the constructor with <see cref="T:BLToolkit.Reflection.InitContext"/> parameter.</param>
            <returns>An instance of the <see cref="T:System.Collections.IDictionary"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDictionary``2(System.Collections.Generic.IDictionary{``0,``1},BLToolkit.Common.NameOrIndexParameter,System.Type,System.Object[])">
            <summary>
            Executes the query, and returns the <see cref="T:System.Collections.Hashtable"/> of business entities.
            </summary>
            <param name="dictionary">A dictionary of mapped business objects to populate.</param>
            <param name="keyField">The field name or index that is used as a key to populate <see cref="T:System.Collections.IDictionary"/>.</param>
            <param name="destObjectType">Business object type.</param>
            <param name="parameters">Any additional parameters passed to the constructor with <see cref="T:BLToolkit.Reflection.InitContext"/> parameter.</param>
            <returns>An instance of the <see cref="T:System.Collections.IDictionary"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDictionary(BLToolkit.Mapping.MapIndex,System.Type,System.Object[])">
            <summary>
            Executes the query, and returns the <see cref="T:System.Collections.Hashtable"/> of business entities 
            using the provided parameters.
            </summary>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;ExecuteDictionary(string,Type)&quot;]/*"/>
            <param name="index">Dictionary key fields.</param>
            <param name="type">Business object type.</param>
            <param name="parameters">Any additional parameters passed to the constructor with <see cref="T:BLToolkit.Reflection.InitContext"/> parameter.</param>
            <returns>An instance of the <see cref="T:System.Collections.Hashtable"/> class.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDictionary(System.Collections.IDictionary,BLToolkit.Mapping.MapIndex,System.Type,System.Object[])">
            <summary>
            Executes the query, and returns the <see cref="T:System.Collections.Hashtable"/> of business entities.
            </summary>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;ExecuteDictionary(Hashtable,string,Type)&quot;]/*"/>
            <param name="dictionary">A dictionary of mapped business objects to populate.</param>
            <param name="index">Dictionary key fields.</param>
            <param name="type">Business object type.</param>
            <param name="parameters">Any additional parameters passed to the constructor with <see cref="T:BLToolkit.Reflection.InitContext"/> parameter.</param>
            <returns>An instance of the <see cref="T:System.Collections.IDictionary"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDictionary``1(BLToolkit.Mapping.MapIndex,System.Object[])">
            <summary>
            Executes the query, and returns a dictionary of business entities.
            </summary>
            <typeparam name="TValue">Value's type.</typeparam>
            <param name="index">Dictionary key fields.</param>
            <param name="parameters">Any additional parameters passed to the constructor with <see cref="T:BLToolkit.Reflection.InitContext"/> parameter.</param>
            <returns>An instance of the dictionary.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDictionary``1(System.Collections.Generic.IDictionary{BLToolkit.Common.CompoundValue,``0},BLToolkit.Mapping.MapIndex,System.Object[])">
            <summary>
            Executes the query, and returns a dictionary of business entities.
            </summary>
            <typeparam name="TValue">Value's type.</typeparam>
            <param name="dictionary">A dictionary of mapped business objects to populate.</param>
            <param name="index">Dictionary key fields.</param>
            <param name="parameters">Any additional parameters passed to the constructor with <see cref="T:BLToolkit.Reflection.InitContext"/> parameter.</param>
            <returns>An instance of the dictionary.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteDictionary``1(System.Collections.Generic.IDictionary{BLToolkit.Common.CompoundValue,``0},BLToolkit.Mapping.MapIndex,System.Type,System.Object[])">
            <summary>
            Executes the query, and returns a dictionary of business entities.
            </summary>
            <typeparam name="TValue">Value's type.</typeparam>
            <param name="dictionary">A dictionary of mapped business objects to populate.</param>
            <param name="index">Dictionary key fields.</param>
            <param name="destObjectType">Business object type.</param>
            <param name="parameters">Any additional parameters passed to the constructor with <see cref="T:BLToolkit.Reflection.InitContext"/> parameter.</param>
            <returns>An instance of the dictionary.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteResultSet(BLToolkit.Mapping.MapResultSet[])">
            <summary>
            Executes the query, and returns multiple results.
            </summary>
            <param name="resultSets">Array of <see cref="T:BLToolkit.Mapping.MapResultSet"/> to populate.</param>
            <returns>The populated <see cref="T:BLToolkit.Mapping.MapResultSet"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteResultSet(System.Type,BLToolkit.Mapping.MapNextResult[])">
            <summary>
            Executes the query, and returns multiple results.
            </summary>
            <param name="masterType">The type of the master business object.</param>
            <param name="nextResults">Array of <see cref="T:BLToolkit.Mapping.MapNextResult"/> to populate.</param>
            <returns>The populated <see cref="T:BLToolkit.Mapping.MapResultSet"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.ExecuteResultSet``1(BLToolkit.Mapping.MapNextResult[])">
            <summary>
            Executes the query, and returns multiple results.
            </summary>
            <typeparam name="T">The type of the master business object.</typeparam>
            <param name="nextResults">Array of <see cref="T:BLToolkit.Mapping.MapNextResult"/> to populate.</param>
            <returns>The populated <see cref="T:BLToolkit.Mapping.MapResultSet"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Update(System.Data.DataSet)">
            <summary>
            Calls the corresponding INSERT, UPDATE, or DELETE statements for each inserted, updated, or 
            deleted row in the specified <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> used to update the data source.</param>
            <returns>The number of rows successfully updated from the <see cref="T:System.Data.DataSet"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Update(System.Data.DataSet,BLToolkit.Common.NameOrIndexParameter)">
            <summary>
            Calls the corresponding INSERT, UPDATE, or DELETE statements for each inserted, updated, or 
            deleted row in the <see cref="T:System.Data.DataSet"/> with the specified <see cref="T:System.Data.DataTable"/> name.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> used to update the data source.</param>
            <param name="table">The name or index of the source table to use for table mapping.</param>
            <returns>The number of rows successfully updated from the <see cref="T:System.Data.DataSet"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Update(System.Data.DataTable)">
            <summary>
            Calls the corresponding INSERT, UPDATE, or DELETE statements for
            each inserted, updated, or deleted row in the specified
            <see cref="T:System.Data.DataTable"/>.
            </summary>
            <param name="dataTable">The name or index of the source table to
            use for table mapping.</param>
            <returns>The number of rows successfully updated from the
            <see cref="T:System.Data.DataTable"/>.</returns>
        </member>
        <member name="M:BLToolkit.Data.DbManager.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:BLToolkit.Data.DbManager"/> and 
            optionally releases the managed resources.
            </summary>
            <remarks>
            This method is called by the public <see cref="M:System.IDisposable.Dispose"/> method 
            and the Finalize method.
            </remarks>
            <param name="disposing"><b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
        </member>
        <member name="P:BLToolkit.Data.DbManager.ConfigurationString">
            <summary>
            Gets the string used to open a database.
            </summary>
            <value>
            A string containing configuration settings.
            </value>
            <remarks>
            <para>
            An actual database connection string is read from the <i>appSettings</i> section 
            of application configuration file (App.config, Web.config, or Machine.config) 
            according to the follow rule:
            </para>
            <code>
            &lt;appSettings&gt;
                &lt;add 
                    key   = "ConnectionString.<b>configurationString</b>" 
                    va<i></i>lue = "Server=(local);Database=Northwind;Integrated Security=SSPI" /&gt;
            &lt;/appSettings&gt;
            </code>
            <para>
            If the configuration string is empty, the following rule is applied:
            </para>
            <code>
            &lt;appSettings&gt;
                &lt;add 
                    key   = "ConnectionString" 
                    va<i></i>lue = "Server=(local);Database=Northwind;Integrated Security=SSPI" /&gt;
            &lt;/appSettings&gt;
            </code>
            <para>
            If you don't want to use a configuration file, you can add a database connection string 
            using the <see cref="M:BLToolkit.Data.DbManager.AddConnectionString(System.String)"/> method.
            </para>
            <para>
            The configuration string may have a prefix used to define a data provider. The following table
            contains prefixes for all supported data providers:
            <list type="table">
            <listheader><term>Prefix</term><description>Provider</description></listheader>
            <item><term>Sql</term><description>Data Provider for SQL Server</description></item>
            <item><term>OleDb</term><description>Data Provider for OLE DB</description></item>
            <item><term>Odbc</term><description>Data Provider for ODBC</description></item>
            <item><term>Oracle</term><description>Data Provider for Oracle</description></item>
            </list>
            </para>
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddConnectionString(System.String)"/>
        </member>
        <member name="P:BLToolkit.Data.DbManager.DefaultConfiguration">
            <summary>
            Gets and sets the default configuration string.
            </summary>
            <remarks>
            See the <see cref="P:BLToolkit.Data.DbManager.ConfigurationString"/> property 
            for an explanation and use of the default configuration.
            </remarks>
            <value>
            A string containing default configuration settings.
            </value>
            <seealso cref="P:BLToolkit.Data.DbManager.ConfigurationString"/>
        </member>
        <member name="P:BLToolkit.Data.DbManager.MappingSchema">
            <summary>
            Gets the <see cref="T:BLToolkit.Mapping.MappingSchema"/> 
            used by this instance of the <see cref="T:BLToolkit.Data.DbManager"/>.
            </summary>
            <value>
            A mapping schema.
            </value>
        </member>
        <member name="P:BLToolkit.Data.DbManager.DataProvider">
            <summary>
            Gets the <see cref="T:BLToolkit.Data.DataProvider.DataProviderBase"/> 
            used by this instance of the <see cref="T:BLToolkit.Data.DbManager"/>.
            </summary>
            <value>
            A data provider.
            </value>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;DataProvider&quot;]/*"/>
        </member>
        <member name="P:BLToolkit.Data.DbManager.Connection">
            <summary>
            Gets or sets the <see cref="T:System.Data.IDbConnection"/> used by this instance of the <see cref="T:BLToolkit.Data.DbManager"/>.
            </summary>
            <value>
            The connection to the data source.
            </value>
            <remarks>
            Then you set a connection object, it has to match the data source type.
            </remarks>
            <exception cref="T:BLToolkit.Data.DataException">
            A connection does not match the data source type.
            </exception>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;Connection&quot;]/*"/>
        </member>
        <member name="P:BLToolkit.Data.DbManager.Transaction">
            <summary>
            Gets the <see cref="T:System.Data.IDbTransaction"/> used by this instance of the <see cref="T:BLToolkit.Data.DbManager"/>.
            </summary>
            <value>
            The <see cref="T:System.Data.IDbTransaction"/>. The default value is a null reference.
            </value>
            <remarks>
            You have to call the <see cref="M:BLToolkit.Data.DbManager.BeginTransaction"/> method to begin a transaction.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;Transaction&quot;]/*"/>
            <seealso cref="M:BLToolkit.Data.DbManager.BeginTransaction"/>
        </member>
        <member name="P:BLToolkit.Data.DbManager.Command">
            <summary>
            Gets the <see cref="T:System.Data.IDbCommand"/> used by this instance of the <see cref="T:BLToolkit.Data.DbManager"/>.
            </summary>
            <value>
            A <see cref="T:System.Data.IDbCommand"/> used during executing query.
            </value>
            <remarks>
            The <b>Command</b> can be used to access command parameters.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;Command&quot;]/*"/>
        </member>
        <member name="P:BLToolkit.Data.DbManager.SelectCommand">
            <summary>
            Gets the select <see cref="T:System.Data.IDbCommand"/> used by this instance of the <see cref="T:BLToolkit.Data.DbManager"/>.
            </summary>
            <value>
            A <see cref="T:System.Data.IDbCommand"/> used during executing query.
            </value>
            <remarks>
            The <b>SelectCommand</b> can be used to access select command parameters.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;Command&quot;]/*"/>
        </member>
        <member name="P:BLToolkit.Data.DbManager.InsertCommand">
            <summary>
            Gets the insert <see cref="T:System.Data.IDbCommand"/> used by this instance of the <see cref="T:BLToolkit.Data.DbManager"/>.
            </summary>
            <value>
            A <see cref="T:System.Data.IDbCommand"/> used during executing query.
            </value>
            <remarks>
            The <b>InsertCommand</b> can be used to access insert command parameters.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;Command&quot;]/*"/>
        </member>
        <member name="P:BLToolkit.Data.DbManager.UpdateCommand">
            <summary>
            Gets the update <see cref="T:System.Data.IDbCommand"/> used by this instance of the <see cref="T:BLToolkit.Data.DbManager"/>.
            </summary>
            <value>
            A <see cref="T:System.Data.IDbCommand"/> used during executing query.
            </value>
            <remarks>
            The <b>UpdateCommand</b> can be used to access update command parameters.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;Command&quot;]/*"/>
        </member>
        <member name="P:BLToolkit.Data.DbManager.DeleteCommand">
            <summary>
            Gets the delete <see cref="T:System.Data.IDbCommand"/> used by this instance of the <see cref="T:BLToolkit.Data.DbManager"/>.
            </summary>
            <value>
            A <see cref="T:System.Data.IDbCommand"/> used during executing query.
            </value>
            <remarks>
            The <b>DeleteCommand</b> can be used to access delete command parameters.
            </remarks>
            <!-- Failed to insert some or all of included XML --><include file="Examples.xml" path="examples/db[@name=&quot;Command&quot;]/*"/>
        </member>
        <member name="E:BLToolkit.Data.DbManager.BeforeOperation">
            <summary>
            Occurs when a server-side operation is about to start.
            </summary>
        </member>
        <member name="E:BLToolkit.Data.DbManager.AfterOperation">
            <summary>
            Occurs when a server-side operation is complete.
            </summary>
        </member>
        <member name="E:BLToolkit.Data.DbManager.OperationException">
            <summary>
            Occurs when a server-side operation is failed to execute.
            </summary>
        </member>
        <member name="E:BLToolkit.Data.DbManager.InitCommand">
            <summary>
            Occurs when the <see cref="P:BLToolkit.Data.DbManager.Command"/> is initializing.
            </summary>
        </member>
        <member name="T:BLToolkit.Data.DbManager.CommandAction">
            <summary>
            Specifies the action that command is supposed to perform, i.e. Select, Insert, Update, Delete.
            It is used in Execute methods of the <see cref="T:BLToolkit.Data.DbManager"/> class to identify command instance 
            to be used.
            </summary>
        </member>
        <member name="T:BLToolkit.Data.DataProvider.OleDbDataProvider">
            <summary>
            Implements access to the Data Provider for OLE DB.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
        </member>
        <member name="M:BLToolkit.Data.DataProvider.OleDbDataProvider.CreateConnectionObject">
            <summary>
            Creates the database connection object.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <returns>The database connection object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DataProvider.OleDbDataProvider.CreateDataAdapterObject">
            <summary>
            Creates the data adapter object.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <returns>A data adapter object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DataProvider.OleDbDataProvider.DeriveParameters(System.Data.IDbCommand)">
            <summary>
            Populates the specified <see cref="T:System.Data.IDbCommand"/> object's Parameters collection with 
            parameter information for the stored procedure specified in the <see cref="T:System.Data.IDbCommand"/>.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <param name="command">The <see cref="T:System.Data.IDbCommand"/> referencing the stored procedure for which 
            the parameter information is to be derived. The derived parameters will be 
            populated into the Parameters of this command.</param>
        </member>
        <member name="P:BLToolkit.Data.DataProvider.OleDbDataProvider.ConnectionType">
            <summary>
            Returns connection type.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <value>An instance of the <see cref="T:System.Type"/> class.</value>
        </member>
        <member name="P:BLToolkit.Data.DataProvider.OleDbDataProvider.Name">
            <summary>
            Returns the data provider name.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataProvider Method</seealso>
            <value>Data provider name.</value>
        </member>
        <member name="F:BLToolkit.Data.DataProvider.ConvertType.NameToQueryParameter">
            <summary>
            Provided name should be converted to query parameter name.
            For example:
                firstName -> @firstName
            for the following query:
                SELECT * FROM Person WHERE FirstName = @firstName
                                                       ^ here
            </summary>
        </member>
        <member name="F:BLToolkit.Data.DataProvider.ConvertType.NameToCommandParameter">
            <summary>
            Provided name should be converted to command parameter name.
            For example:
                firstName -> @firstName
            for the following query:
                db.Parameter("@firstName") = "John";
                              ^ here
            </summary>
        </member>
        <member name="F:BLToolkit.Data.DataProvider.ConvertType.NameToSprocParameter">
            <summary>
            Provided name should be converted to stored procedure parameter name.
            For example:
                firstName -> @firstName
            for the following query:
                db.Parameter("@firstName") = "John";
                              ^ here
            </summary>
        </member>
        <member name="F:BLToolkit.Data.DataProvider.ConvertType.NameToQueryField">
            <summary>
            Provided name should be converted to query field name.
            For example:
                FirstName -> [FirstName]
            for the following query:
                SELECT [FirstName] FROM Person WHERE ID = 1
                       ^   and   ^
            </summary>
        </member>
        <member name="F:BLToolkit.Data.DataProvider.ConvertType.NameToQueryFieldAlias">
            <summary>
            Provided name should be converted to query field alias.
            For example:
                ID -> "ID"
            for the following query:
                SELECT "ID" as "ID" FROM Person WHERE "ID" = 1
                               ^  ^ here
            </summary>
        </member>
        <member name="F:BLToolkit.Data.DataProvider.ConvertType.NameToDatabase">
            <summary>
            Provided name should be converted to query database.
            For example:
                MyDatabase -> [MyDatabase]
            for the following query:
                SELECT * FROM [MyDatabase]..[Person]
                              ^ and      ^
            </summary>
        </member>
        <member name="F:BLToolkit.Data.DataProvider.ConvertType.NameToOwner">
            <summary>
            Provided name should be converted to query database.
            For example:
                dbo -> [dbo]
            for the following query:
                SELECT * FROM [ dbo ].[Person]
                              ^ and ^
            </summary>
        </member>
        <member name="F:BLToolkit.Data.DataProvider.ConvertType.NameToQueryTable">
            <summary>
            Provided name should be converted to query table name.
            For example:
                Person -> [Person]
            for the following query:
                SELECT * FROM [Person]
                              ^ and  ^
            </summary>
        </member>
        <member name="F:BLToolkit.Data.DataProvider.ConvertType.NameToQueryTableAlias">
            <summary>
            Provided name should be converted to query table alias.
            For example:
                table1 -> [table1]
            for the following query:
                SELECT * FROM [Person] [table1]
                                       ^ and  ^
            </summary>
        </member>
        <member name="F:BLToolkit.Data.DataProvider.ConvertType.SprocParameterToName">
            <summary>
            Provided stored procedure parameter name should be converted to name.
            For example:
                @firstName -> firstName
            for the following query:
                db.Parameter("@firstName") = "John";
                              ^ '@' has to be removed
            </summary>
        </member>
        <member name="F:BLToolkit.Data.DataProvider.ConvertType.ExceptionToErrorNumber">
            <summary>
            Gets error number from a native exception.
            For example:
                SqlException -> SqlException.Number,
              OleDbException -> OleDbException.Errors[0].NativeError
            </summary>
        </member>
        <member name="F:BLToolkit.Data.DataProvider.ConvertType.ExceptionToErrorMessage">
            <summary>
            Gets error message from a native exception.
            For example:
                SqlException -> SqlException.Message,
              OleDbException -> OleDbException.Errors[0].Message
            </summary>
        </member>
        <member name="T:BLToolkit.Aspects.MixinAttribute">
            <summary>
            http://www.bltoolkit.net/Doc/Aspects/index.htm
            </summary>
        </member>
        <member name="T:BLToolkit.Aspects.CacheAttribute">
            <summary>
            http://www.bltoolkit.net/Doc/Aspects/index.htm
            </summary>
        </member>
        <member name="T:BLToolkit.Aspects.InstanceCacheAttribute">
            <summary>
            http://www.bltoolkit.net/Doc/Aspects/index.htm
            </summary>
        </member>
        <member name="T:BLToolkit.Net.HttpReader">
            <summary>
            Encapsulates WebReader functions.
            </summary>
        </member>
        <member name="M:BLToolkit.TypeBuilder.Builders.TypeAccessorBuilder.IsMethodAccessible(System.Reflection.MethodInfo)">
            <summary>
            Figure out is base type method is accessible by extension type method.
            </summary>
            <param name="method">A <see cref="T:System.Reflection.MethodInfo"/> instance.</param>
            <returns>True if the method access is Public or Family and it's assembly is friendly.</returns>
        </member>
        <member name="T:BLToolkit.Patterns.DuckType">
            <summary>
            Reserved to internal BLToolkit use.
            </summary>
        </member>
        <member name="T:BLToolkit.Common.NameOrIndexParameter">
            <summary>
            This argument adapter class allows either names (strings) or
            indices (ints) to be passed to a function.
            </summary>
        </member>
        <member name="F:BLToolkit.ComponentModel.Design.GetTypeDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:BLToolkit.ComponentModel.Design.GetTypeDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BLToolkit.ComponentModel.Design.GetTypeDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:BLToolkit.Aspects.NoLogAttribute">
            <summary>
            http://www.bltoolkit.net/Doc/Aspects/index.htm
            </summary>
        </member>
        <member name="T:BLToolkit.Aspects.CacheAspect`1">
            <summary>
            http://www.bltoolkit.net/Doc/Aspects/index.htm
            </summary>
        </member>
        <member name="T:BLToolkit.Aspects.CacheAspect">
            <summary>
            http://www.bltoolkit.net/Doc/Aspects/index.htm
            </summary>
        </member>
        <member name="M:BLToolkit.Aspects.CacheAspect.ClearCache(System.Reflection.MethodInfo)">
            <summary>
            Clear a method call cache.
            </summary>
            <param name="methodInfo">The <see cref="T:System.Reflection.MethodInfo"/> representing cached method.</param>
        </member>
        <member name="M:BLToolkit.Aspects.CacheAspect.ClearCache(System.Type,System.String,System.Type[])">
            <summary>
            Clear a method call cache.
            </summary>
            <param name="declaringType">The method declaring type.</param>
            <param name="methodName">The method name.</param>
            <param name="types">An array of <see cref="T:System.Type"/> objects representing
            the number, order, and type of the parameters for the method to get.-or-
            An empty array of the type <see cref="T:System.Type"/> (for example, <see cref="F:System.Type.EmptyTypes"/>)
            to get a method that takes no parameters.</param>
        </member>
        <member name="M:BLToolkit.Aspects.CacheAspect.ClearCache">
            <summary>
            Clear all cached method calls.
            </summary>
        </member>
        <member name="M:BLToolkit.Configuration.ElementBase.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>
            Gets a value indicating whether an unknown attribute is encountered during deserialization.
            </summary>
            <returns>
            True when an unknown attribute is encountered while deserializing.
            </returns>
            <param name="name">The name of the unrecognized attribute.</param>
            <param name="value">The value of the unrecognized attribute.</param>
        </member>
        <member name="P:BLToolkit.Configuration.TypeFactoryElement.SaveTypes">
            <summary>
            Gets a value indicating whether the <see cref="T:BLToolkit.TypeBuilder.TypeFactory"/>
            will save generated assemblies to the disk. Default is <see langword="false"/>.
            </summary>
        </member>
        <member name="P:BLToolkit.Configuration.TypeFactoryElement.SealTypes">
            <summary>
            Gets a value indicating whether the <see cref="T:BLToolkit.TypeBuilder.TypeFactory"/>
            will seal generated types. Default is <see langword="true"/>.
            </summary>
        </member>
        <member name="P:BLToolkit.Configuration.TypeFactoryElement.LoadTypes">
            <summary>
            Gets a value indicating whether the <see cref="T:BLToolkit.TypeBuilder.TypeFactory"/>
            will load types generated by BLTGen tool. Default is <see langword="false"/>.
            </summary>
        </member>
        <member name="P:BLToolkit.Configuration.TypeFactoryElement.AssemblyPath">
            <summary>
            Gets a path to the global assembly. Default is <see langword="null"/>.
            </summary>
            <seealso cref="M:BLToolkit.TypeBuilder.TypeFactory.SetGlobalAssembly(System.String)"/>
        </member>
        <member name="P:BLToolkit.Configuration.TypeFactoryElement.Version">
            <summary>
            Gets the version of global assembly. Default is <see langword="null"/>.
            </summary>
            <seealso cref="M:BLToolkit.TypeBuilder.TypeFactory.SetGlobalAssembly(System.String,System.Version,System.String)"/>
        </member>
        <member name="P:BLToolkit.Configuration.TypeFactoryElement.KeyFile">
            <summary>
            Gets a path to the key file to sign global assembly. Default is <see langword="null"/>.
            </summary>
            <seealso cref="M:BLToolkit.TypeBuilder.TypeFactory.SetGlobalAssembly(System.String,System.Version,System.String)"/>
        </member>
        <member name="T:BLToolkit.Reflection.Emit.ConstructorBuilderHelper">
            <summary>
            A wrapper around the <see cref="P:BLToolkit.Reflection.Emit.ConstructorBuilderHelper.ConstructorBuilder"/> class.
            </summary>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.ConstructorBuilderHelper.#ctor(BLToolkit.Reflection.Emit.TypeBuilderHelper,System.Reflection.Emit.ConstructorBuilder)">
            <summary>
            Initializes a new instance of the <see cref="P:BLToolkit.Reflection.Emit.ConstructorBuilderHelper.ConstructorBuilder"/> class
            with the specified parameters.
            </summary>
            <param name="typeBuilder">Associated <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/>.</param>
            <param name="constructorBuilder">A <see cref="P:BLToolkit.Reflection.Emit.ConstructorBuilderHelper.ConstructorBuilder"/></param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.ConstructorBuilderHelper.op_Implicit(BLToolkit.Reflection.Emit.ConstructorBuilderHelper)~System.Reflection.Emit.ConstructorBuilder">
            <summary>
            Converts the supplied <see cref="T:BLToolkit.Reflection.Emit.ConstructorBuilderHelper"/> to a <see cref="T:System.Reflection.Emit.MethodBuilder"/>.
            </summary>
            <param name="constructorBuilder">The <see cref="P:BLToolkit.Reflection.Emit.ConstructorBuilderHelper.ConstructorBuilder"/>.</param>
            <returns>A <see cref="P:BLToolkit.Reflection.Emit.ConstructorBuilderHelper.ConstructorBuilder"/>.</returns>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.ConstructorBuilderHelper.ConstructorBuilder">
            <summary>
            Gets ConstructorBuilder.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.ConstructorBuilderHelper.Emitter">
            <summary>
            Gets <see cref="T:BLToolkit.Reflection.Emit.EmitHelper"/>.
            </summary>
        </member>
        <member name="T:BLToolkit.Reflection.Emit.EmitHelper">
            <summary>
            A wrapper around the <see cref="P:BLToolkit.Reflection.Emit.EmitHelper.ILGenerator"/> class.
            </summary>
            <example>
<code lang="C#">
using System;

using NUnit.Framework;

using BLToolkit.Reflection;
using BLToolkit.Reflection.Emit;

namespace Examples.Reflection.Emit
{
	[TestFixture]
	public class HelloWorld
	{
		public interface IHello
		{
			void SayHello(string toWhom);
		}

		[Test]
		public void Test()
		{
			EmitHelper emit = new AssemblyBuilderHelper("HelloWorld.dll")
				.DefineType  ("Hello", typeof(object), typeof(IHello))
				.DefineMethod(typeof(IHello).GetMethod("SayHello"))
				.Emitter;

			/*[a]*/emit/*[/a]*/
				// string.Format("Hello, {0}!", toWhom)
				//
				./*[a]*/ldstr/*[/a]*/   ("Hello, {0}!")
				./*[a]*/ldarg_1/*[/a]*/
				./*[a]*/call/*[/a]*/    (typeof(string), "Format", typeof(string), typeof(object))

				// Console.WriteLine("Hello, World!");
				//
				./*[a]*/call/*[/a]*/    (typeof(Console), "WriteLine", typeof(string))
				./*[a]*/ret/*[/a]*/()
				;

			Type type = emit.Method.Type.Create();

			IHello hello = (IHello)TypeAccessor.CreateInstance(type);

			hello.SayHello("World");
		}
	}
}
</code>
</example>
            <example>
<code lang="VB">
Imports System
Imports NUnit.Framework

Imports BLToolkit.Reflection
Imports BLToolkit.Reflection.Emit

Namespace Examples.Reflection.Emit

    &lt;TestFixture()&gt; _
    Public Class HelloWorld

        Public Interface IHello
            Sub SayHello(ByVal toWhom As String)
        End Interface

        &lt;Test()&gt; _
        Sub Test()
            Dim assemblyHelper As AssemblyBuilderHelper = New AssemblyBuilderHelper("HelloWorld.dll")
            Dim typeHelper As TypeBuilderHelper = assemblyHelper.DefineType("Hello", GetType(Object), GetType(IHello))
            Dim methodHelper As MethodBuilderHelper = typeHelper.DefineMethod(GetType(IHello).GetMethod("SayHello"))
            Dim emit As EmitHelper = methodHelper.Emitter

            ' string.Format("Hello, {0} World!", toWhom)
            '
            emit _
            .ldstr("Hello, {0} World!") _
            .ldarg_1 _
            .call(GetType(String), "Format", GetType(String), GetType(Object))

            ' Console.WriteLine("Hello, World!");
            '
            emit _
            .call(GetType(Console), "WriteLine", GetType(String)) _
            .ret()

            Dim type As Type = typeHelper.Create()

            Dim hello As IHello = TypeAccessor.CreateInstance(type)

            hello.SayHello("VB")
        End Sub

    End Class

End Namespace
</code>
</example>
            <seealso cref="T:System.Reflection.Emit.ILGenerator">ILGenerator Class</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.#ctor(System.Reflection.Emit.ILGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Reflection.Emit.EmitHelper"/> class
            with the specified <see cref="T:System.Reflection.Emit.ILGenerator"/>.
            </summary>
            <param name="ilGenerator">The <see cref="T:System.Reflection.Emit.ILGenerator"/> to use.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.#ctor(BLToolkit.Reflection.Emit.MethodBuilderBase,System.Reflection.Emit.ILGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Reflection.Emit.EmitHelper"/> class
            with the specified <see cref="T:System.Reflection.Emit.ILGenerator"/>.
            </summary>
            <param name="methodBuilder">Associated <see cref="T:BLToolkit.Reflection.Emit.MethodBuilderBase"/>.</param>
            <param name="ilGenerator">The <see cref="T:System.Reflection.Emit.ILGenerator"/> to use.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.op_Implicit(BLToolkit.Reflection.Emit.EmitHelper)~System.Reflection.Emit.ILGenerator">
            <summary>
            Converts the supplied <see cref="T:BLToolkit.Reflection.Emit.EmitHelper"/> to a <see cref="P:BLToolkit.Reflection.Emit.EmitHelper.ILGenerator"/>.
            </summary>
            <param name="emitHelper">The <see cref="T:BLToolkit.Reflection.Emit.EmitHelper"/>.</param>
            <returns>An ILGenerator.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.BeginCatchBlock(System.Type)">
            <summary>
            Begins a catch block.
            </summary>
            <param name="exceptionType">The Type object that represents the exception.</param>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.BeginCatchBlock(System.Type)">ILGenerator.BeginCatchBlock Method</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.BeginExceptFilterBlock">
            <summary>
            Begins an exception block for a filtered exception.
            </summary>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.BeginExceptFilterBlock">ILGenerator.BeginCatchBlock Method</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.BeginExceptionBlock">
            <summary>
            Begins an exception block for a non-filtered exception.
            </summary>
            <returns>The label for the end of the block.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.BeginFaultBlock">
            <summary>
            Begins an exception fault block in the Microsoft intermediate language (MSIL) stream.
            </summary>
            <returns>Current instance of the <see cref="T:BLToolkit.Reflection.Emit.EmitHelper"/>.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.BeginFinallyBlock">
            <summary>
            Begins a finally block in the Microsoft intermediate language (MSIL) instruction stream.
            </summary>
            <returns>Current instance of the <see cref="T:BLToolkit.Reflection.Emit.EmitHelper"/>.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.BeginScope">
            <summary>
            Begins a lexical scope.
            </summary>
            <returns>Current instance of the <see cref="T:BLToolkit.Reflection.Emit.EmitHelper"/>.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.DeclareLocal(System.Type)">
            <summary>
            Declares a local variable.
            </summary>
            <param name="localType">The Type of the local variable.</param>
            <returns>The declared local variable.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.DeclareLocal(System.Type,System.Boolean)">
            <summary>
            Declares a local variable, optionally pinning the object referred to by the variable.
            </summary>
            <param name="localType">The Type of the local variable.</param>
            <param name="pinned"><b>true</b> to pin the object in memory; otherwise, <b>false</b>.</param>
            <returns>The declared local variable.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.DefineLabel">
            <summary>
            Declares a new label.
            </summary>
            <returns>Returns a new label that can be used as a token for branching.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.EndExceptionBlock">
            <summary>
            Ends an exception block.
            </summary>
            <returns>Current instance of the <see cref="T:BLToolkit.Reflection.Emit.EmitHelper"/>.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.EndScope">
            <summary>
            Ends a lexical scope.
            </summary>
            <returns>Current instance of the <see cref="T:BLToolkit.Reflection.Emit.EmitHelper"/>.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.MarkLabel(System.Reflection.Emit.Label)">
            <summary>
            Marks the Microsoft intermediate language (MSIL) stream's current position 
            with the given label.
            </summary>
            <param name="loc">The label for which to set an index.</param>
            <returns>Current instance of the <see cref="T:BLToolkit.Reflection.Emit.EmitHelper"/>.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.MarkSequencePoint(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Marks a sequence point in the Microsoft intermediate language (MSIL) stream.
            </summary>
            <param name="document">The document for which the sequence point is being defined.</param>
            <param name="startLine">The line where the sequence point begins.</param>
            <param name="startColumn">The column in the line where the sequence point begins.</param>
            <param name="endLine">The line where the sequence point ends.</param>
            <param name="endColumn">The column in the line where the sequence point ends.</param>
            <returns>Current instance of the <see cref="T:BLToolkit.Reflection.Emit.EmitHelper"/>.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ThrowException(System.Type)">
            <summary>
            Emits an instruction to throw an exception.
            </summary>
            <param name="exceptionType">The class of the type of exception to throw.</param>
            <returns>Current instance of the <see cref="T:BLToolkit.Reflection.Emit.EmitHelper"/>.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.UsingNamespace(System.String)">
            <summary>
            Specifies the namespace to be used in evaluating locals and watches for 
            the current active lexical scope.
            </summary>
            <param name="namespaceName">The namespace to be used in evaluating locals and watches for the current active lexical scope.</param>
            <returns>Current instance of the <see cref="T:BLToolkit.Reflection.Emit.EmitHelper"/>.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.beq(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Beq"/>, label) that
            transfers control to a target instruction if two values are equal.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Beq">OpCodes.Beq</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.beq_s(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Beq_S"/>, label) that
            transfers control to a target instruction (short form) if two values are equal.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Beq_S">OpCodes.Beq_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.bge(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Bge"/>, label) that
            transfers control to a target instruction if the first value is greater than or equal to the second value.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Bge">OpCodes.Bge</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.bge_s(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Bge_S"/>, label) that
            transfers control to a target instruction (short form) 
            if the first value is greater than or equal to the second value.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Bge_S">OpCodes.Bge_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.bge_un(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Bge_Un"/>, label) that
            transfers control to a target instruction if the the first value is greather than the second value,
            when comparing unsigned integer values or unordered float values.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Bge_Un">OpCodes.Bge_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.bge_un_s(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Bge_Un_S"/>, label) that
            transfers control to a target instruction (short form) if if the the first value is greather than the second value,
            when comparing unsigned integer values or unordered float values.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Bge_Un_S">OpCodes.Bge_Un_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.bgt(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Bgt"/>, label) that
            transfers control to a target instruction if the first value is greater than the second value.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Bgt">OpCodes.Bgt</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.bgt_s(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Bgt_S"/>, label) that
            transfers control to a target instruction (short form) if the first value is greater than the second value.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Bgt_S">OpCodes.Bgt_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.bgt_un(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Bgt_Un"/>, label) that
            transfers control to a target instruction if the first value is greater than the second value,
            when comparing unsigned integer values or unordered float values.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Bgt_Un">OpCodes.Bgt_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.bgt_un_s(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Bgt_Un_S"/>, label) that
            transfers control to a target instruction (short form) if the first value is greater than the second value,
            when comparing unsigned integer values or unordered float values.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Bgt_Un_S">OpCodes.Bgt_Un_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ble(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ble"/>, label) that
            transfers control to a target instruction if the first value is less than or equal to the second value.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ble">OpCodes.Ble</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ble_s(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ble_S"/>, label) that
            transfers control to a target instruction (short form) if the first value is less than or equal to the second value.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ble_S">OpCodes.Ble_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ble_un(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ble_Un"/>, label) that
            transfers control to a target instruction if the first value is less than or equal to the second value,
            when comparing unsigned integer values or unordered float values.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ble_Un">OpCodes.Ble_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ble_un_s(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ble_Un_S"/>, label) that
            transfers control to a target instruction (short form) if the first value is less than or equal to the second value,
            when comparing unsigned integer values or unordered float values.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ble_Un_S">OpCodes.Ble_Un_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.blt(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Blt"/>, label) that
            transfers control to a target instruction if the first value is less than the second value.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Blt">OpCodes.Blt</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.blt_s(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Blt_S"/>, label) that
            transfers control to a target instruction (short form) if the first value is less than the second value.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Blt_S">OpCodes.Blt_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.blt_un(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Blt_Un"/>, label) that
            transfers control to a target instruction if the first value is less than the second value,
            when comparing unsigned integer values or unordered float values.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Blt_Un">OpCodes.Blt_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.blt_un_s(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Blt_Un_S"/>, label) that
            transfers control to a target instruction (short form) if the first value is less than the second value,
            when comparing unsigned integer values or unordered float values.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Blt_Un_S">OpCodes.Blt_Un_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.bne_un(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Bne_Un"/>, label) that
            transfers control to a target instruction when two unsigned integer values or unordered float values are not equal.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Bne_Un">OpCodes.Bne_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.bne_un_s(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Bne_Un_S"/>, label) that
            transfers control to a target instruction (short form) 
            when two unsigned integer values or unordered float values are not equal.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Bne_Un_S">OpCodes.Bne_Un_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.box(System.Type)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Box"/>, type) that
            converts a value type to an object reference.
            </summary>
            <param name="type">A Type</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Box">OpCodes.Box</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.boxIfValueType(System.Type)">
            <summary>
            Converts a value type to an object reference if the value is a value type.
            </summary>
            <param name="type">A Type</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Box">OpCodes.Box</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.br(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Br"/>, label) that
            unconditionally transfers control to a target instruction. 
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Br">OpCodes.Br</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.brfalse(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Brfalse"/>, label) that
            transfers control to a target instruction if value is false, a null reference (Nothing in Visual Basic), or zero.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Brfalse">OpCodes.Brfalse</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.brfalse_s(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Brfalse_S"/>, label) that
            transfers control to a target instruction if value is false, a null reference, or zero. 
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Brfalse_S">OpCodes.Brfalse_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.brtrue(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Brtrue"/>, label) that
            transfers control to a target instruction if value is true, not null, or non-zero.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Brtrue">OpCodes.Brtrue</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.brtrue_s(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Brtrue_S"/>, label) that
            transfers control to a target instruction (short form) if value is true, not null, or non-zero.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Brtrue_S">OpCodes.Brtrue_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.br_s(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Br_S"/>, label) that
            unconditionally transfers control to a target instruction (short form).
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Br_S">OpCodes.Br_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.call(System.Reflection.MethodInfo)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Call"/>, methodInfo) that
            calls the method indicated by the passed method descriptor.
            </summary>
            <param name="methodInfo">The method to be called.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Call">OpCodes.Call</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.call(System.Reflection.ConstructorInfo)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Call"/>, constructorInfo) that
            calls the method indicated by the passed method descriptor.
            </summary>
            <param name="constructorInfo">The constructor to be called.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Call">OpCodes.Call</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.call(System.Reflection.MethodInfo,System.Type[])">
            <summary>
            Calls ILGenerator.EmitCall(<see cref="F:System.Reflection.Emit.OpCodes.Call"/>, methodInfo, optionalParameterTypes) that
            calls the method indicated by the passed method descriptor.
            </summary>
            <param name="methodInfo">The method to be called.</param>
            <param name="optionalParameterTypes">The types of the optional arguments if the method is a varargs method.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Call">OpCodes.Call</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.EmitCall(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo,System.Type[])">ILGenerator.EmitCall</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.call(System.Type,System.String,System.Type[])">
            <summary>
            Calls ILGenerator.EmitCall(<see cref="F:System.Reflection.Emit.OpCodes.Call"/>, methodInfo, optionalParameterTypes) that
            calls the method indicated by the passed method descriptor.
            </summary>
            <param name="type">A Type</param>
            <param name="methodName">The name of the method to be called.</param>
            <param name="optionalParameterTypes">The types of the optional arguments if the method is a varargs method.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Call">OpCodes.Call</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.EmitCall(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo,System.Type[])">ILGenerator.EmitCall</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.call(System.Type,System.String,System.Reflection.BindingFlags,System.Type[])">
            <summary>
            Calls ILGenerator.EmitCall(<see cref="F:System.Reflection.Emit.OpCodes.Call"/>, methodInfo, optionalParameterTypes) that
            calls the method indicated by the passed method descriptor.
            </summary>
            <param name="type">A Type</param>
            <param name="methodName">The name of the method to be called.</param>
            <param name="flags">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> 
            that specify how the search is conducted.</param>
            <param name="optionalParameterTypes">The types of the optional arguments if the method is a varargs method.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Call">OpCodes.Call</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.EmitCall(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo,System.Type[])">ILGenerator.EmitCall</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.calli(System.Runtime.InteropServices.CallingConvention,System.Type,System.Type[])">
            <summary>
            Calls ILGenerator.EmitCalli(<see cref="F:System.Reflection.Emit.OpCodes.Calli"/>, <see cref="T:System.Runtime.InteropServices.CallingConvention"/>, Type, Type[]) that
            calls the method indicated on the evaluation stack (as a pointer to an entry point) 
            with arguments described by a calling convention using an unmanaged calling convention.
            </summary>
            <param name="unmanagedCallConv">The unmanaged calling convention to be used.</param>
            <param name="returnType">The Type of the result.</param>
            <param name="parameterTypes">The types of the required arguments to the instruction.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Calli">OpCodes.Calli</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.EmitCalli(System.Reflection.Emit.OpCode,System.Runtime.InteropServices.CallingConvention,System.Type,System.Type[])">ILGenerator.EmitCalli</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.calli(System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[])">
            <summary>
            Calls ILGenerator.EmitCalli(<see cref="F:System.Reflection.Emit.OpCodes.Calli"/>, <see cref="T:System.Runtime.InteropServices.CallingConvention"/>, Type, Type[], Type[]) that
            calls the method indicated on the evaluation stack (as a pointer to an entry point)
            with arguments described by a calling convention using a managed calling convention.
            </summary>
            <param name="callingConvention">The managed calling convention to be used.</param>
            <param name="returnType">The Type of the result.</param>
            <param name="parameterTypes">The types of the required arguments to the instruction.</param>
            <param name="optionalParameterTypes">The types of the optional arguments for vararg calls.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Calli">OpCodes.Calli</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.EmitCalli(System.Reflection.Emit.OpCode,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[])">ILGenerator.EmitCalli</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.callvirt(System.Reflection.MethodInfo)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Callvirt"/>, methodInfo) that
            calls a late-bound method on an object, pushing the return value onto the evaluation stack.
            </summary>
            <param name="methodInfo">The method to be called.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Callvirt">OpCodes.Callvirt</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.callvirt(System.Reflection.MethodInfo,System.Type[])">
            <summary>
            Calls ILGenerator.EmitCall(<see cref="F:System.Reflection.Emit.OpCodes.Callvirt"/>, methodInfo, optionalParameterTypes) that
            calls a late-bound method on an object, pushing the return value onto the evaluation stack.
            </summary>
            <param name="methodInfo">The method to be called.</param>
            <param name="optionalParameterTypes">The types of the optional arguments if the method is a varargs method.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Callvirt">OpCodes.Callvirt</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.EmitCall(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo,System.Type[])">ILGenerator.EmitCall</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.callvirt(System.Type,System.String,System.Type[])">
            <summary>
            Calls ILGenerator.EmitCall(<see cref="F:System.Reflection.Emit.OpCodes.Callvirt"/>, methodInfo, optionalParameterTypes) that
            calls a late-bound method on an object, pushing the return value onto the evaluation stack.
            </summary>
            <param name="methodName">The method to be called.</param>
            <param name="type">The declaring type of the method.</param>
            <param name="optionalParameterTypes">The types of the optional arguments if the method is a varargs method.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Callvirt">OpCodes.Callvirt</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.EmitCall(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo,System.Type[])">ILGenerator.EmitCall</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.callvirt(System.Type,System.String,System.Reflection.BindingFlags,System.Type[])">
            <summary>
            Calls ILGenerator.EmitCall(<see cref="F:System.Reflection.Emit.OpCodes.Callvirt"/>, methodInfo, optionalParameterTypes) that
            calls a late-bound method on an object, pushing the return value onto the evaluation stack.
            </summary>
            <param name="methodName">The method to be called.</param>
            <param name="type">The declaring type of the method.</param>
            <param name="flags">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> 
            that specify how the search is conducted.</param>
            <param name="optionalParameterTypes">The types of the optional arguments if the method is a varargs method.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Callvirt">OpCodes.Callvirt</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.EmitCall(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo,System.Type[])">ILGenerator.EmitCall</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.callvirt(System.Type,System.String,System.Reflection.BindingFlags)">
            <summary>
            Calls ILGenerator.EmitCall(<see cref="F:System.Reflection.Emit.OpCodes.Callvirt"/>, methodInfo, optionalParameterTypes) that
            calls a late-bound method on an object, pushing the return value onto the evaluation stack.
            </summary>
            <param name="methodName">The method to be called.</param>
            <param name="type">The declaring type of the method.</param>
            <param name="flags">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> 
            that specify how the search is conducted.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Callvirt">OpCodes.Callvirt</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.EmitCall(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo,System.Type[])">ILGenerator.EmitCall</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.callvirtNoGenerics(System.Type,System.String,System.Type[])">
            <summary>
            Calls ILGenerator.EmitCall(<see cref="F:System.Reflection.Emit.OpCodes.Callvirt"/>, methodInfo, optionalParameterTypes) that
            calls a late-bound method on an object, pushing the return value onto the evaluation stack.
            </summary>
            <param name="methodName">The non-generic method to be called.</param>
            <param name="type">The declaring type of the method.</param>
            <param name="optionalParameterTypes">The types of the optional arguments if the method is a varargs method.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Callvirt">OpCodes.Callvirt</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.EmitCall(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo,System.Type[])">ILGenerator.EmitCall</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.castclass(System.Type)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Castclass"/>, type) that
            attempts to cast an object passed by reference to the specified class.
            </summary>
            <param name="type">A Type</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Castclass">OpCodes.Castclass</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.castType(System.Type)">
            <summary>
            Attempts to cast an object passed by reference to the specified class 
            or to unbox if the type is a value type.
            </summary>
            <param name="type">A Type</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.constrained(System.Type)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Constrained"/>) that
            constrains the type on which a virtual method call is made.
            </summary>
            <param name="type">A Type</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Cgt_Un">OpCodes.Constrained</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.conv(System.Type)">
            <summary>
            Converts the value on top of the evaluation stack to the specified type.
            </summary>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.cpobj(System.Type)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Cpobj"/>, type) that
            copies the value type located at the address of an object (type &amp;, * or natural int) 
            to the address of the destination object (type &amp;, * or natural int).
            </summary>
            <param name="type">A Type</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Cpobj">OpCodes.Cpobj</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.initobj(System.Type)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Initobj"/>, type) that
            initializes all the fields of the object at a specific address to a null reference or 
            a 0 of the appropriate primitive type.
            </summary>
            <param name="type">A Type</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Initobj">OpCodes.Initobj</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.isinst(System.Type)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Isinst"/>, type) that
            tests whether an object reference (type O) is an instance of a particular class.
            </summary>
            <param name="type">A Type</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Isinst">OpCodes.Isinst</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.jmp(System.Reflection.MethodInfo)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Jmp"/>, methodInfo) that
            exits current method and jumps to specified method.
            </summary>
            <param name="methodInfo">The method to be jumped.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Jmp">OpCodes.Jmp</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldarg(System.Int16)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldarg"/>, short) that
            loads an argument (referenced by a specified index value) onto the stack.
            </summary>
            <param name="index">Index of the argument that is pushed onto the stack.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldarg">OpCodes.Ldarg</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int16)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldargEx(System.Reflection.ParameterInfo,System.Boolean)">
            <summary>
            Loads an argument onto the stack.
            </summary>
            <param name="parameterInfo">A <see cref="T:System.Reflection.ParameterInfo"/> representing a parameter.</param>
            <param name="box">True, if parameter must be converted to a reference.</param>
            <seealso cref="M:BLToolkit.Reflection.Emit.EmitHelper.ldarg(System.Reflection.ParameterInfo)"/>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldarg(System.Int32)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldarg"/>, short) or 
            ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldarg_S"/>, byte) that
            loads an argument (referenced by a specified index value) onto the stack.
            </summary>
            <param name="index">Index of the argument that is pushed onto the stack.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldarg">OpCodes.Ldarg</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int16)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldarg(System.Reflection.ParameterInfo)">
            <summary>
            Loads an argument onto the stack.
            </summary>
            <param name="parameterInfo">A <see cref="T:System.Reflection.ParameterInfo"/> representing a parameter.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldarga(System.Int16)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldarga"/>, short) that
            load an argument address onto the evaluation stack.
            </summary>
            <param name="index">Index of the address addr of the argument that is pushed onto the stack.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldarga">OpCodes.Ldarga</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int16)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldarga_s(System.Byte)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldarga_S"/>, byte) that
            load an argument address, in short form, onto the evaluation stack.
            </summary>
            <param name="index">Index of the address addr of the argument that is pushed onto the stack.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldarga_S">OpCodes.Ldarga_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Byte)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldarga(System.Int32)">
            <summary>
            Load an argument address onto the evaluation stack.
            </summary>
            <param name="index">Index of the address addr of the argument that is pushed onto the stack.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldarga(System.Reflection.ParameterInfo)">
            <summary>
            Loads an argument address onto the stack.
            </summary>
            <param name="parameterInfo">A <see cref="T:System.Reflection.ParameterInfo"/> representing a parameter.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldarg_s(System.Byte)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldarg_S"/>, byte) that
            loads the argument (referenced by a specified short form index) onto the evaluation stack.
            </summary>
            <param name="index">Index of the argument value that is pushed onto the stack.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldarg_S">OpCodes.Ldarg_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Byte)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldc_bool(System.Boolean)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_0"/> or <see cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_1"/>) that
            pushes a supplied value of type int32 onto the evaluation stack as an int32.
            </summary>
            <param name="b">The value pushed onto the stack.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldc_I4">OpCodes.Ldc_I4_0</seealso>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldc_I4">OpCodes.Ldc_I4_1</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int32)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldc_i4(System.Int32)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldc_I4"/>, int) that
            pushes a supplied value of type int32 onto the evaluation stack as an int32.
            </summary>
            <param name="num">The value pushed onto the stack.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldc_I4">OpCodes.Ldc_I4</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int32)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldc_i4_(System.Int32)">
            <summary>
            Calls the best form of ILGenerator.Emit(Ldc_I4_X) that
            pushes the integer value of -1 onto the evaluation stack as an int32.
            </summary>
            <seealso cref="M:BLToolkit.Reflection.Emit.EmitHelper.ldc_i4(System.Int32)"/>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldc_i4_s(System.SByte)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_S"/>, byte) that
            pushes the supplied int8 value onto the evaluation stack as an int32, short form.
            </summary>
            <param name="num">The value pushed onto the stack.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_S">OpCodes.Ldc_I4_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Byte)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldc_i8(System.Int64)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldc_I8"/>, long) that
            pushes a supplied value of type int64 onto the evaluation stack as an int64.
            </summary>
            <param name="num">The value pushed onto the stack.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldc_I8">OpCodes.Ldc_I8</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int64)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldc_r4(System.Single)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldc_R4"/>, float) that
            pushes a supplied value of type float32 onto the evaluation stack as type F (float).
            </summary>
            <param name="num">The value pushed onto the stack.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldc_R4">OpCodes.Ldc_R4</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Single)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldc_r8(System.Double)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldc_R8"/>, double) that
            pushes a supplied value of type float64 onto the evaluation stack as type F (float).
            </summary>
            <param name="num">The value pushed onto the stack.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldc_R8">OpCodes.Ldc_R8</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Double)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldelema(System.Type)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldelema"/>, type) that
            loads the address of the array element at a specified array index onto the top of the evaluation stack 
            as type &amp; (managed pointer).
            </summary>
            <param name="type">A Type</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldelema">OpCodes.Ldelema</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldfld(System.Reflection.FieldInfo)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldfld"/>, fieldInfo) that
            finds the value of a field in the object whose reference is currently on the evaluation stack.
            </summary>
            <param name="fieldInfo">A <see cref="T:System.Reflection.FieldInfo"/> representing a field.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldfld">OpCodes.Ldfld</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.FieldInfo)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldflda(System.Reflection.FieldInfo)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldflda"/>, fieldInfo) that
            finds the address of a field in the object whose reference is currently on the evaluation stack.
            </summary>
            <param name="fieldInfo">A <see cref="T:System.Reflection.FieldInfo"/> representing a field.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldflda">OpCodes.Ldflda</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.FieldInfo)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldftn(System.Reflection.MethodInfo)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldftn"/>, methodInfo) that
            pushes an unmanaged pointer (type natural int) to the native code implementing a specific method 
            onto the evaluation stack.
            </summary>
            <param name="methodInfo">The method to be called.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldftn">OpCodes.Ldftn</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldind(System.Type)">
            <summary>
            Loads a value of the type from a supplied address.
            </summary>
            <param name="type">A Type.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldloc(System.Int16)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldloc"/>, short) that
            load an argument address onto the evaluation stack.
            </summary>
            <param name="index">Index of the local variable value pushed onto the stack.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldloc">OpCodes.Ldloc</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int16)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldloc(System.Reflection.Emit.LocalBuilder)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldloc"/>, <see cref="T:System.Reflection.Emit.LocalBuilder"/>) that
            load an argument address onto the evaluation stack.
            </summary>
            <param name="localBuilder">Local variable builder.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldloc">OpCodes.Ldloc</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int16)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldloca(System.Int16)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldloca"/>, short) that
            loads the address of the local variable at a specific index onto the evaluation stack.
            </summary>
            <param name="index">Index of the local variable.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldloca">OpCodes.Ldloca</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int16)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldloca_s(System.Byte)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldloca_S"/>, byte) that
            loads the address of the local variable at a specific index onto the evaluation stack, short form.
            </summary>
            <param name="index">Index of the local variable.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldloca_S">OpCodes.Ldloca_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Byte)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldloca(System.Reflection.Emit.LocalBuilder)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldloca"/>, <see cref="T:System.Reflection.Emit.LocalBuilder"/>) that
            loads the address of the local variable at a specific index onto the evaluation stack.
            </summary>
            <param name="local">A <see cref="T:System.Reflection.Emit.LocalBuilder"/> representing the local variable.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldloca">OpCodes.Ldloca</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int16)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldloc_s(System.Byte)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldloc_S"/>, byte) that
            loads the local variable at a specific index onto the evaluation stack, short form.
            </summary>
            <param name="index">Index of the local variable.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldloc_S">OpCodes.Ldloc_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Byte)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldobj(System.Type)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldobj"/>, type) that
            copies the value type object pointed to by an address to the top of the evaluation stack.
            </summary>
            <param name="type">A Type</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldobj">OpCodes.Ldobj</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldsfld(System.Reflection.FieldInfo)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldsfld"/>, fieldInfo) that
            pushes the value of a static field onto the evaluation stack.
            </summary>
            <param name="fieldInfo">A <see cref="T:System.Reflection.FieldInfo"/> representing a field.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldsfld">OpCodes.Ldsfld</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.FieldInfo)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldsflda(System.Reflection.FieldInfo)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldsflda"/>, fieldInfo) that
            pushes the address of a static field onto the evaluation stack.
            </summary>
            <param name="fieldInfo">A <see cref="T:System.Reflection.FieldInfo"/> representing a field.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldsflda">OpCodes.Ldsflda</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.FieldInfo)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldstrEx(System.String)">
            <summary>
            Calls <see cref="M:BLToolkit.Reflection.Emit.EmitHelper.ldstr(System.String)"/> -or- <see cref="P:BLToolkit.Reflection.Emit.EmitHelper.ldnull"/>,
            if given string is a null reference.
            </summary>
            <param name="str">The String to be emitted.</param>
            <seealso cref="M:BLToolkit.Reflection.Emit.EmitHelper.ldstr(System.String)"/>
            <seealso cref="P:BLToolkit.Reflection.Emit.EmitHelper.ldnull"/>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldstr(System.String)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldstr"/>, string) that
            pushes a new object reference to a string literal stored in the metadata.
            </summary>
            <param name="str">The String to be emitted.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldstr">OpCodes.Ldstr</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.FieldInfo)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldNameOrIndex(BLToolkit.Common.NameOrIndexParameter)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldstr"/>, string) that
            pushes a new object reference to a string literal stored in the metadata.
            </summary>
            <param name="nameOrIndex">The <see cref="T:BLToolkit.Common.NameOrIndexParameter"/> to be emitted.</param>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.FieldInfo)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldtoken(System.Reflection.MethodInfo)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldtoken"/>, methodInfo) that
            converts a metadata token to its runtime representation, pushing it onto the evaluation stack.
            </summary>
            <param name="methodInfo">The method to be called.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldtoken">OpCodes.Ldtoken</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldtoken(System.Reflection.FieldInfo)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldtoken"/>, fieldInfo) that
            converts a metadata token to its runtime representation, 
            pushing it onto the evaluation stack.
            </summary>
            <param name="fieldInfo">A <see cref="T:System.Reflection.FieldInfo"/> representing a field.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldtoken">OpCodes.Ldtoken</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.FieldInfo)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldtoken(System.Type)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldtoken"/>, type) that
            converts a metadata token to its runtime representation, pushing it onto the evaluation stack.
            </summary>
            <param name="type">A Type</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldtoken">OpCodes.Ldtoken</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ldvirtftn(System.Reflection.MethodInfo)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldvirtftn"/>, methodInfo) that
            pushes an unmanaged pointer (type natural int) to the native code implementing a particular virtual method 
            associated with a specified object onto the evaluation stack.
            </summary>
            <param name="methodInfo">The method to be called.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldvirtftn">OpCodes.Ldvirtftn</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.leave(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Leave"/>, label) that
            exits a protected region of code, unconditionally tranferring control to a specific target instruction.
            </summary>
            <param name="label">The label.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Leave">OpCodes.Leave</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.leave_s(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Leave_S"/>, label) that
            exits a protected region of code, unconditionally transferring control to a target instruction (short form).
            </summary>
            <param name="label">The label.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Leave_S">OpCodes.Leave_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.mkrefany(System.Type)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Mkrefany"/>, type) that
            pushes a typed reference to an instance of a specific type onto the evaluation stack.
            </summary>
            <param name="type">A Type</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Mkrefany">OpCodes.Mkrefany</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.newarr(System.Type)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Newarr"/>, type) that
            pushes an object reference to a new zero-based, one-dimensional array whose elements 
            are of a specific type onto the evaluation stack.
            </summary>
            <param name="type">A Type</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Newarr">OpCodes.Newarr</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.newobj(System.Reflection.ConstructorInfo)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Newobj"/>, <see cref="T:System.Reflection.ConstructorInfo"/>) that
            creates a new object or a new instance of a value type,
            pushing an object reference (type O) onto the evaluation stack.
            </summary>
            <param name="constructorInfo">A <see cref="T:System.Reflection.ConstructorInfo"/> representing a constructor.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Newobj">OpCodes.Newobj</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.ConstructorInfo)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.newobj(System.Type,System.Type[])">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Newobj"/>, ConstructorInfo) that
            creates a new object or a new instance of a value type,
            pushing an object reference (type O) onto the evaluation stack.
            </summary>
            <param name="type">A type.</param>
            <param name="parameters">An array of System.Type objects representing
            the number, order, and type of the parameters for the desired constructor.
            -or- An empty array of System.Type objects, to get a constructor that takes
            no parameters. Such an empty array is provided by the static field System.Type.EmptyTypes.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.refanyval(System.Type)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Refanyval"/>, type) that
            retrieves the address (type &amp;) embedded in a typed reference.
            </summary>
            <param name="type">A Type</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Refanyval">OpCodes.Refanyval</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.ret">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ret"/>) that
            returns from the current method, pushing a return value (if present) 
            from the caller's evaluation stack onto the callee's evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ret">OpCodes.Ret</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.sizeof(System.Type)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Sizeof"/>, type) that
            pushes the size, in bytes, of a supplied value type onto the evaluation stack.
            </summary>
            <param name="type">A Type</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Sizeof">OpCodes.Sizeof</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.starg(System.Int16)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Starg"/>, short) that
            stores the value on top of the evaluation stack in the argument slot at a specified index.
            </summary>
            <param name="index">Slot index.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Starg">OpCodes.Starg</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int16)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.starg_s(System.Byte)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Starg_S"/>, byte) that
            stores the value on top of the evaluation stack in the argument slot at a specified index,
            short form.
            </summary>
            <param name="index">Slot index.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Starg_S">OpCodes.Starg_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Byte)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.starg(System.Int32)">
            <summary>
            Stores the value on top of the evaluation stack in the argument slot at a specified index.
            </summary>
            <param name="index">Slot index.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Starg">OpCodes.Starg</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int16)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.stfld(System.Reflection.FieldInfo)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stfld"/>, <see cref="T:System.Reflection.FieldInfo"/>) that
            replaces the value stored in the field of an object reference or pointer with a new value.
            </summary>
            <param name="fieldInfo">A <see cref="T:System.Reflection.FieldInfo"/> representing a field.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stfld">OpCodes.Stfld</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.FieldInfo)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.stind(System.Type)">
            <summary>
            Stores a value of the type at a supplied address.
            </summary>
            <param name="type">A Type.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.stloc(System.Reflection.Emit.LocalBuilder)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stloc"/>, <see cref="T:System.Reflection.Emit.LocalBuilder"/>) that
            pops the current value from the top of the evaluation stack and stores it 
            in the local variable list at a specified index.
            </summary>
            <param name="local">A local variable.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stloc">OpCodes.Stloc</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.LocalBuilder)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.stloc(System.Int16)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stloc"/>, short) that
            pops the current value from the top of the evaluation stack and stores it 
            in the local variable list at a specified index.
            </summary>
            <param name="index">A local variable index.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stloc">OpCodes.Stloc</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int16)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.stloc_s(System.Reflection.Emit.LocalBuilder)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stloc_S"/>, <see cref="T:System.Reflection.Emit.LocalBuilder"/>) that
            pops the current value from the top of the evaluation stack and stores it 
            in the local variable list at index (short form).
            </summary>
            <param name="local">A local variable.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stloc_S">OpCodes.Stloc_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.LocalBuilder)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.stloc_s(System.Byte)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stloc_S"/>, byte) that
            pops the current value from the top of the evaluation stack and stores it 
            in the local variable list at index (short form).
            </summary>
            <param name="index">A local variable index.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stloc_S">OpCodes.Stloc_S</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int16)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.stobj(System.Type)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stobj"/>, type) that
            copies a value of a specified type from the evaluation stack into a supplied memory address.
            </summary>
            <param name="type">A Type</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stobj">OpCodes.Stobj</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.stsfld(System.Reflection.FieldInfo)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stsfld"/>, fieldInfo) that
            replaces the value of a static field with a value from the evaluation stack.
            </summary>
            <param name="fieldInfo">A <see cref="T:System.Reflection.FieldInfo"/> representing a field.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stsfld">OpCodes.Stsfld</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.FieldInfo)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.switch(System.Reflection.Emit.Label[])">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Switch"/>, label[]) that
            implements a jump table.
            </summary>
            <param name="labels">The array of label objects to which to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Switch">OpCodes.Switch</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label[])">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.unaligned(System.Reflection.Emit.Label)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Unaligned"/>, label) that
            indicates that an address currently atop the evaluation stack might not be aligned 
            to the natural size of the immediately following ldind, stind, ldfld, stfld, ldobj, stobj, 
            initblk, or cpblk instruction.
            </summary>
            <param name="label">The label to branch from this location.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Unaligned">OpCodes.Unaligned</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.unaligned(System.Int64)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Unaligned"/>, long) that
            indicates that an address currently atop the evaluation stack might not be aligned 
            to the natural size of the immediately following ldind, stind, ldfld, stfld, ldobj, stobj, 
            initblk, or cpblk instruction.
            </summary>
            <param name="addr">An address is pushed onto the stack.</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Unaligned">OpCodes.Unaligned</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int64)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.unbox(System.Type)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Unbox"/>, type) that
            converts the boxed representation of a value type to its unboxed form.
            </summary>
            <param name="type">A Type</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Unbox">OpCodes.Unbox</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.unbox_any(System.Type)">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Unbox_Any"/>, type) that
            converts the boxed representation of a value type to its unboxed form.
            </summary>
            <param name="type">A Type</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Unbox_Any">OpCodes.Unbox_Any</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.unboxIfValueType(System.Type)">
            <summary>
            Calls <see cref="M:BLToolkit.Reflection.Emit.EmitHelper.unbox_any(System.Type)"/> if given type is a value type.
            </summary>
            <param name="type">A Type</param>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Unbox_Any">OpCodes.Unbox</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">ILGenerator.Emit</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.end">
            <summary>
            Ends sequence of property calls.
            </summary>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.LoadInitValue(System.Type)">
            <summary>
            Loads default value of given type onto the evaluation stack.
            </summary>
            <param name="type">A Type</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.LoadWellKnownValue(System.Object)">
            <summary>
            Loads supplied object value (if possible) onto the evaluation stack.
            </summary>
            <param name="o">Any object instance or null reference.</param>
            <returns>True is a value was loaded, otherwise false.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.Init(System.Reflection.ParameterInfo,System.Int32)">
            <summary>
            Initialize parameter with some default value.
            </summary>
            <param name="parameterInfo">A method parameter.</param>
            <param name="index">The parameter index.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.InitOutParameters(System.Reflection.ParameterInfo[])">
            <summary>
            Initialize all output parameters with some default value.
            </summary>
            <param name="parameters">A method parameters array.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.Init(System.Reflection.Emit.LocalBuilder)">
            <summary>
            Initialize local variable with some default value.
            </summary>
            <param name="localBuilder">A method local variable.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.LoadType(System.Type)">
            <summary>
            Loads a type instance at runtime.
            </summary>
            <param name="type">A type</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.LoadField(System.Reflection.FieldInfo)">
            <summary>
            Loads a field instance at runtime.
            </summary>
            <param name="fieldInfo">A <see cref="T:System.Reflection.FieldInfo"/> representing a field.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.CastFromObject(System.Type)">
            <summary>
            Cast an object passed by reference to the specified type
            or unbox a boxed value type.
            </summary>
            <param name="type">A type</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.CastIfNecessary(System.Type,System.Type)">
            <summary>
            Cast an object passed by reference to the specified type
            or unbox a boxed value type unless <paramref name="expectedType"/>
            is a parent of <paramref name="actualType"/>.
            </summary>
            <param name="expectedType">A type required.</param>
            <param name="actualType">A type available.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.EmitHelper.AddMaxStackSize(System.Int32)">
            <summary>
            Increase max stack size by specified delta.
            </summary>
            <param name="size">Number of bytes to enlarge max stack size.</param>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.Method">
            <summary>
            Gets <see cref="T:BLToolkit.Reflection.Emit.MethodBuilderHelper"/>.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ILGenerator">
            <summary>
            Gets MSIL generator.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.add">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Add"/>) that
            adds two values and pushes the result onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Add">OpCodes.Add</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.add_ovf">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Add_Ovf"/>) that
            adds two integers, performs an overflow check, and pushes the result onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Add_Ovf">OpCodes.Add_Ovf</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.add_ovf_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Add_Ovf_Un"/>) that
            adds two unsigned integer values, performs an overflow check, and pushes the result onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Add_Ovf_Un">OpCodes.Add_Ovf_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.and">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.And"/>) that
            computes the bitwise AND of two values and pushes the result onto the evalution stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.And">OpCodes.And</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.arglist">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Arglist"/>) that
            returns an unmanaged pointer to the argument list of the current method.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Arglist">OpCodes.Arglist</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.break">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Break"/>) that
            signals the Common Language Infrastructure (CLI) to inform the debugger that a break point has been tripped.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Break">OpCodes.Break</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ceq">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ceq"/>) that
            compares two values. If they are equal, the integer value 1 (int32) is pushed onto the evaluation stack;
            otherwise 0 (int32) is pushed onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ceq">OpCodes.Ceq</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.cgt">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Cgt"/>) that
            compares two values. If the first value is greater than the second,
            the integer value 1 (int32) is pushed onto the evaluation stack;
            otherwise 0 (int32) is pushed onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Cgt">OpCodes.Cgt</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.cgt_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Cgt_Un"/>) that
            compares two unsigned or unordered values.
            If the first value is greater than the second, the integer value 1 (int32) is pushed onto the evaluation stack;
            otherwise 0 (int32) is pushed onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Cgt_Un">OpCodes.Cgt_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ckfinite">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ckfinite"/>) that
            throws <see cref="T:System.ArithmeticException"/> if value is not a finite number.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ckfinite">OpCodes.Ckfinite</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.clt">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Clt"/>) that
            compares two values. If the first value is less than the second,
            the integer value 1 (int32) is pushed onto the evaluation stack;
            otherwise 0 (int32) is pushed onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Clt">OpCodes.Clt</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.clt_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Clt_Un"/>) that
            compares the unsigned or unordered values value1 and value2.
            If value1 is less than value2, then the integer value 1 (int32) is pushed onto the evaluation stack;
            otherwise 0 (int32) is pushed onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Clt_Un">OpCodes.Clt_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_i">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_I"/>) that
            converts the value on top of the evaluation stack to natural int.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_I">OpCodes.Conv_I</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_i1">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_I1"/>) that
            converts the value on top of the evaluation stack to int8, then extends (pads) it to int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_I1">OpCodes.Conv_I1</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_i2">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_I2"/>) that
            converts the value on top of the evaluation stack to int16, then extends (pads) it to int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_I2">OpCodes.Conv_I2</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_i4">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_I4"/>) that
            converts the value on top of the evaluation stack to int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_I4">OpCodes.Conv_I4</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_i8">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_I8"/>) that
            converts the value on top of the evaluation stack to int64.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_I8">OpCodes.Conv_I8</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_i">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I"/>) that
            converts the signed value on top of the evaluation stack to signed natural int,
            throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I">OpCodes.Conv_Ovf_I</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_i1">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I1"/>) that
            converts the signed value on top of the evaluation stack to signed int8 and extends it to int32,
            throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I1">OpCodes.Conv_Ovf_I1</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_i1_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I1_Un"/>) that
            converts the unsigned value on top of the evaluation stack to signed int8 and extends it to int32,
            throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I1_Un">OpCodes.Conv_Ovf_I1_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_i2">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I2"/>) that
            converts the signed value on top of the evaluation stack to signed int16 and extending it to int32,
            throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I2">OpCodes.Conv_Ovf_I2</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_i2_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I2_Un"/>) that
            converts the unsigned value on top of the evaluation stack to signed int16 and extends it to int32,
            throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I2_Un">OpCodes.Conv_Ovf_I2_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_i4">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I4"/>) that
            converts the signed value on top of the evaluation tack to signed int32, throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I4">OpCodes.Conv_Ovf_I4</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_i4_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I4_Un"/>) that
            converts the unsigned value on top of the evaluation stack to signed int32, throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I4_Un">OpCodes.Conv_Ovf_I4_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_i8">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I8"/>) that
            converts the signed value on top of the evaluation stack to signed int64,
            throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I8">OpCodes.Conv_Ovf_I8</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_i8_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I8_Un"/>) that
            converts the unsigned value on top of the evaluation stack to signed int64, throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I8_Un">OpCodes.Conv_Ovf_I8_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_i_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I_Un"/>) that
            converts the unsigned value on top of the evaluation stack to signed natural int,
            throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I_Un">OpCodes.Conv_Ovf_I_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_u">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U"/>) that
            converts the signed value on top of the evaluation stack to unsigned natural int,
            throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U">OpCodes.Conv_Ovf_U</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_u1">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U1"/>) that
            converts the signed value on top of the evaluation stack to unsigned int8 and extends it to int32,
            throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U1">OpCodes.Conv_Ovf_U1</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_u1_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U1_Un"/>) that
            converts the unsigned value on top of the evaluation stack to unsigned int8 and extends it to int32,
            throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U1_Un">OpCodes.Conv_Ovf_U1_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_u2">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U2"/>) that
            converts the signed value on top of the evaluation stack to unsigned int16 and extends it to int32,
            throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U2">OpCodes.Conv_Ovf_U2</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_u2_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U2_Un"/>) that
            converts the unsigned value on top of the evaluation stack to unsigned int16 and extends it to int32,
            throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U2_Un">OpCodes.Conv_Ovf_U2_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_u4">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U4"/>) that
            Converts the signed value on top of the evaluation stack to unsigned int32, throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U4">OpCodes.Conv_Ovf_U4</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_u4_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U4_Un"/>) that
            converts the unsigned value on top of the evaluation stack to unsigned int32, throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U4_Un">OpCodes.Conv_Ovf_U4_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_u8">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U8"/>) that
            converts the signed value on top of the evaluation stack to unsigned int64, throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U8">OpCodes.Conv_Ovf_U8</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_u8_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U8_Un"/>) that
            converts the unsigned value on top of the evaluation stack to unsigned int64, throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U8_Un">OpCodes.Conv_Ovf_U8_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_ovf_u_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U_Un"/>) that
            converts the unsigned value on top of the evaluation stack to unsigned natural int,
            throwing <see cref="T:System.OverflowException"/> on overflow.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U_Un">OpCodes.Conv_Ovf_U_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_r4">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_R4"/>) that
            converts the value on top of the evaluation stack to float32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_R4">OpCodes.Conv_R4</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_r8">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_R8"/>) that
            converts the value on top of the evaluation stack to float64.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_R8">OpCodes.Conv_R8</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_r_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_R_Un"/>) that
            converts the unsigned integer value on top of the evaluation stack to float32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_R_Un">OpCodes.Conv_R_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_u">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_U"/>) that
            converts the value on top of the evaluation stack to unsigned natural int, and extends it to natural int.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_U">OpCodes.Conv_U</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_u1">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_U1"/>) that
            converts the value on top of the evaluation stack to unsigned int8, and extends it to int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_U1">OpCodes.Conv_U1</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_u2">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_U2"/>) that
            converts the value on top of the evaluation stack to unsigned int16, and extends it to int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_U2">OpCodes.Conv_U2</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_u4">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_U4"/>) that
            converts the value on top of the evaluation stack to unsigned int32, and extends it to int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_U4">OpCodes.Conv_U4</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.conv_u8">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Conv_U8"/>) that
            converts the value on top of the evaluation stack to unsigned int64, and extends it to int64.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Conv_U8">OpCodes.Conv_U8</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.cpblk">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Cpblk"/>) that
            copies a specified number bytes from a source address to a destination address.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Cpblk">OpCodes.Cpblk</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.div">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Div"/>) that
            divides two values and pushes the result as a floating-point (type F) or
            quotient (type int32) onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Div">OpCodes.Div</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.div_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Div_Un"/>) that
            divides two unsigned integer values and pushes the result (int32) onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Div_Un">OpCodes.Div_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.dup">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Dup"/>) that
            copies the current topmost value on the evaluation stack, and then pushes the copy onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Dup">OpCodes.Dup</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.endfilter">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Endfilter"/>) that
            transfers control from the filter clause of an exception back to
            the Common Language Infrastructure (CLI) exception handler.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Endfilter">OpCodes.Endfilter</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.endfinally">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Endfinally"/>) that
            transfers control from the fault or finally clause of an exception block back to
            the Common Language Infrastructure (CLI) exception handler.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Endfinally">OpCodes.Endfinally</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.initblk">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Initblk"/>) that
            initializes a specified block of memory at a specific address to a given size and initial value.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Initblk">OpCodes.Initblk</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldarg_0">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldarg_0"/>) that
            loads the argument at index 0 onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldarg_0">OpCodes.Ldarg_0</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldarg_1">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldarg_1"/>) that
            loads the argument at index 1 onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldarg_1">OpCodes.Ldarg_1</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldarg_2">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldarg_2"/>) that
            loads the argument at index 2 onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldarg_2">OpCodes.Ldarg_2</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldarg_3">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldarg_3"/>) that
            loads the argument at index 3 onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldarg_3">OpCodes.Ldarg_3</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldc_i4_0">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_0"/>) that
            pushes the integer value of 0 onto the evaluation stack as an int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_0">OpCodes.Ldc_I4_0</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldc_i4_1">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_1"/>) that
            pushes the integer value of 1 onto the evaluation stack as an int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_1">OpCodes.Ldc_I4_1</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldc_i4_2">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_2"/>) that
            pushes the integer value of 2 onto the evaluation stack as an int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_2">OpCodes.Ldc_I4_2</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldc_i4_3">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_3"/>) that
            pushes the integer value of 3 onto the evaluation stack as an int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_3">OpCodes.Ldc_I4_3</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldc_i4_4">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_4"/>) that
            pushes the integer value of 4 onto the evaluation stack as an int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_4">OpCodes.Ldc_I4_4</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldc_i4_5">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_5"/>) that
            pushes the integer value of 5 onto the evaluation stack as an int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_5">OpCodes.Ldc_I4_0</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldc_i4_6">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_6"/>) that
            pushes the integer value of 6 onto the evaluation stack as an int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_6">OpCodes.Ldc_I4_6</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldc_i4_7">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_7"/>) that
            pushes the integer value of 7 onto the evaluation stack as an int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_7">OpCodes.Ldc_I4_7</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldc_i4_8">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_8"/>) that
            pushes the integer value of 8 onto the evaluation stack as an int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_8">OpCodes.Ldc_I4_8</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldc_i4_m1">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_M1"/>) that
            pushes the integer value of -1 onto the evaluation stack as an int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldc_I4_M1">OpCodes.Ldc_I4_M1</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldelem_i">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldelem_I"/>) that
            loads the element with type natural int at a specified array index onto the top of the evaluation stack 
            as a natural int.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldelem_I">OpCodes.Ldelem_I</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldelem_i1">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldelem_I1"/>) that
            loads the element with type int8 at a specified array index onto the top of the evaluation stack as an int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldelem_I1">OpCodes.Ldelem_I1</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldelem_i2">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldelem_I2"/>) that
            loads the element with type int16 at a specified array index onto the top of the evaluation stack as an int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldelem_I2">OpCodes.Ldelem_I2</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldelem_i4">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldelem_I4"/>) that
            loads the element with type int32 at a specified array index onto the top of the evaluation stack as an int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldelem_I4">OpCodes.Ldelem_I4</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldelem_i8">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldelem_I8"/>) that
            loads the element with type int64 at a specified array index onto the top of the evaluation stack as an int64.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldelem_I8">OpCodes.Ldelem_I8</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldelem_r4">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldelem_R4"/>) that
            loads the element with type float32 at a specified array index onto the top of the evaluation stack as type F (float).
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldelem_R4">OpCodes.Ldelem_R4</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldelem_r8">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldelem_R8"/>) that
            loads the element with type float64 at a specified array index onto the top of the evaluation stack as type F (float).
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldelem_R8">OpCodes.Ldelem_R8</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldelem_ref">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldelem_Ref"/>) that
            loads the element containing an object reference at a specified array index 
            onto the top of the evaluation stack as type O (object reference).
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldelem_Ref">OpCodes.Ldelem_Ref</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldelem_u1">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldelem_U1"/>) that
            loads the element with type unsigned int8 at a specified array index onto the top of the evaluation stack as an int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldelem_U1">OpCodes.Ldelem_U1</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldelem_u2">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldelem_U2"/>) that
            loads the element with type unsigned int16 at a specified array index 
            onto the top of the evaluation stack as an int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldelem_U2">OpCodes.Ldelem_U2</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldelem_u4">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldelem_U4"/>) that
            loads the element with type unsigned int32 at a specified array index 
            onto the top of the evaluation stack as an int32.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldelem_U4">OpCodes.Ldelem_U4</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldind_i">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldind_I"/>) that
            loads a value of type natural int as a natural int onto the evaluation stack indirectly.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldind_I">OpCodes.Ldind_I</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldind_i1">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldind_I1"/>) that
            loads a value of type int8 as an int32 onto the evaluation stack indirectly.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldind_I1">OpCodes.Ldind_I1</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldind_i2">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldind_I2"/>) that
            loads a value of type int16 as an int32 onto the evaluation stack indirectly.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldind_I2">OpCodes.Ldind_I2</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldind_i4">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldind_I4"/>) that
            loads a value of type int32 as an int32 onto the evaluation stack indirectly.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldind_I4">OpCodes.Ldind_I4</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldind_i8">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldind_I8"/>) that
            loads a value of type int64 as an int64 onto the evaluation stack indirectly.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldind_I8">OpCodes.Ldind_I8</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldind_r4">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldind_R4"/>) that
            loads a value of type float32 as a type F (float) onto the evaluation stack indirectly.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldind_R4">OpCodes.Ldind_R4</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldind_r8">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldind_R8"/>) that
            loads a value of type float64 as a type F (float) onto the evaluation stack indirectly.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldind_R8">OpCodes.Ldind_R8</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldind_ref">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldind_Ref"/>) that
            loads an object reference as a type O (object reference) onto the evaluation stack indirectly.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldind_Ref">OpCodes.Ldind_Ref</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldind_u1">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldind_U1"/>) that
            loads a value of type unsigned int8 as an int32 onto the evaluation stack indirectly.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldind_U1">OpCodes.Ldind_U1</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldind_u2">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldind_U2"/>) that
            loads a value of type unsigned int16 as an int32 onto the evaluation stack indirectly.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldind_U2">OpCodes.Ldind_U2</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldind_u4">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldind_U4"/>) that
            loads a value of type unsigned int32 as an int32 onto the evaluation stack indirectly.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldind_U4">OpCodes.Ldind_U4</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldlen">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldlen"/>) that
            pushes the number of elements of a zero-based, one-dimensional array onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldlen">OpCodes.Ldlen</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldloc_0">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldloc_0"/>) that
            loads the local variable at index 0 onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldloc_0">OpCodes.Ldloc_0</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldloc_1">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldloc_1"/>) that
            loads the local variable at index 1 onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldloc_1">OpCodes.Ldloc_1</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldloc_2">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldloc_2"/>) that
            loads the local variable at index 2 onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldloc_2">OpCodes.Ldloc_2</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldloc_3">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldloc_3"/>) that
            loads the local variable at index 3 onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldloc_3">OpCodes.Ldloc_3</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.ldnull">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Ldnull"/>) that
            pushes a null reference (type O) onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Ldnull">OpCodes.Ldnull</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.localloc">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Localloc"/>) that
            allocates a certain number of bytes from the local dynamic memory pool and pushes the address 
            (a transient pointer, type *) of the first allocated byte onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Localloc">OpCodes.Localloc</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.mul">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Mul"/>) that
            multiplies two values and pushes the result on the evaluation stack.
            (a transient pointer, type *) of the first allocated byte onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Mul">OpCodes.Mul</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.mul_ovf">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Mul_Ovf"/>) that
            multiplies two integer values, performs an overflow check, 
            and pushes the result onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Mul_Ovf">OpCodes.Mul_Ovf</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.mul_ovf_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Mul_Ovf_Un"/>) that
            multiplies two unsigned integer values, performs an overflow check, 
            and pushes the result onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Mul_Ovf_Un">OpCodes.Mul_Ovf_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.neg">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Neg"/>) that
            negates a value and pushes the result onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Neg">OpCodes.Neg</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.nop">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Nop"/>) that
            fills space if opcodes are patched. No meaningful operation is performed although 
            a processing cycle can be consumed.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Nop">OpCodes.Nop</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.not">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Not"/>) that
            computes the bitwise complement of the integer value on top of the stack 
            and pushes the result onto the evaluation stack as the same type.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Not">OpCodes.Not</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.or">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Or"/>) that
            compute the bitwise complement of the two integer values on top of the stack and 
            pushes the result onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Or">OpCodes.Or</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.pop">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Pop"/>) that
            removes the value currently on top of the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Pop">OpCodes.Pop</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.readonly">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Refanytype"/>) that
            specifies that the subsequent array address operation performs
            no type check at run time, and that it returns a managed pointer
            whose mutability is restricted.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Refanytype">OpCodes.Refanytype</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.refanytype">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Refanytype"/>) that
            retrieves the type token embedded in a typed reference.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Refanytype">OpCodes.Refanytype</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.rem">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Rem"/>) that
            divides two values and pushes the remainder onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Rem">OpCodes.Rem</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.rem_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Rem_Un"/>) that
            divides two unsigned values and pushes the remainder onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Rem_Un">OpCodes.Rem_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.rethrow">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Rethrow"/>) that
            rethrows the current exception.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Rethrow">OpCodes.Rethrow</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.shl">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Shl"/>) that
            shifts an integer value to the left (in zeroes) by a specified number of bits,
            pushing the result onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Shl">OpCodes.Shl</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.shr">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Shr"/>) that
            shifts an integer value (in sign) to the right by a specified number of bits,
            pushing the result onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Shr">OpCodes.Shr</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.shr_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Shr_Un"/>) that
            shifts an unsigned integer value (in zeroes) to the right by a specified number of bits,
            pushing the result onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Shr_Un">OpCodes.Shr_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stelem_i">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stelem_I"/>) that
            replaces the array element at a given index with the natural int value 
            on the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stelem_I">OpCodes.Stelem_I</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stelem_i1">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stelem_I1"/>) that
            replaces the array element at a given index with the int8 value on the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stelem_I1">OpCodes.Stelem_I1</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stelem_i2">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stelem_I2"/>) that
            replaces the array element at a given index with the int16 value on the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stelem_I2">OpCodes.Stelem_I2</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stelem_i4">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stelem_I4"/>) that
            replaces the array element at a given index with the int32 value on the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stelem_I4">OpCodes.Stelem_I4</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stelem_i8">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stelem_I8"/>) that
            replaces the array element at a given index with the int64 value on the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stelem_I8">OpCodes.Stelem_I8</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stelem_r4">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stelem_R4"/>) that
            replaces the array element at a given index with the float32 value on the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stelem_R4">OpCodes.Stelem_R4</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stelem_r8">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stelem_R8"/>) that
            replaces the array element at a given index with the float64 value on the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stelem_R8">OpCodes.Stelem_R8</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stelem_ref">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stelem_Ref"/>) that
            replaces the array element at a given index with the object ref value (type O)
            on the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stelem_Ref">OpCodes.Stelem_Ref</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stind_i">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stind_I"/>) that
            stores a value of type natural int at a supplied address.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stind_I">OpCodes.Stind_I</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stind_i1">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stind_I1"/>) that
            stores a value of type int8 at a supplied address.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stind_I1">OpCodes.Stind_I1</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stind_i2">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stind_I2"/>) that
            stores a value of type int16 at a supplied address.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stind_I2">OpCodes.Stind_I2</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stind_i4">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stind_I4"/>) that
            stores a value of type int32 at a supplied address.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stind_I4">OpCodes.Stind_I4</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stind_i8">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stind_I8"/>) that
            stores a value of type int64 at a supplied address.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stind_I8">OpCodes.Stind_I8</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stind_r4">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stind_R4"/>) that
            stores a value of type float32 at a supplied address.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stind_R4">OpCodes.Stind_R4</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stind_r8">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stind_R8"/>) that
            stores a value of type float64 at a supplied address.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stind_R8">OpCodes.Stind_R8</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stind_ref">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stind_Ref"/>) that
            stores an object reference value at a supplied address.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stind_Ref">OpCodes.Stind_Ref</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stloc_0">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stloc_0"/>) that
            pops the current value from the top of the evaluation stack and stores it 
            in the local variable list at index 0.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stloc_0">OpCodes.Stloc_0</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stloc_1">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stloc_1"/>) that
            pops the current value from the top of the evaluation stack and stores it 
            in the local variable list at index 1.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stloc_1">OpCodes.Stloc_1</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stloc_2">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stloc_2"/>) that
            pops the current value from the top of the evaluation stack and stores it 
            in the local variable list at index 2.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stloc_2">OpCodes.Stloc_2</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.stloc_3">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Stloc_3"/>) that
            pops the current value from the top of the evaluation stack and stores it 
            in the local variable list at index 3.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Stloc_3">OpCodes.Stloc_3</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.sub">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Sub"/>) that
            subtracts one value from another and pushes the result onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Sub">OpCodes.Sub</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.sub_ovf">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Sub_Ovf"/>) that
            subtracts one integer value from another, performs an overflow check,
            and pushes the result onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Sub_Ovf">OpCodes.Sub_Ovf</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.sub_ovf_un">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Sub_Ovf_Un"/>) that
            subtracts one unsigned integer value from another, performs an overflow check,
            and pushes the result onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Sub_Ovf_Un">OpCodes.Sub_Ovf_Un</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.tailcall">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Tailcall"/>) that
            performs a postfixed method call instruction such that the current method's stack frame 
            is removed before the actual call instruction is executed.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Tailcall">OpCodes.Tailcall</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.throw">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Throw"/>) that
            throws the exception object currently on the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Throw">OpCodes.Throw</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.volatile">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Volatile"/>) that
            specifies that an address currently atop the evaluation stack might be volatile, 
            and the results of reading that location cannot be cached or that multiple stores 
            to that location cannot be suppressed.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Volatile">OpCodes.Volatile</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.EmitHelper.xor">
            <summary>
            Calls ILGenerator.Emit(<see cref="F:System.Reflection.Emit.OpCodes.Xor"/>) that
            computes the bitwise XOR of the top two values on the evaluation stack, 
            pushing the result onto the evaluation stack.
            </summary>
            <seealso cref="F:System.Reflection.Emit.OpCodes.Xor">OpCodes.Xor</seealso>
            <seealso cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">ILGenerator.Emit</seealso>
        </member>
        <member name="T:BLToolkit.ComponentModel.ObjectBinder">
            <summary>
            http://www.bltoolkit.net/Doc/ComponentModel/ObjectBinder.htm
            </summary>
        </member>
        <member name="T:BLToolkit.ComponentModel.TypeTypeConverter">
            <summary>
            Converts the value of an object into a <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:BLToolkit.ComponentModel.TypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to
            a <see cref="T:System.Type"/>, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>
            that provides a format context. </param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type
            you want to convert from. </param>
            <returns>
            <see langword="true"/> if this converter can perform the conversion;
            otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:BLToolkit.ComponentModel.TypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the corresponding <see cref="T:System.Type"/>,
            using the specified context and culture information.
            </summary>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to
            use as the current culture. </param>
            <param name="context">An 
            <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a
            format context. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert. </param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be
            performed. </exception>
        </member>
        <member name="M:BLToolkit.ComponentModel.TypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type,
            using the specified context.
            </summary>
            <param name="context">An 
            <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides
            a format context. </param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents
            the type you want to convert to. </param>
            <returns>
            <see langword="true"/> if this converter can perform the conversion;
            otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:BLToolkit.ComponentModel.TypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified
            context and culture information.
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>.
            If null is passed, the current culture is assumed. </param>
            <param name="context">An 
            <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides
            a format context. </param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert
            the value parameter to. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert. </param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be
            performed. </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="destinationType"/> parameter is null. </exception>
        </member>
        <member name="F:BLToolkit.ComponentModel.Design.TypePicker.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:BLToolkit.ComponentModel.Design.TypePicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BLToolkit.ComponentModel.Design.TypePicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:BLToolkit.Common.Convert">
            <summary>Converts a base data type to another base data type.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.IO.Stream)">
            <summary>Converts the value from <c>Stream</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Char[])">
            <summary>Converts the value from <c>Char[]</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Char[])">
            <summary>Converts the value from <c>Char[]</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.TimeSpan)">
            <summary>Converts the value from <c>TimeSpan</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.DateTime)">
            <summary>Converts the value from <c>DateTime</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.DateTimeOffset)">
            <summary>Converts the value from <c>DateTimeOffset</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Guid)">
            <summary>Converts the value from <c>Guid</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Nullable{System.TimeSpan})">
            <summary>Converts the value from <c>TimeSpan?</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Nullable{System.DateTime})">
            <summary>Converts the value from <c>DateTime?</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Nullable{System.DateTimeOffset})">
            <summary>Converts the value from <c>DateTimeOffset?</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Nullable{System.Guid})">
            <summary>Converts the value from <c>Guid?</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Data.SqlTypes.SqlGuid)">
            <summary>Converts the value from <c>SqlGuid</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Data.SqlTypes.SqlDateTime)">
            <summary>Converts the value from <c>SqlDateTime</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Data.SqlTypes.SqlBinary)">
            <summary>Converts the value from <c>SqlBinary</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Type)">
            <summary>Converts the value from <c>Type</c> to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlChars(System.Object)">
            <summary>Converts the value of a specified object to an equivalent <c>SqlChars</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.DateTime)">
            <summary>Converts the value from <c>DateTime</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.DateTimeOffset)">
            <summary>Converts the value from <c>DateTimeOffset</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.TimeSpan)">
            <summary>Converts the value from <c>TimeSpan</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.IO.Stream)">
            <summary>Converts the value from <c>Stream</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Char[])">
            <summary>Converts the value from <c>Char[]</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Guid)">
            <summary>Converts the value from <c>Guid</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Nullable{System.DateTime})">
            <summary>Converts the value from <c>DateTime?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Nullable{System.DateTimeOffset})">
            <summary>Converts the value from <c>DateTimeOffset?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Nullable{System.TimeSpan})">
            <summary>Converts the value from <c>TimeSpan?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Nullable{System.Guid})">
            <summary>Converts the value from <c>Guid?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Data.SqlTypes.SqlBinary)">
            <summary>Converts the value from <c>SqlBinary</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Data.SqlTypes.SqlBytes)">
            <summary>Converts the value from <c>SqlBytes</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Data.SqlTypes.SqlGuid)">
            <summary>Converts the value from <c>SqlGuid</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToLinqBinary(System.Object)">
            <summary>Converts the value of a specified object to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToCharArray(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Char[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToCharArray(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Char[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToCharArray(System.Data.SqlTypes.SqlChars)">
            <summary>Converts the value from <c>SqlChars</c> to an equivalent <c>Char[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToCharArray(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Char[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToCharArray(System.Object)">
            <summary>Converts the value of a specified object to an equivalent <c>Char[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlReader(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>XmlReader</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlReader(System.Data.SqlTypes.SqlXml)">
            <summary>Converts the value from <c>SqlXml</c> to an equivalent <c>XmlReader</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlReader(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>XmlReader</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlReader(System.Data.SqlTypes.SqlChars)">
            <summary>Converts the value from <c>SqlChars</c> to an equivalent <c>XmlReader</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlReader(System.Data.SqlTypes.SqlBinary)">
            <summary>Converts the value from <c>SqlBinary</c> to an equivalent <c>XmlReader</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlReader(System.IO.Stream)">
            <summary>Converts the value from <c>Stream</c> to an equivalent <c>XmlReader</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlReader(System.IO.TextReader)">
            <summary>Converts the value from <c>TextReader</c> to an equivalent <c>XmlReader</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlReader(System.Xml.XmlDocument)">
            <summary>Converts the value from <c>XmlDocument</c> to an equivalent <c>XmlReader</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlReader(System.Char[])">
            <summary>Converts the value from <c>Char[]</c> to an equivalent <c>XmlReader</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlReader(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>XmlReader</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlReader(System.Object)">
            <summary>Converts the value of a specified object to an equivalent <c>XmlReader</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlDocument(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>XmlDocument</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlDocument(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>XmlDocument</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlDocument(System.Data.SqlTypes.SqlXml)">
            <summary>Converts the value from <c>SqlXml</c> to an equivalent <c>XmlDocument</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlDocument(System.Data.SqlTypes.SqlChars)">
            <summary>Converts the value from <c>SqlChars</c> to an equivalent <c>XmlDocument</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlDocument(System.Data.SqlTypes.SqlBinary)">
            <summary>Converts the value from <c>SqlBinary</c> to an equivalent <c>XmlDocument</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlDocument(System.IO.Stream)">
            <summary>Converts the value from <c>Stream</c> to an equivalent <c>XmlDocument</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlDocument(System.IO.TextReader)">
            <summary>Converts the value from <c>TextReader</c> to an equivalent <c>XmlDocument</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlDocument(System.Xml.XmlReader)">
            <summary>Converts the value from <c>XmlReader</c> to an equivalent <c>XmlDocument</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlDocument(System.Char[])">
            <summary>Converts the value from <c>Char[]</c> to an equivalent <c>XmlDocument</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlDocument(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>XmlDocument</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToXmlDocument(System.Object)">
            <summary>Converts the value of a specified object to an equivalent <c>XmlDocument</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToBoolean(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Boolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByte(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Byte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToChar(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Char</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTime(System.DateTimeOffset)">
            <summary>Converts the value from <c>DateTimeOffset</c> to an equivalent <c>DateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTime(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>DateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTime(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>DateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTime(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>DateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTime(System.TimeSpan)">
            <summary>Converts the value from <c>TimeSpan</c> to an equivalent <c>DateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTime(System.Nullable{System.DateTime})">
            <summary>Converts the value from <c>DateTime?</c> to an equivalent <c>DateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTime(System.Nullable{System.DateTimeOffset})">
            <summary>Converts the value from <c>DateTimeOffset?</c> to an equivalent <c>DateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTime(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>DateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTime(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>DateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTime(System.Nullable{System.TimeSpan})">
            <summary>Converts the value from <c>TimeSpan?</c> to an equivalent <c>DateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTime(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>DateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTime(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>DateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTime(System.Data.SqlTypes.SqlDateTime)">
            <summary>Converts the value from <c>SqlDateTime</c> to an equivalent <c>DateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTime(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>DateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTime(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>DateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTime(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>DateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTime(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>DateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTimeOffset(System.DateTime)">
            <summary>Converts the value from <c>DateTime</c> to an equivalent <c>DateTimeOffset</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTimeOffset(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>DateTimeOffset</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTimeOffset(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>DateTimeOffset</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTimeOffset(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>DateTimeOffset</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTimeOffset(System.TimeSpan)">
            <summary>Converts the value from <c>TimeSpan</c> to an equivalent <c>DateTimeOffset</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTimeOffset(System.Nullable{System.DateTime})">
            <summary>Converts the value from <c>DateTime?</c> to an equivalent <c>DateTimeOffset</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTimeOffset(System.Nullable{System.DateTimeOffset})">
            <summary>Converts the value from <c>DateTimeOffset?</c> to an equivalent <c>DateTimeOffset</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTimeOffset(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>DateTimeOffset</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTimeOffset(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>DateTimeOffset</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTimeOffset(System.Nullable{System.TimeSpan})">
            <summary>Converts the value from <c>TimeSpan?</c> to an equivalent <c>DateTimeOffset</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTimeOffset(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>DateTimeOffset</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTimeOffset(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>DateTimeOffset</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTimeOffset(System.Data.SqlTypes.SqlDateTime)">
            <summary>Converts the value from <c>SqlDateTime</c> to an equivalent <c>DateTimeOffset</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTimeOffset(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>DateTimeOffset</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTimeOffset(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>DateTimeOffset</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTimeOffset(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>DateTimeOffset</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDateTimeOffset(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>DateTimeOffset</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDecimal(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Decimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.DateTime)">
            <summary>Converts the value from <c>DateTime</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.DateTimeOffset)">
            <summary>Converts the value from <c>DateTimeOffset</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.TimeSpan)">
            <summary>Converts the value from <c>TimeSpan</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Nullable{System.DateTime})">
            <summary>Converts the value from <c>DateTime?</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Nullable{System.DateTimeOffset})">
            <summary>Converts the value from <c>DateTimeOffset?</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Nullable{System.TimeSpan})">
            <summary>Converts the value from <c>TimeSpan?</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Data.SqlTypes.SqlDateTime)">
            <summary>Converts the value from <c>SqlDateTime</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToDouble(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Double</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToGuid(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Guid</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToGuid(System.Nullable{System.Guid})">
            <summary>Converts the value from <c>Guid?</c> to an equivalent <c>Guid</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToGuid(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Guid</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToGuid(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Guid</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToGuid(System.Type)">
            <summary>Converts the value from <c>Type</c> to an equivalent <c>Guid</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToGuid(System.Data.SqlTypes.SqlBinary)">
            <summary>Converts the value from <c>SqlBinary</c> to an equivalent <c>Guid</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToGuid(System.Data.SqlTypes.SqlGuid)">
            <summary>Converts the value from <c>SqlGuid</c> to an equivalent <c>Guid</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToGuid(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Guid</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToGuid(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Guid</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt16(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Int16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt32(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Int32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.DateTime)">
            <summary>Converts the value from <c>DateTime</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.DateTimeOffset)">
            <summary>Converts the value from <c>DateTimeOffset</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.TimeSpan)">
            <summary>Converts the value from <c>TimeSpan</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Nullable{System.DateTime})">
            <summary>Converts the value from <c>DateTime?</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Nullable{System.DateTimeOffset})">
            <summary>Converts the value from <c>DateTimeOffset?</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Nullable{System.TimeSpan})">
            <summary>Converts the value from <c>TimeSpan?</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Data.SqlTypes.SqlDateTime)">
            <summary>Converts the value from <c>SqlDateTime</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToInt64(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Int64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSByte(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>SByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSingle(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Single</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.DateTime)">
            <summary>Converts the value from <c>DateTime</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.DateTimeOffset)">
            <summary>Converts the value from <c>DateTimeOffset</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Guid)">
            <summary>Converts the value from <c>Guid</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.TimeSpan)">
            <summary>Converts the value from <c>TimeSpan</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Nullable{System.DateTime})">
            <summary>Converts the value from <c>DateTime?</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Nullable{System.DateTimeOffset})">
            <summary>Converts the value from <c>DateTimeOffset?</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Nullable{System.Guid})">
            <summary>Converts the value from <c>Guid?</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Nullable{System.TimeSpan})">
            <summary>Converts the value from <c>TimeSpan?</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Type)">
            <summary>Converts the value from <c>Type</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Data.SqlTypes.SqlChars)">
            <summary>Converts the value from <c>SqlChars</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Data.SqlTypes.SqlGuid)">
            <summary>Converts the value from <c>SqlGuid</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Data.SqlTypes.SqlXml)">
            <summary>Converts the value from <c>SqlXml</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Xml.XmlDocument)">
            <summary>Converts the value from <c>XmlDocument</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToString(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>String</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToTimeSpan(System.DateTime)">
            <summary>Converts the value from <c>DateTime</c> to an equivalent <c>TimeSpan</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToTimeSpan(System.DateTimeOffset)">
            <summary>Converts the value from <c>DateTimeOffset</c> to an equivalent <c>TimeSpan</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToTimeSpan(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>TimeSpan</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToTimeSpan(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>TimeSpan</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToTimeSpan(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>TimeSpan</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToTimeSpan(System.Nullable{System.DateTime})">
            <summary>Converts the value from <c>DateTime?</c> to an equivalent <c>TimeSpan</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToTimeSpan(System.Nullable{System.DateTimeOffset})">
            <summary>Converts the value from <c>DateTimeOffset?</c> to an equivalent <c>TimeSpan</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToTimeSpan(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>TimeSpan</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToTimeSpan(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>TimeSpan</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToTimeSpan(System.Nullable{System.TimeSpan})">
            <summary>Converts the value from <c>TimeSpan?</c> to an equivalent <c>TimeSpan</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToTimeSpan(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>TimeSpan</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToTimeSpan(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>TimeSpan</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToTimeSpan(System.Data.SqlTypes.SqlDateTime)">
            <summary>Converts the value from <c>SqlDateTime</c> to an equivalent <c>TimeSpan</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToTimeSpan(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>TimeSpan</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToTimeSpan(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>TimeSpan</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToTimeSpan(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>TimeSpan</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToTimeSpan(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>TimeSpan</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt16(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>UInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt32(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>UInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToUInt64(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>UInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableBoolean(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Boolean?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableByte(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Byte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableChar(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Char?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTime(System.DateTime)">
            <summary>Converts the value from <c>DateTime</c> to an equivalent <c>DateTime?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTime(System.DateTimeOffset)">
            <summary>Converts the value from <c>DateTimeOffset</c> to an equivalent <c>DateTime?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTime(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>DateTime?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTime(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>DateTime?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTime(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>DateTime?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTime(System.TimeSpan)">
            <summary>Converts the value from <c>TimeSpan</c> to an equivalent <c>DateTime?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTime(System.Nullable{System.DateTimeOffset})">
            <summary>Converts the value from <c>DateTimeOffset?</c> to an equivalent <c>DateTime?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTime(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>DateTime?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTime(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>DateTime?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTime(System.Nullable{System.TimeSpan})">
            <summary>Converts the value from <c>TimeSpan?</c> to an equivalent <c>DateTime?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTime(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>DateTime?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTime(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>DateTime?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTime(System.Data.SqlTypes.SqlDateTime)">
            <summary>Converts the value from <c>SqlDateTime</c> to an equivalent <c>DateTime?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTime(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>DateTime?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTime(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>DateTime?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTime(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>DateTime?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTime(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>DateTime?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTimeOffset(System.DateTime)">
            <summary>Converts the value from <c>DateTime</c> to an equivalent <c>DateTimeOffset?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTimeOffset(System.DateTimeOffset)">
            <summary>Converts the value from <c>DateTimeOffset</c> to an equivalent <c>DateTimeOffset?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTimeOffset(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>DateTimeOffset?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTimeOffset(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>DateTimeOffset?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTimeOffset(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>DateTimeOffset?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTimeOffset(System.TimeSpan)">
            <summary>Converts the value from <c>TimeSpan</c> to an equivalent <c>DateTimeOffset?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTimeOffset(System.Nullable{System.DateTime})">
            <summary>Converts the value from <c>DateTime?</c> to an equivalent <c>DateTimeOffset?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTimeOffset(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>DateTimeOffset?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTimeOffset(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>DateTimeOffset?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTimeOffset(System.Nullable{System.TimeSpan})">
            <summary>Converts the value from <c>TimeSpan?</c> to an equivalent <c>DateTimeOffset?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTimeOffset(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>DateTimeOffset?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTimeOffset(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>DateTimeOffset?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTimeOffset(System.Data.SqlTypes.SqlDateTime)">
            <summary>Converts the value from <c>SqlDateTime</c> to an equivalent <c>DateTimeOffset?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTimeOffset(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>DateTimeOffset?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTimeOffset(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>DateTimeOffset?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTimeOffset(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>DateTimeOffset?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDateTimeOffset(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>DateTimeOffset?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDecimal(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Decimal?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.DateTime)">
            <summary>Converts the value from <c>DateTime</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.DateTimeOffset)">
            <summary>Converts the value from <c>DateTimeOffset</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.TimeSpan)">
            <summary>Converts the value from <c>TimeSpan</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Nullable{System.DateTime})">
            <summary>Converts the value from <c>DateTime?</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Nullable{System.DateTimeOffset})">
            <summary>Converts the value from <c>DateTimeOffset?</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Nullable{System.TimeSpan})">
            <summary>Converts the value from <c>TimeSpan?</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Data.SqlTypes.SqlDateTime)">
            <summary>Converts the value from <c>SqlDateTime</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableDouble(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Double?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableGuid(System.Guid)">
            <summary>Converts the value from <c>Guid</c> to an equivalent <c>Guid?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableGuid(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Guid?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableGuid(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Guid?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableGuid(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Guid?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableGuid(System.Type)">
            <summary>Converts the value from <c>Type</c> to an equivalent <c>Guid?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableGuid(System.Data.SqlTypes.SqlBinary)">
            <summary>Converts the value from <c>SqlBinary</c> to an equivalent <c>Guid?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableGuid(System.Data.SqlTypes.SqlGuid)">
            <summary>Converts the value from <c>SqlGuid</c> to an equivalent <c>Guid?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableGuid(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Guid?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableGuid(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Guid?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt16(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Int16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt32(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Int32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.DateTime)">
            <summary>Converts the value from <c>DateTime</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.DateTimeOffset)">
            <summary>Converts the value from <c>DateTimeOffset</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.TimeSpan)">
            <summary>Converts the value from <c>TimeSpan</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Nullable{System.DateTime})">
            <summary>Converts the value from <c>DateTime?</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Nullable{System.DateTimeOffset})">
            <summary>Converts the value from <c>DateTimeOffset?</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Nullable{System.TimeSpan})">
            <summary>Converts the value from <c>TimeSpan?</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Data.SqlTypes.SqlDateTime)">
            <summary>Converts the value from <c>SqlDateTime</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableInt64(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Int64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSByte(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>SByte?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableSingle(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Single?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableTimeSpan(System.DateTime)">
            <summary>Converts the value from <c>DateTime</c> to an equivalent <c>TimeSpan?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableTimeSpan(System.DateTimeOffset)">
            <summary>Converts the value from <c>DateTimeOffset</c> to an equivalent <c>TimeSpan?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableTimeSpan(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>TimeSpan?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableTimeSpan(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>TimeSpan?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableTimeSpan(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>TimeSpan?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableTimeSpan(System.TimeSpan)">
            <summary>Converts the value from <c>TimeSpan</c> to an equivalent <c>TimeSpan?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableTimeSpan(System.Nullable{System.DateTime})">
            <summary>Converts the value from <c>DateTime?</c> to an equivalent <c>TimeSpan?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableTimeSpan(System.Nullable{System.DateTimeOffset})">
            <summary>Converts the value from <c>DateTimeOffset?</c> to an equivalent <c>TimeSpan?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableTimeSpan(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>TimeSpan?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableTimeSpan(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>TimeSpan?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableTimeSpan(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>TimeSpan?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableTimeSpan(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>TimeSpan?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableTimeSpan(System.Data.SqlTypes.SqlDateTime)">
            <summary>Converts the value from <c>SqlDateTime</c> to an equivalent <c>TimeSpan?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableTimeSpan(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>TimeSpan?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableTimeSpan(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>TimeSpan?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableTimeSpan(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>TimeSpan?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableTimeSpan(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>TimeSpan?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt16(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>UInt16?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt32(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>UInt32?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToNullableUInt64(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>UInt64?</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBinary(System.Guid)">
            <summary>Converts the value from <c>Guid</c> to an equivalent <c>SqlBinary</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBinary(System.Nullable{System.Guid})">
            <summary>Converts the value from <c>Guid?</c> to an equivalent <c>SqlBinary</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBinary(System.Data.SqlTypes.SqlBytes)">
            <summary>Converts the value from <c>SqlBytes</c> to an equivalent <c>SqlBinary</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBinary(System.Data.SqlTypes.SqlGuid)">
            <summary>Converts the value from <c>SqlGuid</c> to an equivalent <c>SqlBinary</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBinary(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>SqlBinary</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBinary(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>SqlBinary</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBinary(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>SqlBinary</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBoolean(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>SqlBoolean</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlByte(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>SqlByte</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.DateTime)">
            <summary>Converts the value from <c>DateTime</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.DateTimeOffset)">
            <summary>Converts the value from <c>DateTimeOffset</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Guid)">
            <summary>Converts the value from <c>Guid</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.TimeSpan)">
            <summary>Converts the value from <c>TimeSpan</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Nullable{System.DateTime})">
            <summary>Converts the value from <c>DateTime?</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Nullable{System.DateTimeOffset})">
            <summary>Converts the value from <c>DateTimeOffset?</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Nullable{System.Guid})">
            <summary>Converts the value from <c>Guid?</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Nullable{System.TimeSpan})">
            <summary>Converts the value from <c>TimeSpan?</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Data.SqlTypes.SqlBinary)">
            <summary>Converts the value from <c>SqlBinary</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Data.SqlTypes.SqlGuid)">
            <summary>Converts the value from <c>SqlGuid</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.IO.Stream)">
            <summary>Converts the value from <c>Stream</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlBytes(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>SqlBytes</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDateTime(System.DateTime)">
            <summary>Converts the value from <c>DateTime</c> to an equivalent <c>SqlDateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDateTime(System.DateTimeOffset)">
            <summary>Converts the value from <c>DateTimeOffset</c> to an equivalent <c>SqlDateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDateTime(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>SqlDateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDateTime(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>SqlDateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDateTime(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>SqlDateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDateTime(System.TimeSpan)">
            <summary>Converts the value from <c>TimeSpan</c> to an equivalent <c>SqlDateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDateTime(System.Nullable{System.DateTime})">
            <summary>Converts the value from <c>DateTime?</c> to an equivalent <c>SqlDateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDateTime(System.Nullable{System.DateTimeOffset})">
            <summary>Converts the value from <c>DateTimeOffset?</c> to an equivalent <c>SqlDateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDateTime(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>SqlDateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDateTime(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>SqlDateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDateTime(System.Nullable{System.TimeSpan})">
            <summary>Converts the value from <c>TimeSpan?</c> to an equivalent <c>SqlDateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDateTime(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>SqlDateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDateTime(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>SqlDateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDateTime(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>SqlDateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDateTime(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>SqlDateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDateTime(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>SqlDateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDateTime(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>SqlDateTime</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDecimal(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>SqlDecimal</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.DateTime)">
            <summary>Converts the value from <c>DateTime</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.DateTimeOffset)">
            <summary>Converts the value from <c>DateTimeOffset</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.TimeSpan)">
            <summary>Converts the value from <c>TimeSpan</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Nullable{System.DateTime})">
            <summary>Converts the value from <c>DateTime?</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Nullable{System.DateTimeOffset})">
            <summary>Converts the value from <c>DateTimeOffset?</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Nullable{System.TimeSpan})">
            <summary>Converts the value from <c>TimeSpan?</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Data.SqlTypes.SqlDateTime)">
            <summary>Converts the value from <c>SqlDateTime</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlDouble(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>SqlDouble</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlGuid(System.Guid)">
            <summary>Converts the value from <c>Guid</c> to an equivalent <c>SqlGuid</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlGuid(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>SqlGuid</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlGuid(System.Nullable{System.Guid})">
            <summary>Converts the value from <c>Guid?</c> to an equivalent <c>SqlGuid</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlGuid(System.Data.SqlTypes.SqlBinary)">
            <summary>Converts the value from <c>SqlBinary</c> to an equivalent <c>SqlGuid</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlGuid(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>SqlGuid</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlGuid(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>SqlGuid</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlGuid(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>SqlGuid</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlGuid(System.Type)">
            <summary>Converts the value from <c>Type</c> to an equivalent <c>SqlGuid</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlGuid(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>SqlGuid</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt16(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>SqlInt16</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt32(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>SqlInt32</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.DateTime)">
            <summary>Converts the value from <c>DateTime</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.DateTimeOffset)">
            <summary>Converts the value from <c>DateTimeOffset</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.TimeSpan)">
            <summary>Converts the value from <c>TimeSpan</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Nullable{System.DateTime})">
            <summary>Converts the value from <c>DateTime?</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Nullable{System.DateTimeOffset})">
            <summary>Converts the value from <c>DateTimeOffset?</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Nullable{System.TimeSpan})">
            <summary>Converts the value from <c>TimeSpan?</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Data.SqlTypes.SqlDateTime)">
            <summary>Converts the value from <c>SqlDateTime</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlInt64(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>SqlInt64</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlMoney(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>SqlMoney</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlSingle(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>SqlSingle</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.DateTime)">
            <summary>Converts the value from <c>DateTime</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.DateTimeOffset)">
            <summary>Converts the value from <c>DateTimeOffset</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Decimal)">
            <summary>Converts the value from <c>Decimal</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Guid)">
            <summary>Converts the value from <c>Guid</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.TimeSpan)">
            <summary>Converts the value from <c>TimeSpan</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Nullable{System.DateTime})">
            <summary>Converts the value from <c>DateTime?</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Nullable{System.DateTimeOffset})">
            <summary>Converts the value from <c>DateTimeOffset?</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Nullable{System.Guid})">
            <summary>Converts the value from <c>Guid?</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Nullable{System.TimeSpan})">
            <summary>Converts the value from <c>TimeSpan?</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Data.SqlTypes.SqlChars)">
            <summary>Converts the value from <c>SqlChars</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Data.SqlTypes.SqlGuid)">
            <summary>Converts the value from <c>SqlGuid</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Data.SqlTypes.SqlXml)">
            <summary>Converts the value from <c>SqlXml</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Type)">
            <summary>Converts the value from <c>Type</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Xml.XmlDocument)">
            <summary>Converts the value from <c>XmlDocument</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlString(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>SqlString</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlXml(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>SqlXml</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlXml(System.Data.SqlTypes.SqlBinary)">
            <summary>Converts the value from <c>SqlBinary</c> to an equivalent <c>SqlXml</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlXml(System.Data.SqlTypes.SqlBytes)">
            <summary>Converts the value from <c>SqlBytes</c> to an equivalent <c>SqlXml</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlXml(System.Data.SqlTypes.SqlChars)">
            <summary>Converts the value from <c>SqlChars</c> to an equivalent <c>SqlXml</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlXml(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>SqlXml</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlXml(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>SqlXml</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlXml(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>SqlXml</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlXml(System.Char[])">
            <summary>Converts the value from <c>Char[]</c> to an equivalent <c>SqlXml</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlXml(System.IO.Stream)">
            <summary>Converts the value from <c>Stream</c> to an equivalent <c>SqlXml</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlXml(System.Xml.XmlDocument)">
            <summary>Converts the value from <c>XmlDocument</c> to an equivalent <c>SqlXml</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlXml(System.Xml.XmlReader)">
            <summary>Converts the value from <c>XmlReader</c> to an equivalent <c>SqlXml</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToSqlXml(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>SqlXml</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Boolean)">
            <summary>Converts the value from <c>Boolean</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Byte)">
            <summary>Converts the value from <c>Byte</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Char)">
            <summary>Converts the value from <c>Char</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.DateTime)">
            <summary>Converts the value from <c>DateTime</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.DateTimeOffset)">
            <summary>Converts the value from <c>DateTimeOffset</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Double)">
            <summary>Converts the value from <c>Double</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Guid)">
            <summary>Converts the value from <c>Guid</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Int16)">
            <summary>Converts the value from <c>Int16</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Int32)">
            <summary>Converts the value from <c>Int32</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Int64)">
            <summary>Converts the value from <c>Int64</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.SByte)">
            <summary>Converts the value from <c>SByte</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Single)">
            <summary>Converts the value from <c>Single</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.TimeSpan)">
            <summary>Converts the value from <c>TimeSpan</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.UInt16)">
            <summary>Converts the value from <c>UInt16</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.UInt32)">
            <summary>Converts the value from <c>UInt32</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.UInt64)">
            <summary>Converts the value from <c>UInt64</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Nullable{System.Boolean})">
            <summary>Converts the value from <c>Boolean?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Nullable{System.Byte})">
            <summary>Converts the value from <c>Byte?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Nullable{System.Char})">
            <summary>Converts the value from <c>Char?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Nullable{System.DateTime})">
            <summary>Converts the value from <c>DateTime?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Nullable{System.DateTimeOffset})">
            <summary>Converts the value from <c>DateTimeOffset?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Nullable{System.Decimal})">
            <summary>Converts the value from <c>Decimal?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Nullable{System.Double})">
            <summary>Converts the value from <c>Double?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Nullable{System.Guid})">
            <summary>Converts the value from <c>Guid?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Nullable{System.Int16})">
            <summary>Converts the value from <c>Int16?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Nullable{System.Int32})">
            <summary>Converts the value from <c>Int32?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Nullable{System.Int64})">
            <summary>Converts the value from <c>Int64?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Nullable{System.SByte})">
            <summary>Converts the value from <c>SByte?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Nullable{System.Single})">
            <summary>Converts the value from <c>Single?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Nullable{System.TimeSpan})">
            <summary>Converts the value from <c>TimeSpan?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Nullable{System.UInt16})">
            <summary>Converts the value from <c>UInt16?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Nullable{System.UInt32})">
            <summary>Converts the value from <c>UInt32?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Nullable{System.UInt64})">
            <summary>Converts the value from <c>UInt64?</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Data.SqlTypes.SqlBinary)">
            <summary>Converts the value from <c>SqlBinary</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Data.SqlTypes.SqlBoolean)">
            <summary>Converts the value from <c>SqlBoolean</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Data.SqlTypes.SqlByte)">
            <summary>Converts the value from <c>SqlByte</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Data.SqlTypes.SqlBytes)">
            <summary>Converts the value from <c>SqlBytes</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Data.SqlTypes.SqlDecimal)">
            <summary>Converts the value from <c>SqlDecimal</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Data.SqlTypes.SqlDouble)">
            <summary>Converts the value from <c>SqlDouble</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Data.SqlTypes.SqlGuid)">
            <summary>Converts the value from <c>SqlGuid</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Data.SqlTypes.SqlInt16)">
            <summary>Converts the value from <c>SqlInt16</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Data.SqlTypes.SqlInt32)">
            <summary>Converts the value from <c>SqlInt32</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Data.SqlTypes.SqlInt64)">
            <summary>Converts the value from <c>SqlInt64</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Data.SqlTypes.SqlMoney)">
            <summary>Converts the value from <c>SqlMoney</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Data.SqlTypes.SqlSingle)">
            <summary>Converts the value from <c>SqlSingle</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToByteArray(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Byte[]</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToStream(System.Guid)">
            <summary>Converts the value from <c>Guid</c> to an equivalent <c>Stream</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToStream(System.Nullable{System.Guid})">
            <summary>Converts the value from <c>Guid?</c> to an equivalent <c>Stream</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToStream(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Stream</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToStream(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Stream</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToStream(System.Data.SqlTypes.SqlBinary)">
            <summary>Converts the value from <c>SqlBinary</c> to an equivalent <c>Stream</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToStream(System.Data.SqlTypes.SqlBytes)">
            <summary>Converts the value from <c>SqlBytes</c> to an equivalent <c>Stream</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToStream(System.Data.SqlTypes.SqlGuid)">
            <summary>Converts the value from <c>SqlGuid</c> to an equivalent <c>Stream</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToStream(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Stream</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToType(System.Guid)">
            <summary>Converts the value from <c>Guid</c> to an equivalent <c>Type</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToType(System.String)">
            <summary>Converts the value from <c>String</c> to an equivalent <c>Type</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToType(System.Nullable{System.Guid})">
            <summary>Converts the value from <c>Guid?</c> to an equivalent <c>Type</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToType(System.Data.Linq.Binary)">
            <summary>Converts the value from <c>Binary</c> to an equivalent <c>Type</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToType(System.Byte[])">
            <summary>Converts the value from <c>Byte[]</c> to an equivalent <c>Type</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToType(System.Char[])">
            <summary>Converts the value from <c>Char[]</c> to an equivalent <c>Type</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToType(System.Data.SqlTypes.SqlChars)">
            <summary>Converts the value from <c>SqlChars</c> to an equivalent <c>Type</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToType(System.Data.SqlTypes.SqlGuid)">
            <summary>Converts the value from <c>SqlGuid</c> to an equivalent <c>Type</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToType(System.Data.SqlTypes.SqlString)">
            <summary>Converts the value from <c>SqlString</c> to an equivalent <c>Type</c> value.</summary>
        </member>
        <member name="M:BLToolkit.Common.Convert.ToType(System.Object)">
            <summary>Converts the value from <c>Object</c> to an equivalent <c>Type</c> value.</summary>
        </member>
        <member name="T:BLToolkit.Data.Linq.LinqException">
            <summary>
            Defines the base class for the namespace exceptions.
            </summary>
            <remarks>
            This class is the base class for exceptions that may occur during
            execution of the namespace members.
            </remarks>
        </member>
        <member name="M:BLToolkit.Data.Linq.LinqException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Data.Linq.LinqException"/> class.
            </summary>
            <remarks>
            This constructor initializes the <see cref="P:System.Exception.Message"/>
            property of the new instance
            to a system-supplied message that describes the error,
            such as "BLToolkit Linq error has occurred."
            </remarks>
        </member>
        <member name="M:BLToolkit.Data.Linq.LinqException.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Data.Linq.LinqException"/> class
            with the specified error message.
            </summary>
            <param name="message">The message to display to the client when the exception is thrown.</param>
            <param name="args">An System.Object array containing zero or more objects to format.</param>
            <seealso cref="P:System.Exception.Message"/>
        </member>
        <member name="M:BLToolkit.Data.Linq.LinqException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Data.Linq.LinqException"/> class
            with the specified error message and InnerException property.
            </summary>
            <param name="message">The message to display to the client when the exception is thrown.</param>
            <param name="innerException">The InnerException, if any, that threw the current exception.</param>
            <seealso cref="P:System.Exception.Message"/>
            <seealso cref="P:System.Exception.InnerException"/>
        </member>
        <member name="M:BLToolkit.Data.Linq.LinqException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Data.Linq.LinqException"/> class
            with the InnerException property.
            </summary>
            <param name="innerException">The InnerException, if any, that threw the current exception.</param>
            <seealso cref="P:System.Exception.InnerException"/>
        </member>
        <member name="M:BLToolkit.Data.Linq.LinqException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Data.Linq.LinqException"/> class
            with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
            <remarks>
            This constructor is called during deserialization to
            reconstitute the exception object transmitted over a stream.
            </remarks>
        </member>
        <member name="T:BLToolkit.Data.DataProvider.OdbcDataProvider">
            <summary>
            Implements access to the Data Provider for ODBC.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
        </member>
        <member name="M:BLToolkit.Data.DataProvider.OdbcDataProvider.CreateConnectionObject">
            <summary>
            Creates the database connection object.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <returns>The database connection object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DataProvider.OdbcDataProvider.CreateDataAdapterObject">
            <summary>
            Creates the data adapter object.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <returns>A data adapter object.</returns>
        </member>
        <member name="M:BLToolkit.Data.DataProvider.OdbcDataProvider.DeriveParameters(System.Data.IDbCommand)">
            <summary>
            Populates the specified <see cref="T:System.Data.IDbCommand"/> object's Parameters collection with 
            parameter information for the stored procedure specified in the <see cref="T:System.Data.IDbCommand"/>.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <param name="command">The <see cref="T:System.Data.IDbCommand"/> referencing the stored procedure for which the parameter
            information is to be derived. The derived parameters will be populated into 
            the Parameters of this command.</param>
        </member>
        <member name="P:BLToolkit.Data.DataProvider.OdbcDataProvider.ConnectionType">
            <summary>
            Returns connection type.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataManager Method</seealso>
            <value>An instance of the <see cref="T:System.Type"/> class.</value>
        </member>
        <member name="P:BLToolkit.Data.DataProvider.OdbcDataProvider.Name">
            <summary>
            Returns the data provider name.
            </summary>
            <remarks>
            See the <see cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)"/> method to find an example.
            </remarks>
            <seealso cref="M:BLToolkit.Data.DbManager.AddDataProvider(BLToolkit.Data.DataProvider.DataProviderBase)">AddDataProvider Method</seealso>
            <value>Data provider name.</value>
        </member>
        <member name="P:BLToolkit.Common.Configuration.CheckNullReturnIfNull">
            <summary>
            Specifies what value should be returned by <c>TypeAccessor.CheckNull</c>
            if <see cref="T:BLToolkit.Reflection.IsNullHandler"/> was specified and interpreted current property 
            value as null. Default is: <see cref="T:System.DBNull"/>.
            </summary>
        </member>
        <member name="P:BLToolkit.Common.Configuration.TrimOnMapping">
            <summary>
            Controls global trimming behaviour of mapper. Specifies whether trailing spaces
            should be trimmed when mapping from one entity to another. Default is: false. 
            To specify trimming behaviour other than global, please user <see cref="T:BLToolkit.Mapping.TrimmableAttribute"/>.
            </summary>
        </member>
        <member name="P:BLToolkit.Common.Configuration.TrimDictionaryKey">
            <summary>
            Controls global trimming behaviour of mapper for dictionary keys. Specifies whether trailing spaces
            should be trimmed when adding keys to dictionaries. Default is: true. 
            </summary>
        </member>
        <member name="P:BLToolkit.Common.Configuration.NotifyOnEqualSet">
            <summary>
            Specifies default behavior for PropertyChange generation. If set to true, <see cref="M:BLToolkit.EditableObjects.EditableObject.OnPropertyChanged(System.String)"/>
            is invoked even when current value is same as new one. If set to false,  <see cref="M:BLToolkit.EditableObjects.EditableObject.OnPropertyChanged(System.String)"/> 
            is invoked only when new value is being assigned. To specify notification behaviour other than default, please see 
            <see cref="T:BLToolkit.TypeBuilder.PropertyChangedAttribute"/>
            </summary>
        </member>
        <member name="P:BLToolkit.Common.Configuration.FilterOutBaseEqualAttributes">
            <summary>
            Controls whether attributes specified on base types should be always added to list of attributes
            when scanning hierarchy tree or they should be compared to attributes found on derived classes
            and added only when not present already. Default value: false;
            WARNING: setting this flag to "true" can significantly affect initial object generation/access performance
            use only when side effects are noticed with attribute being present on derived and base classes. 
            For builder attributes use provided attribute compatibility mechanism.
            </summary>
        </member>
        <member name="P:BLToolkit.Common.Configuration.OpenNewConnectionToDiscoverParameters">
            <summary>
            Controls whether attributes specified on base types should be always added to list of attributes
            when scanning hierarchy tree or they should be compared to attributes found on derived classes
            and added only when not present already. Default value: false;
            WARNING: setting this flag to "true" can significantly affect initial object generation/access performance
            use only when side effects are noticed with attribute being present on derived and base classes. 
            For builder attributes use provided attribute compatibility mechanism.
            </summary>
        </member>
        <member name="T:BLToolkit.Aspects.AsyncAttribute">
            <summary>
            http://www.bltoolkit.net/Doc/Aspects/index.htm
            </summary>
        </member>
        <member name="P:BLToolkit.Configuration.DataProviderElement.TypeName">
            <summary>
            Gets or sets an assembly qualified type name of this data provider.
            </summary>
        </member>
        <member name="P:BLToolkit.Configuration.DataProviderElement.Name">
            <summary>
            Gets or sets a name of this data provider.
            If not set, <see cref="P:BLToolkit.Data.DataProvider.DataProviderBase.Name"/> is used.
            </summary>
        </member>
        <member name="P:BLToolkit.Configuration.DataProviderElement.Default">
            <summary>
            Gets a value indicating whether the provider is default.
            </summary>
        </member>
        <member name="T:BLToolkit.Reflection.Emit.TypeBuilderHelper">
            <summary>
            A wrapper around the <see cref="P:BLToolkit.Reflection.Emit.TypeBuilderHelper.TypeBuilder"/> class.
            </summary>
            <example>
<code lang="C#">
using System;

using NUnit.Framework;

using BLToolkit.Reflection;
using BLToolkit.Reflection.Emit;

namespace Examples.Reflection.Emit
{
	[TestFixture]
	public class HelloWorld
	{
		public interface IHello
		{
			void SayHello(string toWhom);
		}

		[Test]
		public void Test()
		{
			EmitHelper emit = new AssemblyBuilderHelper("HelloWorld.dll")
				.DefineType  ("Hello", typeof(object), typeof(IHello))
				.DefineMethod(typeof(IHello).GetMethod("SayHello"))
				.Emitter;

			/*[a]*/emit/*[/a]*/
				// string.Format("Hello, {0}!", toWhom)
				//
				./*[a]*/ldstr/*[/a]*/   ("Hello, {0}!")
				./*[a]*/ldarg_1/*[/a]*/
				./*[a]*/call/*[/a]*/    (typeof(string), "Format", typeof(string), typeof(object))

				// Console.WriteLine("Hello, World!");
				//
				./*[a]*/call/*[/a]*/    (typeof(Console), "WriteLine", typeof(string))
				./*[a]*/ret/*[/a]*/()
				;

			Type type = emit.Method.Type.Create();

			IHello hello = (IHello)TypeAccessor.CreateInstance(type);

			hello.SayHello("World");
		}
	}
}
</code>
</example>
            <example>
<code lang="VB">
Imports System
Imports NUnit.Framework

Imports BLToolkit.Reflection
Imports BLToolkit.Reflection.Emit

Namespace Examples.Reflection.Emit

    &lt;TestFixture()&gt; _
    Public Class HelloWorld

        Public Interface IHello
            Sub SayHello(ByVal toWhom As String)
        End Interface

        &lt;Test()&gt; _
        Sub Test()
            Dim assemblyHelper As AssemblyBuilderHelper = New AssemblyBuilderHelper("HelloWorld.dll")
            Dim typeHelper As TypeBuilderHelper = assemblyHelper.DefineType("Hello", GetType(Object), GetType(IHello))
            Dim methodHelper As MethodBuilderHelper = typeHelper.DefineMethod(GetType(IHello).GetMethod("SayHello"))
            Dim emit As EmitHelper = methodHelper.Emitter

            ' string.Format("Hello, {0} World!", toWhom)
            '
            emit _
            .ldstr("Hello, {0} World!") _
            .ldarg_1 _
            .call(GetType(String), "Format", GetType(String), GetType(Object))

            ' Console.WriteLine("Hello, World!");
            '
            emit _
            .call(GetType(Console), "WriteLine", GetType(String)) _
            .ret()

            Dim type As Type = typeHelper.Create()

            Dim hello As IHello = TypeAccessor.CreateInstance(type)

            hello.SayHello("VB")
        End Sub

    End Class

End Namespace
</code>
</example>
            <seealso cref="T:System.Reflection.Emit.TypeBuilder">TypeBuilder Class</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.#ctor(BLToolkit.Reflection.Emit.AssemblyBuilderHelper,System.Reflection.Emit.TypeBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/> class
            with the specified parameters.
            </summary>
            <param name="assemblyBuilder">Associated <see cref="T:BLToolkit.Reflection.Emit.AssemblyBuilderHelper"/>.</param>
            <param name="typeBuilder">A <see cref="P:BLToolkit.Reflection.Emit.TypeBuilderHelper.TypeBuilder"/></param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.op_Implicit(BLToolkit.Reflection.Emit.TypeBuilderHelper)~System.Reflection.Emit.TypeBuilder">
            <summary>
            Converts the supplied <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/> to a <see cref="P:BLToolkit.Reflection.Emit.TypeBuilderHelper.TypeBuilder"/>.
            </summary>
            <param name="typeBuilder">The <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/>.</param>
            <returns>A <see cref="P:BLToolkit.Reflection.Emit.TypeBuilderHelper.TypeBuilder"/>.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])">
            <summary>
            Adds a new method to the class, with the given name and method signature.
            </summary>
            <param name="name">The name of the method. name cannot contain embedded nulls. </param>
            <param name="attributes">The attributes of the method. </param>
            <param name="returnType">The return type of the method.</param>
            <param name="parameterTypes">The types of the parameters of the method.</param>
            <returns>The defined method.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])">
            <summary>
            Adds a new method to the class, with the given name and method signature.
            </summary>
            <param name="name">The name of the method. name cannot contain embedded nulls. </param>
            <param name="attributes">The attributes of the method. </param>
            <param name="callingConvention">The <see cref="T:System.Reflection.CallingConventions">calling convention</see> of the method.</param>
            <param name="returnType">The return type of the method.</param>
            <param name="parameterTypes">The types of the parameters of the method.</param>
            <returns>The defined method.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Type)">
            <summary>
            Adds a new method to the class, with the given name and method signature.
            </summary>
            <param name="name">The name of the method. name cannot contain embedded nulls. </param>
            <param name="attributes">The attributes of the method. </param>
            <param name="returnType">The return type of the method.</param>
            <returns>The defined method.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.DefineMethod(System.String,System.Reflection.MethodAttributes)">
            <summary>
            Adds a new method to the class, with the given name and method signature.
            </summary>
            <param name="name">The name of the method. name cannot contain embedded nulls. </param>
            <param name="attributes">The attributes of the method. </param>
            <returns>The defined method.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions)">
            <summary>
            Adds a new method to the class, with the given name and method signature.
            </summary>
            <param name="name">The name of the method. name cannot contain embedded nulls. </param>
            <param name="attributes">The attributes of the method. </param>
            <returns>The defined method.</returns>
            <param name="callingConvention">The calling convention of the method.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.DefineGenericMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type,System.Type[])">
            <summary>
            Adds a new method to the class, with the given name and method signature.
            </summary>
            <param name="name">The name of the method. name cannot contain embedded nulls. </param>
            <param name="attributes">The attributes of the method. </param>
            <param name="callingConvention">The <see cref="T:System.Reflection.CallingConventions">calling convention</see> of the method.</param>
            <param name="genericArguments">Generic arguments of the method.</param>
            <param name="returnType">The return type of the method.</param>
            <param name="parameterTypes">The types of the parameters of the method.</param>
            <returns>The defined generic method.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.DefineMethod(System.String,System.Reflection.MethodInfo,System.Reflection.MethodAttributes)">
            <summary>
            Adds a new method to the class, with the given name and method signature.
            </summary>
            <param name="name">The name of the method. name cannot contain embedded nulls. </param>
            <param name="methodInfoDeclaration">The method whose declaration is to be used.</param>
            <param name="attributes">The attributes of the method. </param>
            <returns>The defined method.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.DefineMethod(System.String,System.Reflection.MethodInfo)">
            <summary>
            Adds a new method to the class, with the given name and method signature.
            </summary>
            <param name="name">The name of the method. name cannot contain embedded nulls. </param>
            <param name="methodInfoDeclaration">The method whose declaration is to be used.</param>
            <returns>The defined method.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.DefineMethod(System.Reflection.MethodInfo)">
            <summary>
            Adds a new private method to the class.
            </summary>
            <param name="methodInfoDeclaration">The method whose declaration is to be used.</param>
            <returns>The defined method.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.Create">
            <summary>
            Creates a Type object for the class.
            </summary>
            <returns>Returns the new Type object for this class.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.SetCustomAttribute(System.Type)">
            <summary>
            Sets a custom attribute using a custom attribute type.
            </summary>
            <param name="attributeType">Attribute type.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.SetCustomAttribute(System.Type,System.Reflection.PropertyInfo[],System.Object[])">
            <summary>
            Sets a custom attribute using a custom attribute type
            and named properties.
            </summary>
            <param name="attributeType">Attribute type.</param>
            <param name="properties">Named properties of the custom attribute.</param>
            <param name="propertyValues">Values for the named properties of the custom attribute.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.SetCustomAttribute(System.Type,System.String,System.Object)">
            <summary>
            Sets a custom attribute using a custom attribute type
            and named property.
            </summary>
            <param name="attributeType">Attribute type.</param>
            <param name="propertyName">A named property of the custom attribute.</param>
            <param name="propertyValue">Value for the named property of the custom attribute.</param>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.DefineField(System.String,System.Type,System.Reflection.FieldAttributes)">
            <summary>
            Adds a new field to the class, with the given name, attributes and field type.
            </summary>
            <param name="fieldName">The name of the field. <paramref name="fieldName"/> cannot contain embedded nulls.</param>
            <param name="type">The type of the field.</param>
            <param name="attributes">The attributes of the field.</param>
            <returns>The defined field.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.DefinePublicConstructor(System.Type[])">
            <summary>
            Adds a new public constructor to the class, with the given parameters.
            </summary>
            <param name="parameterTypes">The types of the parameters of the method.</param>
            <returns>The defined constructor.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[])">
            <summary>
            Adds a new constructor to the class, with the given attributes and parameters.
            </summary>
            <param name="attributes">The attributes of the field.</param>
            <param name="callingConvention">The <see cref="T:System.Reflection.CallingConventions">calling convention</see> of the method.</param>
            <param name="parameterTypes">The types of the parameters of the method.</param>
            <returns>The defined constructor.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.DefineNestedType(System.String)">
            <summary>
            Defines a nested type given its name..
            </summary>
            <param name="name">The short name of the type.</param>
            <returns>Returns the created <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/>.</returns>
            <seealso cref="M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String)">
            TypeBuilder.DefineNestedType Method</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.DefineNestedType(System.String,System.Type)">
            <summary>
            Defines a public nested type given its name and the type that it extends.
            </summary>
            <param name="name">The short name of the type.</param>
            <param name="parent">The type that the nested type extends.</param>
            <returns>Returns the created <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/>.</returns>
            <seealso cref="M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type)">
            TypeBuilder.DefineNestedType Method</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type)">
            <summary>
            Defines a nested type given its name, attributes, and the type that it extends.
            </summary>
            <param name="name">The short name of the type.</param>
            <param name="attributes">The attributes of the type.</param>
            <param name="parent">The type that the nested type extends.</param>
            <returns>Returns the created <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/>.</returns>
            <seealso cref="M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type)">
            TypeBuilder.DefineNestedType Method</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.DefineNestedType(System.String,System.Type,System.Type[])">
            <summary>
            Defines a public nested type given its name, the type that it extends, and the interfaces that it implements.
            </summary>
            <param name="name">The short name of the type.</param>
            <param name="parent">The type that the nested type extends.</param>
            <param name="interfaces">The interfaces that the nested type implements.</param>
            <returns>Returns the created <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/>.</returns>
            <seealso cref="M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])">
            TypeBuilder.DefineNestedType Method</seealso>
        </member>
        <member name="M:BLToolkit.Reflection.Emit.TypeBuilderHelper.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])">
            <summary>
            Defines a nested type given its name, attributes, the type that it extends, and the interfaces that it implements.
            </summary>
            <param name="name">The short name of the type.</param>
            <param name="attributes">The attributes of the type.</param>
            <param name="parent">The type that the nested type extends.</param>
            <param name="interfaces">The interfaces that the nested type implements.</param>
            <returns>Returns the created <see cref="T:BLToolkit.Reflection.Emit.TypeBuilderHelper"/>.</returns>
            <seealso cref="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])">ModuleBuilder.DefineType Method</seealso>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.TypeBuilderHelper.Assembly">
            <summary>
            Gets associated <see cref="T:BLToolkit.Reflection.Emit.AssemblyBuilderHelper"/>.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.TypeBuilderHelper.TypeBuilder">
            <summary>
            Gets <see cref="T:System.Reflection.Emit.TypeBuilder"/>.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.TypeBuilderHelper.OverriddenMethods">
            <summary>
            Retrieves the map of base type methods overridden by this type.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.TypeBuilderHelper.TypeInitializer">
            <summary>
            Gets the initializer for this type.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.TypeBuilderHelper.IsTypeInitializerDefined">
            <summary>
            Returns true if the initializer for this type has a body.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.TypeBuilderHelper.DefaultConstructor">
            <summary>
            Gets the default constructor for this type.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.TypeBuilderHelper.IsDefaultConstructorDefined">
            <summary>
            Returns true if the default constructor for this type has a body.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.TypeBuilderHelper.InitConstructor">
            <summary>
            Gets the init context constructor for this type.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.Emit.TypeBuilderHelper.IsInitConstructorDefined">
            <summary>
            Returns true if a constructor with parameter of <see cref="T:BLToolkit.Reflection.InitContext"/> for this type has a body.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.StringFormatMethodAttribute">
            <summary>
            Indicates that marked method builds string by format pattern and (optional) arguments. 
            Parameter, which contains format string, should be given in constructor.
            The format string should be in <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])"/> -like form
            </summary>
        </member>
        <member name="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
            <summary>
            Initializes new instance of StringFormatMethodAttribute
            </summary>
            <param name="formatParameterName">Specifies which parameter of an annotated method should be treated as format-string</param>
        </member>
        <member name="P:JetBrains.Annotations.StringFormatMethodAttribute.FormatParameterName">
            <summary>
            Gets format parameter name
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.InvokerParameterNameAttribute">
            <summary>
            Indicates that the function argument should be string literal and match one  of the parameters of the caller function.
            For example, <see cref="T:System.ArgumentNullException"/> has such parameter.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AssertionMethodAttribute">
            <summary>
            Indicates that the marked method is assertion method, i.e. it halts control flow if one of the conditions is satisfied. 
            To set the condition, mark one of the parameters with <see cref="T:JetBrains.Annotations.AssertionConditionAttribute"/> attribute
            </summary>
            <seealso cref="T:JetBrains.Annotations.AssertionConditionAttribute"/>
        </member>
        <member name="T:JetBrains.Annotations.AssertionConditionAttribute">
            <summary>
            Indicates the condition parameter of the assertion method. 
            The method itself should be marked by <see cref="T:JetBrains.Annotations.AssertionMethodAttribute"/> attribute.
            The mandatory argument of the attribute is the assertion type.
            </summary>
            <seealso cref="T:JetBrains.Annotations.AssertionConditionType"/>
        </member>
        <member name="M:JetBrains.Annotations.AssertionConditionAttribute.#ctor(JetBrains.Annotations.AssertionConditionType)">
            <summary>
            Initializes new instance of AssertionConditionAttribute
            </summary>
            <param name="conditionType">Specifies condition type</param>
        </member>
        <member name="P:JetBrains.Annotations.AssertionConditionAttribute.ConditionType">
            <summary>
            Gets condition type
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AssertionConditionType">
            <summary>
            Specifies assertion type. If the assertion method argument satisifes the condition, then the execution continues. 
            Otherwise, execution is assumed to be halted
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.AssertionConditionType.IS_TRUE">
            <summary>
            Indicates that the marked parameter should be evaluated to true
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.AssertionConditionType.IS_FALSE">
            <summary>
            Indicates that the marked parameter should be evaluated to false
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.AssertionConditionType.IS_NULL">
            <summary>
            Indicates that the marked parameter should be evaluated to null value
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.AssertionConditionType.IS_NOT_NULL">
            <summary>
            Indicates that the marked parameter should be evaluated to not null value
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.TerminatesProgramAttribute">
            <summary>
            Indicates that the marked method unconditionally terminates control flow execution.
            For example, it could unconditionally throw exception
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.CanBeNullAttribute">
            <summary>
            Indicates that the value of marked element could be <c>null</c> sometimes, so the check for <c>null</c> is necessary before its usage
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.NotNullAttribute">
            <summary>
            Indicates that the value of marked element could never be <c>null</c>
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.CannotApplyEqualityOperatorAttribute">
            <summary>
            Indicates that the value of marked type (or its derivatives) cannot be compared using '==' or '!=' operators.
            There is only exception to compare with <c>null</c>, it is permitted
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.BaseTypeRequiredAttribute">
            <summary>
            When applied to target attribute, specifies a requirement for any type which is marked with 
            target attribute to implement or inherit specific type or types
            </summary>
            <example>
            <code>
            [BaseTypeRequired(typeof(IComponent)] // Specify requirement
            public class ComponentAttribute : Attribute 
            {}
            
            [Component] // ComponentAttribute requires implementing IComponent interface
            public class MyComponent : IComponent
            {}
            </code>
            </example>
        </member>
        <member name="M:JetBrains.Annotations.BaseTypeRequiredAttribute.#ctor(System.Type)">
            <summary>
            Initializes new instance of BaseTypeRequiredAttribute
            </summary>
            <param name="baseType">Specifies which types are required</param>
        </member>
        <member name="M:JetBrains.Annotations.BaseTypeRequiredAttribute.#ctor(System.Type[])">
            <summary>
            Initializes new instance of BaseTypeRequiredAttribute
            </summary>
            <param name="baseTypes">Specifies which types are required</param>
        </member>
        <member name="P:JetBrains.Annotations.BaseTypeRequiredAttribute.BaseTypes">
            <summary>
            Gets enumerations of specified base types
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.UsedImplicitlyAttribute">
            <summary>
            Indicates that the marked symbol is used implicitly (e.g. via reflection, in external library),
            so this symbol will not be marked as unused (as well as by other usage inspections)
            </summary>
        </member>
        <member name="M:JetBrains.Annotations.UsedImplicitlyAttribute.#ctor">
            <summary>
            Initializes new instance of UsedImplicitlyAttribute
            </summary>
        </member>
        <member name="M:JetBrains.Annotations.UsedImplicitlyAttribute.#ctor(JetBrains.Annotations.ImplicitUseFlags)">
            <summary>
            Initializes new instance of UsedImplicitlyAttribute with specified flags
            </summary>
            <param name="flags">Value of type <see cref="T:JetBrains.Annotations.ImplicitUseFlags"/> indicating usage kind</param>
        </member>
        <member name="P:JetBrains.Annotations.UsedImplicitlyAttribute.Flags">
            <summary>
            Gets value indicating what is meant to be used
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.MeansImplicitUseAttribute">
            <summary>
            Should be used on attributes and causes ReSharper to not mark symbols marked with such attributes as unused (as well as by other usage inspections)
            </summary>
        </member>
        <member name="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor">
            <summary>
            Initializes new instance of MeansImplicitUseAttribute
            </summary>
        </member>
        <member name="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseFlags)">
            <summary>
            Initializes new instance of MeansImplicitUseAttribute with specified flags
            </summary>
            <param name="flags">Value of type <see cref="T:JetBrains.Annotations.ImplicitUseFlags"/> indicating usage kind</param>
        </member>
        <member name="P:JetBrains.Annotations.MeansImplicitUseAttribute.Flags">
            <summary>
            Gets value indicating what is meant to be used
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.ImplicitUseFlags">
            <summary>
            Specify what is considered used implicitly when marked with <see cref="T:JetBrains.Annotations.MeansImplicitUseAttribute"/> or <see cref="T:JetBrains.Annotations.UsedImplicitlyAttribute"/>
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseFlags.Default">
            <summary>
            Only entity marked with attribute considered used
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseFlags.IncludeMembers">
            <summary>
            Entity marked with attribute and all its members considered used
            </summary>
        </member>
        <member name="T:BLToolkit.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.AbstractClassBuilder_TypeIsNotAnInterface">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; must be an interface..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.AsyncAspectBuilder_NoTargetMethod">
            <summary>
              Looks up a localized string similar to Can not figure out the target method for the method &apos;{0}.{1}&apos;..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.CacheAttribute_ParentTypeConstraintViolated">
            <summary>
              Looks up a localized string similar to Parameter &apos;cacheAspectType&apos; must be of CacheAspect type.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.Convert_InvalidCast">
            <summary>
              Looks up a localized string similar to Invalid cast from {0} to {1}.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DataAccessor_IndexIsComplex">
            <summary>
              Looks up a localized string similar to Index has more then one field for the method &apos;{0}.{1}&apos;. Use CompoundValue as the Key type.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DataAccessor_InvalidKeyType">
            <summary>
              Looks up a localized string similar to Key type for the method &apos;{0}.{1}&apos; can be of type object or CompoundValue..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DataAccessor_UnknownIndex">
            <summary>
              Looks up a localized string similar to Index is not defined for the method &apos;{0}.{1}&apos;..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DataAccessorBase_NoDbManager">
            <summary>
              Looks up a localized string similar to DbManager object is not provided..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DataAccessorBuilder_BadKeyType">
            <summary>
              Looks up a localized string similar to Key type for the method &apos;{0}.{1}&apos; can be of type object, CompoundValue, or a scalar type..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DataAccessorBuilder_BadListItemType">
            <summary>
              Looks up a localized string similar to Can not determine object type for the method &apos;{0}.{1}&apos;.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DataAccessorBuilder_CantCreateTypeInstance">
            <summary>
              Looks up a localized string similar to Cannot create an instance of the type &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DataAccessorBuilder_CantExecuteNonQueryToDestination">
            <summary>
              Looks up a localized string similar to ExecuteNonQuery does not support the Destination attribute.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DataAccessorBuilder_DataSetTableMustBeByName">
            <summary>
              Looks up a localized string similar to DataSetTable attribute for method &apos;{0}.{1}&apos; may not be an index.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DataAccessorBuilder_EqualsMethodIsNotPublic">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; does not have &apos;Equals&apos; method.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DataAccessorBuilder_IncompatibleDestinationType">
            <summary>
              Looks up a localized string similar to The return type &apos;{0}&apos; of the method &apos;{1}&apos; is incompatible with the destination parameter type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DataAccessorBuilder_ScalarDestinationIsNotByRef">
            <summary>
              Looks up a localized string similar to ExecuteScalar destination must be an out or a ref parameter..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DataAccessorBuilder_ScalarFieldNameMissing">
            <summary>
              Looks up a localized string similar to Scalar field name is not defined for the method &apos;{0}.{1}&apos;..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DataAccessorBuilderTooManyDestinations">
            <summary>
              Looks up a localized string similar to More then one parameter is marked as destination.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DataAccessot_ParameterNotFound">
            <summary>
              Looks up a localized string similar to No such parameter: &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DbManager_CannotUpdateNullDataset">
            <summary>
              Looks up a localized string similar to DataSet must be initialized before calling Update routine. Cannot update database from a null dataset..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DbManager_CannotUpdateNullDataTable">
            <summary>
              Looks up a localized string similar to DataTable must be initialized before calling Update routine. Cannot update database from a null data table..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DbManager_ConnectionTypeMismatch">
            <summary>
              Looks up a localized string similar to The connection does not match the data provider type..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DbManager_InvalidDataProviderConnectionType">
            <summary>
              Looks up a localized string similar to dataProvider.ConnectionType must be a valid connection type.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DbManager_InvalidDataProviderName">
            <summary>
              Looks up a localized string similar to dataProvider.Name must be a valid string.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DbManager_InvalidDataProviderProviderName">
            <summary>
              Looks up a localized string similar to dataProvider.ProviderName must be a valid string.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DbManager_InvalidProviderName">
            <summary>
              Looks up a localized string similar to providerName must be a valid string.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DbManager_MismatchParameterCount">
            <summary>
              Looks up a localized string similar to Parameter count does not match Parameter Value count..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DbManager_MoreThenOneDefaultProvider">
            <summary>
              Looks up a localized string similar to Both `{0}&apos; and `{1}&apos; data providers are default.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DbManager_NotDbDataParameter">
            <summary>
              Looks up a localized string similar to Only objects of type IDbDataParameter or arrays of IDbDataParameter are supported.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DbManager_UnknownConfiguration">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; key does not exist in the configuration file..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DbManager_UnknownConnectionType">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; type of the connection could not be recognized..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DbManager_UnknownDataProvider">
            <summary>
              Looks up a localized string similar to A suitable data provider is not available for configuration &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DuckTyping_InterfaceMustBePublic">
            <summary>
              Looks up a localized string similar to The interface must be public..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DuckTyping_InterfaceTypeMustBeAnInterface">
            <summary>
              Looks up a localized string similar to &apos;interfaceType&apos; must be an interface..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DuckTyping_InvalidNumberOfObjs">
            <summary>
              Looks up a localized string similar to Invalid number of &apos;baseObjectTypes&apos; or &apos;objs&apos;..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.DuckTyping_NotASubtypeOf">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a subtype of &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.EmitHelper_NoSuchMethod">
            <summary>
              Looks up a localized string similar to Failed to query type &apos;{0}&apos; for method &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.EmitHelper_NotExpectedType">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; is not expected..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.InterceptCallInfo_CallMethodInfoIsNotMutable">
            <summary>
              Looks up a localized string similar to MethodInfo can not be changed..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.MapIndex_BadField">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; does not contain field &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.MapIndex_EmptyFields">
            <summary>
              Looks up a localized string similar to At least one field name or index must be specified.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.MapIndex_EmptyIndices">
            <summary>
              Looks up a localized string similar to At least one field index must be specified.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.MapIndex_EmptyNames">
            <summary>
              Looks up a localized string similar to At least one field name must be specified.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.MappingSchema_IncompatibleArrayTypes">
            <summary>
              Looks up a localized string similar to Can not convert array of type &apos;{0}&apos; to array of &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.NameOrIndexParameter_BadIndex">
            <summary>
              Looks up a localized string similar to The index parameter must be greater or equal to zero..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.NameOrIndexParameter_BadName">
            <summary>
              Looks up a localized string similar to Name must be a valid string..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.OverloadAspectBuilder_NoOverloadedMethod">
            <summary>
              Looks up a localized string similar to Can not figure out the overloaded method for the method &apos;{0}.{1}&apos;..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.TypeBuilder_CannotGetGetter">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; type does not have appropriate getter. See &apos;{1}&apos; member &apos;{2}&apos; of &apos;{3}&apos; type..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.TypeBuilder_CannotGetSetter">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; type does not have appropriate setter. See &apos;{1}&apos; member &apos;{2}&apos; of &apos;{3}&apos; type..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.TypeBuilder_GenericShouldBeSingleTyped">
            <summary>
              Looks up a localized string similar to Could not build the &apos;{0}&apos; property of the &apos;{1}&apos; type: generic type &apos;{2}&apos; and it&apos;s generic parameter types should have only one parameter type..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.TypeBuilder_NoDefaultCtor">
            <summary>
              Looks up a localized string similar to Could not build the &apos;{0}&apos; type: default constructor not found..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.TypeBuilder_PropertyTypeHasNoCtorWithParamType">
            <summary>
              Looks up a localized string similar to Could not build the &apos;{0}&apos; property of the &apos;{1}&apos; type: type &apos;{2}&apos; has to have constructor taking type &apos;{3}&apos;..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.TypeBuilder_PropertyTypeHasNoPublicCtor">
            <summary>
              Looks up a localized string similar to Could not build the &apos;{0}&apos; property of the &apos;{1}&apos; type: type &apos;{2}&apos; has to have public constructor..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.TypeBuilder_PropertyTypeHasNoPublicDefaultCtor">
            <summary>
              Looks up a localized string similar to Could not build the &apos;{0}&apos; property of the &apos;{1}&apos; type: type &apos;{2}&apos; has to have public default constructor..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.TypeBuilder_PublicMethodMustBeImplemented">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; must implement required public method &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.TypeBuilder_PublicMethodNotImplemented">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; does not implement public method &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.TypeBuilder_UnknownParameterType">
            <summary>
              Looks up a localized string similar to The method &apos;{0}&apos; of &apos;{1}&apos; has parameter &apos;{2}&apos; wich can&apos;t be handled. Please specify attrbutes [Parent] or [PropertyInfo] to get access to them..
            </summary>
        </member>
        <member name="P:BLToolkit.Properties.Resources.TypeFactory_BuildFailed">
            <summary>
              Looks up a localized string similar to Could not build the &apos;{0}&apos; type..
            </summary>
        </member>
        <member name="M:BLToolkit.Data.Linq.Extensions.Compile``2(BLToolkit.Data.Linq.IDataContext,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Compiles the query.
            </summary>
            <returns>
            A generic delegate that represents the compiled query.
            </returns>
            <param name="dataContext"></param>
            <param name="query">
            The query expression to be compiled.
            </param>
            <typeparam name="TDc">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TResult">
            Returned type of the delegate returned by the method.
            </typeparam>
        </member>
        <member name="M:BLToolkit.Data.Linq.Extensions.Compile``3(BLToolkit.Data.Linq.IDataContext,System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
            <summary>
            Compiles the query.
            </summary>
            <returns>
            A generic delegate that represents the compiled query.
            </returns>
            <param name="dataContext"></param>
            <param name="query">
            The query expression to be compiled.
            </param>
            <typeparam name="TDc">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg1">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TResult">
            Returned type of the delegate returned by the method.
            </typeparam>
        </member>
        <member name="M:BLToolkit.Data.Linq.Extensions.Compile``4(BLToolkit.Data.Linq.IDataContext,System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})">
            <summary>
            Compiles the query.
            </summary>
            <returns>
            A generic delegate that represents the compiled query.
            </returns>
            <param name="dataContext"></param>
            <param name="query">
            The query expression to be compiled.
            </param>
            <typeparam name="TDc">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg1">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg2">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TResult">
            Returned type of the delegate returned by the method.
            </typeparam>
        </member>
        <member name="M:BLToolkit.Data.Linq.Extensions.Compile``5(BLToolkit.Data.Linq.IDataContext,System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})">
            <summary>
            Compiles the query.
            </summary>
            <returns>
            A generic delegate that represents the compiled query.
            </returns>
            <param name="dataContext"></param>
            <param name="query">
            The query expression to be compiled.
            </param>
            <typeparam name="TDc">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg1">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg2">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TArg3">
            Represents the type of the parameter that has to be passed in when executing the delegate returned by the method.
            </typeparam>
            <typeparam name="TResult">
            Returned type of the delegate returned by the method.
            </typeparam>
        </member>
        <member name="T:BLToolkit.Reflection.TypeHelper">
            <summary>
            A wrapper around the <see cref="P:BLToolkit.Reflection.TypeHelper.Type"/> class.
            </summary>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Reflection.TypeHelper"/> class.
            </summary>
            <param name="type">The Type to wrap.</param>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.op_Implicit(System.Type)~BLToolkit.Reflection.TypeHelper">
            <summary>
            Converts the supplied <see cref="P:BLToolkit.Reflection.TypeHelper.Type"/> to a <see cref="T:BLToolkit.Reflection.TypeHelper"/>.
            </summary>
            <param name="type">The Type.</param>
            <returns>A TypeHelper.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.op_Implicit(BLToolkit.Reflection.TypeHelper)~System.Type">
            <summary>
            Converts the supplied <see cref="T:BLToolkit.Reflection.TypeHelper"/> to a <see cref="P:BLToolkit.Reflection.TypeHelper.Type"/>.
            </summary>
            <param name="typeHelper">The TypeHelper.</param>
            <returns>A Type.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetCustomAttributes(System.Type,System.Boolean)">
            <summary>
            Returns an array of custom attributes identified by <b>Type</b>.
            </summary>
            <param name="attributeType">The type of attribute to search for.
            Only attributes that are assignable to this type are returned.</param>
            <param name="inherit">Specifies whether to search this member's inheritance chain
            to find the attributes.</param>
            <returns>An array of custom attributes defined on this reflected member,
            or an array with zero (0) elements if no attributes are defined.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetCustomAttributes(System.Type)">
            <summary>
            Returns an array of custom attributes identified by <b>Type</b>
            including attribute's inheritance chain.
            </summary>
            <param name="attributeType">The type of attribute to search for.
            Only attributes that are assignable to this type are returned.</param>
            <returns>An array of custom attributes defined on this reflected member,
            or an array with zero (0) elements if no attributes are defined.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetCustomAttributes(System.Boolean)">
            <summary>
            Returns an array of all of the custom attributes.
            </summary>
            <param name="inherit">Specifies whether to search this member's inheritance chain
            to find the attributes.</param>
            <returns>An array of custom attributes defined on this reflected member,
            or an array with zero (0) elements if no attributes are defined.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetCustomAttributes">
            <summary>
            Returns an array of all of the custom attributes including attributes' inheritance chain.
            </summary>
            <returns>An array of custom attributes defined on this reflected member,
            or an array with zero (0) elements if no attributes are defined.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetAttributes(System.Type)">
            <summary>
            Returns an array of all custom attributes identified by <b>Type</b> including type's
            inheritance chain.
            </summary>
            <param name="attributeType">The type of attribute to search for.
            Only attributes that are assignable to this type are returned.</param>
            <returns>An array of custom attributes defined on this reflected member,
            or an array with zero (0) elements if no attributes are defined.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetAttributes">
            <summary>
            Returns an array of all custom attributes including type's inheritance chain.
            </summary>
            <returns>An array of custom attributes defined on this reflected member,
            or an array with zero (0) elements if no attributes are defined.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetAttributes(System.Type,System.Type)">
            <summary>
            Returns an array of custom attributes applied to a type.
            </summary>
            <param name="type">A type instance.</param>
            <param name="attributeType">The type of attribute to search for.
            Only attributes that are assignable to this type are returned.</param>
            <returns>An array of custom attributes applied to this type,
            or an array with zero (0) elements if no attributes have been applied.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetFirstAttribute(System.Type,System.Type)">
            <summary>
            Retrieves a custom attribute applied to a type.
            </summary>
            <param name="type">A type instance.</param>
            <param name="attributeType">The type of attribute to search for.
            Only attributes that are assignable to this type are returned.</param>
            <returns>A reference to the first custom attribute of type <paramref name="attributeType"/>
            that is applied to element, or null if there is no such attribute.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BLToolkit.Reflection.TypeHelper.GetFirstAttribute``1(System.Type)" -->
        <member name="M:BLToolkit.Reflection.TypeHelper.GetMethods">
            <summary>
            Returns all the methods of the current Type.
            </summary>
            <returns>An array of <see cref="T:System.Reflection.MethodInfo"/> objects representing all methods 
            defined for the current Type.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetPublicMethods">
            <summary>
            Returns all the public methods of the current Type.
            </summary>
            <returns>An array of <see cref="T:System.Reflection.MethodInfo"/> objects representing all the public methods 
            defined for the current Type.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetMethods(System.Reflection.BindingFlags)">
            <summary>
            Searches for the methods defined for the current Type,
            using the specified binding constraints.
            </summary>
            <param name="flags">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> 
            that specify how the search is conducted.</param>
            <returns>An array of <see cref="T:System.Reflection.MethodInfo"/> objects representing all methods defined 
            for the current Type that match the specified binding constraints.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetMethods(System.Boolean)">
            <summary>
            Returns all the generic or non-generic methods of the current Type.
            </summary>
            <param name="generic">True to return all generic methods, false to return all non-generic.</param>
            <returns>An array of <see cref="T:System.Reflection.MethodInfo"/> objects representing all methods 
            defined for the current Type.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetPublicMethods(System.Boolean)">
            <summary>
            Returns all the public and non-generic methods of the current Type.
            </summary>
            <param name="generic">True to return all generic methods, false to return all non-generic.</param>
            <returns>An array of <see cref="T:System.Reflection.MethodInfo"/> objects representing all the public methods 
            defined for the current Type.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetMethods(System.Boolean,System.Reflection.BindingFlags)">
            <summary>
            Searches for the generic methods defined for the current Type,
            using the specified binding constraints.
            </summary>
            <param name="generic">True to return all generic methods, false to return all non-generic.</param>
            <param name="flags">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> 
            that specify how the search is conducted.</param>
            <returns>An array of <see cref="T:System.Reflection.MethodInfo"/> objects representing all methods defined 
            for the current Type that match the specified binding constraints.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetMethod(System.String)">
            <summary>
            Searches for the specified instance method (public or non-public), using the specified name.
            </summary>
            <param name="methodName">The String containing the name of the method to get.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            that matches the specified name, if found; otherwise, null.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetPublicMethod(System.String)">
            <summary>
            Searches for the specified public instance method, using the specified name.
            </summary>
            <param name="methodName">The String containing the name of the method to get.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            that matches the specified name, if found; otherwise, null.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetMethod(System.String,System.Reflection.BindingFlags)">
            <summary>
            Searches for the specified method, using the specified name and binding flags.
            </summary>
            <param name="methodName">The String containing the name of the method to get.</param>
            <param name="flags">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> 
            that specify how the search is conducted.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            that matches the specified requirements, if found; otherwise, null.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetPublicMethod(System.String,System.Type[])">
            <summary>
            Searches for the specified public instance method, using the specified name.
            </summary>
            <param name="methodName">The String containing the name of the method to get.</param>
            <param name="types">An array of <see cref="T:System.Type"/> objects representing
            the number, order, and type of the parameters for the method to get.-or-
            An empty array of the type <see cref="T:System.Type"/> (for example, <see cref="F:System.Type.EmptyTypes"/>)
            to get a method that takes no parameters.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            that matches the specified requirements, if found; otherwise, null.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetMethod(System.String,System.Type[])">
            <summary>
            Searches for the specified instance method (public or non-public),
            using the specified name and argument types.
            </summary>
            <param name="methodName">The String containing the name of the method to get.</param>
            <param name="types">An array of <see cref="T:System.Type"/> objects representing
            the number, order, and type of the parameters for the method to get.-or-
            An empty array of the type <see cref="T:System.Type"/> (for example, <see cref="F:System.Type.EmptyTypes"/>)
            to get a method that takes no parameters.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            that matches the specified requirements, if found; otherwise, null.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetMethod(System.String,System.Reflection.BindingFlags,System.Type[])">
            <summary>
            Searches for the specified method, using the specified name,
            binding flags and argument types.
            </summary>
            <param name="methodName">The String containing the name of the method to get.</param>
            <param name="types">An array of <see cref="T:System.Type"/> objects representing
            the number, order, and type of the parameters for the method to get.-or-
            An empty array of the type <see cref="T:System.Type"/> (for example, <see cref="F:System.Type.EmptyTypes"/>)
            to get a method that takes no parameters.</param>
            <param name="flags">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> 
            that specify how the search is conducted.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            that matches the specified requirements, if found; otherwise, null.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetMethod(System.Boolean,System.String)">
            <summary>
            Searches for the specified instance method (public or non-public), using the specified name.
            </summary>
            <param name="methodName">The String containing the name of the method to get.</param>
            <param name="generic">True to search only for a generic method, or
            False to search only for non-generic method.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            that matches the specified requirements, if found; otherwise, null.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetPublicMethod(System.Boolean,System.String)">
            <summary>
            Searches for the specified public instance method, using the specified name.
            </summary>
            <param name="methodName">The String containing the name of the method to get.</param>
            <param name="generic">True to search only for a generic method, or
            False to search only for non-generic method.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            that matches the specified requirements, if found; otherwise, null.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetMethod(System.Boolean,System.String,System.Reflection.BindingFlags)">
            <summary>
            Searches for the specified method, using the specified name and binding flags.
            </summary>
            <param name="methodName">The String containing the name of the method to get.</param>
            <param name="generic">True to search only for a generic method, or
            False to search only for non-generic method.</param>
            <param name="flags">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> 
            that specify how the search is conducted.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            that matches the specified requirements, if found; otherwise, null.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetPublicMethod(System.Boolean,System.String,System.Type[])">
            <summary>
            Searches for the specified public instance method, using the specified name and argument types.
            </summary>
            <param name="methodName">The String containing the name of the method to get.</param>
            <param name="generic">True to search only for a generic method, or
            False to search only for non-generic method.</param>
            <param name="types">An array of <see cref="T:System.Type"/> objects representing
            the number, order, and type of the parameters for the method to get.-or-
            An empty array of the type <see cref="T:System.Type"/> (for example, <see cref="F:System.Type.EmptyTypes"/>)
            to get a method that takes no parameters.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            that matches the specified requirements, if found; otherwise, null.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetMethod(System.Boolean,System.String,System.Type[])">
            <summary>
            Searches for the specified instance method (public or non-public),
            using the specified name and argument types.
            </summary>
            <param name="methodName">The String containing the name of the method to get.</param>
            <param name="generic">True to search only for a generic method, or
            False to search only for non-generic method.</param>
            <param name="types">An array of <see cref="T:System.Type"/> objects representing
            the number, order, and type of the parameters for the method to get.-or-
            An empty array of the type <see cref="T:System.Type"/> (for example, <see cref="F:System.Type.EmptyTypes"/>)
            to get a method that takes no parameters.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            that matches the specified requirements, if found; otherwise, null.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetMethod(System.Boolean,System.String,System.Reflection.BindingFlags,System.Type[])">
            <summary>
            Searches for the specified method using the specified name, binding flags and argument types.
            </summary>
            <param name="methodName">The String containing the name of the method to get.</param>
            <param name="generic">True to search only for a generic method, or
            False to search only for non-generic method.</param>
            <param name="types">An array of <see cref="T:System.Type"/> objects representing
            the number, order, and type of the parameters for the method to get.-or-
            An empty array of the type <see cref="T:System.Type"/> (for example, <see cref="F:System.Type.EmptyTypes"/>)
            to get a method that takes no parameters.</param>
            <param name="flags">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> 
            that specify how the search is conducted.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            that matches the specified requirements, if found; otherwise, null.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetFields">
            <summary>
            Returns all the public fields of the current Type.
            </summary>
            <returns>An array of <see cref="T:System.Reflection.FieldInfo"/> objects representing
            all the public fields defined for the current Type.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetFields(System.Reflection.BindingFlags)">
            <summary>
            Searches for the fields of the current Type, using the specified binding constraints.
            </summary>
            <param name="bindingFlags">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> 
            that specify how the search is conducted.</param>
            <returns>An array of <see cref="T:System.Reflection.FieldInfo"/> objects representing
            all fields of the current Type
            that match the specified binding constraints.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetField(System.String)">
            <summary>
            Searches for the public field with the specified name.
            </summary>
            <param name="name">The String containing the name of the public field to get.</param>
            <returns>A <see cref="T:System.Reflection.PropertyInfo"/> object representing the public field with the specified name,
            if found; otherwise, a null reference.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetProperties">
            <summary>
            Returns all the public properties of the current Type.
            </summary>
            <returns>An array of <see cref="T:System.Reflection.PropertyInfo"/> objects representing
            all public properties of the current Type.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetProperties(System.Reflection.BindingFlags)">
            <summary>
            Searches for the properties of the current Type, using the specified binding constraints.
            </summary>
            <param name="bindingFlags">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> 
            that specify how the search is conducted.</param>
            <returns>An array of <see cref="T:System.Reflection.PropertyInfo"/> objects representing
            all properties of the current Type
            that match the specified binding constraints.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetProperty(System.String)">
            <summary>
            Searches for the public property with the specified name.
            </summary>
            <param name="name">The String containing the name of the public property to get.</param>
            <returns>A <see cref="T:System.Reflection.PropertyInfo"/> object representing the public property with the specified name,
            if found; otherwise, a null reference.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetInterfaceMap(System.Type)">
            <summary>
            Returns an interface mapping for the current <see cref="P:BLToolkit.Reflection.TypeHelper.Type"/>.
            </summary>
            <param name="interfaceType">The <see cref="T:System.Type"/>
            of the interface of which to retrieve a mapping.</param>
            <returns>An <see cref="T:System.Reflection.InterfaceMapping"/> object representing the interface
            mapping for <paramref name="interfaceType"/>.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetPublicConstructor(System.Type[])">
            <summary>
            Searches for a public instance constructor whose parameters match
            the types in the specified array.
            </summary>
            <param name="types">An array of Type objects representing the number,
            order, and type of the parameters for the constructor to get.</param>
            <returns>A <see cref="T:System.Reflection.ConstructorInfo"/> object representing the
            public instance constructor whose parameters match the types in
            the parameter type array, if found; otherwise, a null reference.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetConstructor(System.Type)">
            <summary>
            Searches for an instance constructor (public or non-public) whose
            parameters match the types in the specified array.
            </summary>
            <param name="parameterType">Type object representing type of the
            parameter for the constructor to get.</param>
            <returns>A <see cref="T:System.Reflection.ConstructorInfo"/> object representing the constructor
             whose parameters match the types in the parameter type array, if found;
            otherwise, a null reference.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetConstructor(System.Type,System.Type[])">
            <summary>
            Searches for an instance constructor (public or non-public) whose
            parameters match the types in the specified array.
            </summary>
            <param name="type">An instance of <see cref="T:System.Type"/> to search constructor for.</param>
            <param name="types">An array of Type objects representing the number,
            order, and type of the parameters for the constructor to get.</param>
            <returns>A <see cref="T:System.Reflection.ConstructorInfo"/> object representing the constructor
             whose parameters match the types in the parameter type array, if found;
            otherwise, a null reference.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetPublicDefaultConstructor">
            <summary>
            Searches for a public default constructor.
            </summary>
            <returns>A <see cref="T:System.Reflection.ConstructorInfo"/> object representing the constructor.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetDefaultConstructor">
            <summary>
            Searches for a default constructor.
            </summary>
            <returns>A <see cref="T:System.Reflection.ConstructorInfo"/> object representing the constructor.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetDefaultConstructor(System.Type)">
            <summary>
            Searches for a default constructor.
            </summary>
            <param name="type">An instance of <see cref="T:System.Type"/> to search constructor for.</param>
            <returns>A <see cref="T:System.Reflection.ConstructorInfo"/> object representing the constructor.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetPublicConstructors">
            <summary>
            Searches for a public constructors.
            </summary>
            <returns>An array of <see cref="T:System.Reflection.ConstructorInfo"/> objects
            representing all the type public constructors, if found; otherwise, an empty array.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetConstructors">
            <summary>
            Searches for all constructors (except type constructors).
            </summary>
            <returns>An array of <see cref="T:System.Reflection.ConstructorInfo"/> objects
            representing all the type constructors, if found; otherwise, an empty array.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.IsNullable(System.Type)">
            <summary>
            Gets a value indicating whether a type (or type's element type)
            instance can be null in the underlying data store.
            </summary>
            <param name="type">A <see cref="T:System.Type"/> instance. </param>
            <returns> True, if the type parameter is a closed generic nullable type; otherwise, False.</returns>
            <remarks>Arrays of Nullable types are treated as Nullable types.</remarks>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetUnderlyingType(System.Type)">
            <summary>
            Returns the underlying type argument of the specified type.
            </summary>
            <param name="type">A <see cref="T:System.Type"/> instance. </param>
            <returns><list>
            <item>The type argument of the type parameter,
            if the type parameter is a closed generic nullable type.</item>
            <item>The underlying Type if the type parameter is an enum type.</item>
            <item>Otherwise, the type itself.</item>
            </list>
            </returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.IsSameOrParent(System.Type,System.Type)">
            <summary>
            Determines whether the specified types are considered equal.
            </summary>
            <param name="parent">A <see cref="T:System.Type"/> instance. </param>
            <param name="child">A type possible derived from the <c>parent</c> type</param>
            <returns>True, when an object instance of the type <c>child</c>
            can be used as an object of the type <c>parent</c>; otherwise, false.</returns>
            <remarks>Note that nullable types does not have a parent-child relation to it's underlying type.
            For example, the 'int?' type (nullable int) and the 'int' type
            aren't a parent and it's child.</remarks>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetMethod(System.Type,System.Boolean,System.String,System.Reflection.BindingFlags)">
            <summary>
            Searches for the method defined for a <see cref="T:System.Type"/>,
            using the specified name and binding flags.
            </summary>
            <param name="methodName">The String containing the name of the method to get.</param>
            <param name="generic">True to search only for a generic method, or
            False to search only for non-generic method.</param>
            <param name="type">A <see cref="T:System.Type"/> instance. </param>
            <param name="flags">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> 
            that specify how the search is conducted.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            that matches the specified requirements, if found; otherwise, null.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetMethods(System.Type,System.Boolean,System.Reflection.BindingFlags)">
            <summary>
            Searches for the methods defined for a <see cref="T:System.Type"/>,
            using the specified name and binding flags.
            </summary>
            <param name="type">A <see cref="T:System.Type"/> instance. </param>
            <param name="generic">True to return all generic methods, false to return all non-generic.</param>
            <param name="flags">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> 
            that specify how the search is conducted.</param>
            <returns>An array of <see cref="T:System.Reflection.MethodInfo"/> objects representing all methods defined 
            for the current Type that match the specified binding constraints.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetMethod(System.Type,System.String,System.Reflection.BindingFlags,System.Int32,System.Type[])">
            <summary>
            Searches for the method defined for a <see cref="T:System.Type"/>,
            using the specified name and binding flags.
            </summary>
            <param name="type">A <see cref="T:System.Type"/> instance. </param>
            <param name="methodName">The String containing the name of the method to get.</param>
            <param name="requiredParametersCount">Number of required (non optional)
            parameter types.</param>
            <param name="bindingFlags">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> 
            that specify how the search is conducted.</param>
            <param name="parameterTypes">An array of <see cref="T:System.Type"/> objects representing
            the number, order, and type of the parameters for the method to get.-or-
            An empty array of the type <see cref="T:System.Type"/> (for example, <see cref="F:System.Type.EmptyTypes"/>)
            to get a method that takes no parameters.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            that matches the specified requirements, if found; otherwise, null.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetPropertyInfo(System.Type,System.String,System.Type,System.Type[])">
            <summary>
            Searches for the property defined for a <see cref="T:System.Type"/>,
            using the specified name and parameter types.
            </summary>
            <param name="type">A <see cref="T:System.Type"/> instance. </param>
            <param name="propertyName">The String containing the name of the method to get.</param>
            <param name="types">An array of Type objects representing the number,
            order, and type of the parameters for the constructor to get.</param>
            <param name="returnType">The property return <see cref="T:System.Type"/>. </param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            that matches the specified requirements, if found; otherwise, null.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetListItemType(System.Object)">
            <summary>
             Gets the Type of a list item.
            </summary>
             <param name="list">A <see cref="T:System.Object"/> instance. </param>
            <returns>The Type instance that represents the exact runtime type of a list item.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetListItemType(System.Type)">
            <summary>
             Gets the Type of a list item.
            </summary>
             <param name="listType">A <see cref="T:System.Type"/> instance. </param>
            <returns>The Type instance that represents the exact runtime type of a list item.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.IsScalar(System.Type)">
            <summary>
            Gets a value indicating whether a type can be used as a db primitive.
            </summary>
            <param name="type">A <see cref="T:System.Type"/> instance. </param>
            <returns> True, if the type parameter is a primitive type; otherwise, False.</returns>
            <remarks><see cref="T:System.String"/>. <see cref="T:System.IO.Stream"/>. 
            <see cref="T:System.Xml.XmlReader"/>. <see cref="T:System.Xml.XmlDocument"/>. are specially handled by the library
            and, therefore, can be treated as scalar types.</remarks>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.GetGenericArguments(System.Type,System.Type)">
            <summary>
             Returns an array of Type objects that represent the type arguments
             of a generic type or the type parameters of a generic type definition.
            </summary>
             <param name="type">A <see cref="T:System.Type"/> instance.</param>
            <param name="baseType">Non generic base type.</param>
            <returns>An array of Type objects that represent the type arguments
             of a generic type. Returns an empty array if the current type is not a generic type.</returns>
        </member>
        <member name="M:BLToolkit.Reflection.TypeHelper.TranslateGenericParameters(System.Type,System.Type[])">
            <summary>
            Substitutes the elements of an array of types for the type parameters
            of the current generic type definition and returns a Type object
            representing the resulting constructed type.
            </summary>
            <param name="type">A <see cref="T:System.Type"/> instance.</param>
            <param name="typeArguments">An array of types to be substituted for
            the type parameters of the current generic type.</param>
            <returns>A Type representing the constructed type formed by substituting
            the elements of <paramref name="typeArguments"/> for the type parameters
            of the current generic type.</returns>
            <seealso cref="M:System.Type.MakeGenericType(System.Type[])"/>
        </member>
        <member name="P:BLToolkit.Reflection.TypeHelper.Type">
            <summary>
            Gets associated Type.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.TypeHelper.FullName">
            <summary>
            Gets the fully qualified name of the Type, including the namespace of the Type.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.TypeHelper.Name">
            <summary>
            Gets the name of the Type.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.TypeHelper.IsAbstract">
            <summary>
            Gets a value indicating whether the Type is abstract and must be overridden.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.TypeHelper.IsArray">
            <summary>
            Gets a value indicating whether the System.Type is an array.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.TypeHelper.IsValueType">
            <summary>
            Gets a value indicating whether the Type is a value type.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.TypeHelper.IsClass">
            <summary>
            Gets a value indicating whether the Type is a class; that is, not a value type or interface.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.TypeHelper.IsInterface">
            <summary>
            Gets a value indicating whether the System.Type is an interface; that is, not a class or a value type.
            </summary>
        </member>
        <member name="P:BLToolkit.Reflection.TypeHelper.IsSerializable">
            <summary>
            Indicates whether the Type is serializable.
            </summary>
        </member>
        <member name="T:BLToolkit.Mapping.MappingException">
            <summary>
            Defines the base class for the namespace exceptions.
            </summary>
            <remarks>
            This class is the base class for exceptions that may occur during
            the execution of the <see cref="T:BLToolkit.Mapping.Map"/> class and other namespace members.
            </remarks>
        </member>
        <member name="M:BLToolkit.Mapping.MappingException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Mapping.MappingException"/> class.
            </summary>
            <remarks>
            This constructor initializes the <see cref="P:System.Exception.Message"/>
            property of the new instance 
            to a system-supplied message that describes the error, 
            such as "A Mapping exception has occurred."
            </remarks>
        </member>
        <member name="M:BLToolkit.Mapping.MappingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Mapping.MappingException"/> class 
            with the specified error message.
            </summary>
            <param name="message">The message to display to the client when the
            exception is thrown.</param>
            <seealso cref="P:System.Exception.Message"/>
        </member>
        <member name="M:BLToolkit.Mapping.MappingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Mapping.MappingException"/> class 
            with the specified error message and InnerException property.
            </summary>
            <param name="message">The message to display to the client when the
            exception is thrown.</param>
            <param name="innerException">The InnerException, if any, that threw
            the current exception.</param>
            <seealso cref="P:System.Exception.Message"/>
            <seealso cref="P:System.Exception.InnerException"/>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BLToolkit.Mapping.MappingException.#ctor(System.Exception)" -->
        <member name="M:BLToolkit.Mapping.MappingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.Mapping.MappingException"/> class
            with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or
            destination.</param>
            <remarks>This constructor is called during deserialization to
            reconstitute the exception object transmitted over a stream.</remarks>
        </member>
        <member name="T:BLToolkit.Aspects.NotNullAttribute">
            <summary>
            http://www.bltoolkit.net/Doc/Aspects/index.htm
            </summary>
        </member>
        <member name="T:BLToolkit.Configuration.BLToolkitSection">
            <summary>
            Implementation of custom configuration section.
            </summary>
        </member>
        <member name="F:BLToolkit.Patterns.MustImplementAttribute.Default">
            <summary>
            All methods are optional and throws <see cref="T:System.NotImplementedException"/> at run tune.
            </summary>
        </member>
        <member name="F:BLToolkit.Patterns.MustImplementAttribute.Aggregate">
            <summary>
            All methods are optional and does nothing at run tune.
            Return value and all output parameters will be set to appropriate default values.
            </summary>
        </member>
        <member name="T:BLToolkit.TypeBuilder.TypeBuilderException">
            <summary>
            Defines the base class for the namespace exceptions.
            </summary>
            <remarks>
            This class is the base class for exceptions that may occur during
            execution of the namespace members.
            </remarks>
        </member>
        <member name="M:BLToolkit.TypeBuilder.TypeBuilderException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.TypeBuilder.TypeBuilderException"/> class.
            </summary>
            <remarks>
            This constructor initializes the <see cref="P:System.Exception.Message"/>
            property of the new instance such as "A Build Type exception has occurred."
            </remarks>
        </member>
        <member name="M:BLToolkit.TypeBuilder.TypeBuilderException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.TypeBuilder.TypeBuilderException"/> class 
            with the specified error message.
            </summary>
            <param name="message">The message to display to the client when the
            exception is thrown.</param>
            <seealso cref="P:System.Exception.Message"/>
        </member>
        <member name="M:BLToolkit.TypeBuilder.TypeBuilderException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.TypeBuilder.TypeBuilderException"/> class 
            with the specified error message and InnerException property.
            </summary>
            <param name="message">The message to display to the client when the
            exception is thrown.</param>
            <param name="innerException">The InnerException, if any, that threw
            the current exception.</param>
            <seealso cref="P:System.Exception.Message"/>
            <seealso cref="P:System.Exception.InnerException"/>
        </member>
        <member name="M:BLToolkit.TypeBuilder.TypeBuilderException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.TypeBuilder.TypeBuilderException"/> class 
            with the specified InnerException property.
            </summary>
            <param name="innerException">The InnerException, if any, that threw
            the current exception.</param>
            <seealso cref="P:System.Exception.InnerException"/>
        </member>
        <member name="M:BLToolkit.TypeBuilder.TypeBuilderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BLToolkit.TypeBuilder.TypeBuilderException"/> class
            with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or
            destination.</param>
            <remarks>This constructor is called during deserialization to
            reconstitute the exception object transmitted over a stream.</remarks>
        </member>
        <member name="T:BLToolkit.Data.OperationType">
            <summary>
            Type of an operation being performed.
            </summary>
        </member>
        <member name="T:BLToolkit.Aspects.LogAttribute">
            <summary>
            http://www.bltoolkit.net/Doc/Aspects/index.htm
            </summary>
        </member>
    </members>
</doc>
